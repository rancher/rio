// Code generated by go-bindata.
// sources:
// stacks/build-controller-stack.yaml
// stacks/build-stack.yaml
// stacks/cert-manager-stack.yaml
// stacks/grafana-stack.yaml
// stacks/istio-crd-stack.yaml
// stacks/istio-stack.yaml
// stacks/istio-telemetry-stack.yaml
// stacks/kiali-stack.yaml
// stacks/localstorage-stack.yaml
// stacks/nfs-stack.yaml
// stacks/prometheus-stack.yaml
// stacks/rio-autoscaler-stack.yaml
// DO NOT EDIT!

package stacks

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _stacksBuildControllerStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\xfb\x6f\xe3\x36\x12\xfe\x3d\x7f\x05\x21\x2c\xd0\x6b\x11\xd9\x7a\x5b\x12\x10\xe0\xd2\xc4\xbd\x0b\xf6\x91\xc5\x26\xbd\x43\x51\x14\x01\x45\x8e\x64\x9e\x25\x52\x20\x29\xef\xee\x6d\xf3\xbf\x1f\x48\x49\x7e\xdb\x8b\xeb\x3e\xf2\x43\x20\x71\x3e\x7e\xfc\x66\x86\x33\x34\x45\x04\x2f\x59\xa5\xf2\x0b\x84\x6a\x51\x55\x8c\x57\xe6\x11\x21\x22\xb8\x06\xae\x73\xf4\xa7\x6b\xdf\xad\xb9\x86\x15\xd4\x13\x63\x92\xa2\xae\x41\xe6\x88\xf1\x52\x0c\xf6\x6d\x84\x04\xaa\x5c\xc6\x99\x3e\x85\xa8\x98\x3e\x6b\x7f\x0f\xc5\x42\x88\xe5\x9e\xf9\xbf\xb8\x75\x8d\x4a\x90\x6e\xaf\x3b\x47\x7f\xae\x8d\x08\x7d\xda\x7a\x46\xc8\xb1\x4c\x4e\x8e\x1c\xc3\xe1\x5c\xee\x1a\xa9\x31\x8a\xb6\x01\xae\x9d\x1c\x95\xb8\x56\xb0\x87\x50\xb8\x69\x6b\xc6\x2b\x27\xdf\x23\x46\x86\x91\x69\x86\x0d\xb9\xef\x79\x97\xfb\x56\xbd\x00\x09\xb8\xd4\x20\x7b\xc0\x8e\xfd\x79\x6f\x19\xd1\xe9\xb6\xd3\x6f\xb1\x5e\x28\x27\x47\xbf\x3b\x4a\x53\xd1\x69\xe7\x8f\x3d\x18\x48\x29\xe4\xfd\x21\x16\xa4\x3c\xc4\x72\x22\x68\xaf\xdc\xf9\x8f\x12\x7c\xdf\x77\x6b\x07\x79\x63\x43\x78\xcc\x3d\xcd\x1a\x78\x09\x1f\xcd\x7c\xe7\xc0\x3b\x1b\xd6\xc1\xda\x87\xf8\x00\xc2\xf1\x7a\x7e\x9f\xae\x43\x08\xc1\x66\x03\x0d\xa0\xfe\xe5\x10\xd4\x80\x52\xb8\x1a\xa9\x1a\x55\x1d\x42\x94\xc6\x64\xa9\x25\x26\x23\x6a\x33\x70\x44\x3a\xe3\x30\xe7\x63\x68\x4e\xb8\x36\xef\xa3\x73\x1c\x61\x22\x73\x16\x40\x3b\x89\x35\x13\xfc\x2c\xa8\xf7\x77\x1b\xb2\xbb\x45\x2e\xb6\x9f\x15\xc8\x15\x23\x60\x4b\xb4\xe8\x58\x4d\xdd\xad\x02\xb4\xc8\xaa\x16\x05\xae\x9f\x5a\x90\x0d\x53\x8a\x09\xae\xfa\x71\x17\xfd\xf0\x13\x6a\x05\x55\x3f\x6c\x5e\x4d\x6a\x54\x8b\x09\x6c\x0f\x2a\x20\x12\xf4\xf6\x08\xac\x80\xeb\x5d\x88\x55\x81\x09\x11\xdd\xae\xa5\xaf\xc4\x06\xb7\x3b\xf3\x3f\x98\xee\x61\xa4\x4c\x29\xb4\xb5\xf8\xd8\xec\xf0\x11\x09\x58\xc3\x65\x05\xfa\xb2\x66\x4a\x5f\xbe\xc7\x9a\x2c\x2e\x5b\xfb\xbf\x6b\xa9\xb1\x51\xa8\x41\x43\xef\xf1\x64\xc9\xb1\x66\x2b\x98\x50\x58\x4d\xed\xc8\xd7\xa4\x9a\x2a\x8d\x75\xf7\x15\x19\x35\x34\x6d\x8d\x35\x7c\x1d\x4a\x52\x77\x4a\x83\x3c\xc1\xfc\x13\x22\x98\x2c\x18\xaf\x26\x8c\x6b\x90\x1c\xd7\x3b\x93\x59\x83\xab\x1d\x34\x6e\x99\xcd\x8d\xdd\x26\x93\x65\xaa\x26\x4c\x4c\x49\xa7\xb4\x68\x24\x28\xd1\x49\x02\x14\x4a\xdb\xdf\x04\x1f\x26\x5a\x92\x1c\x55\x44\x1a\xf0\x40\xef\x4a\xa8\x01\x2b\x50\xd3\x8a\xe9\x45\x57\x4c\x88\x68\x46\x5b\x1f\x86\x29\x69\xe8\x74\xb3\x57\xff\xae\x16\x38\x88\x93\x3c\x21\x99\x1f\x86\xa9\xef\xc1\x2c\x26\x5e\x3c\x83\xc4\x4b\xa3\x32\xa6\x24\x89\x8b\x84\xc4\x31\x29\xb2\x14\xa2\x20\xc9\x82\x32\x8a\x83\xc8\x2f\x53\xea\x79\x41\xe8\xc5\x5e\x19\xcc\x0a\x9c\x8d\xc7\xd3\x78\x6c\x19\xc7\xc6\xa3\x6b\x0a\x9a\x4c\x7b\x9b\x3b\x8c\x59\x04\xf0\x15\x93\x82\x9b\x4d\x38\x4e\x79\xf8\xed\xe1\x71\xfe\xfa\xe9\xcd\xf5\xeb\xf9\xc3\xdb\xeb\x9b\xf9\xd5\x8b\x4f\xeb\xe7\xe7\x61\x8d\xa6\xc1\x9c\x8e\x13\x0c\xa1\x16\x7d\xcb\x1d\x87\xfa\x37\xbd\x90\xa0\x16\xa2\xa6\xc3\xf0\xdd\x9b\x5f\xee\x47\xc4\x70\x14\x9a\x08\x0e\x43\x7f\x2d\x8c\xeb\x13\x75\x0c\x63\x10\x14\x21\xce\x66\x3e\x09\xa9\x4f\xe3\x38\xc8\x08\xf6\x93\x32\x29\x12\xea\x27\x69\x81\xbd\x90\xf8\x65\x58\x90\xc2\x9b\x45\x51\x30\xf3\xcb\x32\x4d\xd3\x20\x9c\x45\x25\x0d\x8b\xa4\xa4\xc5\x28\xd0\x9e\xc4\x5f\x2a\x6f\x3c\xce\x47\x71\x90\x94\x25\x0e\x70\x16\x04\x84\x02\x8e\x63\x1a\xfb\x34\x4d\xa2\xb4\x88\x8d\x9e\x30\xa6\x71\x9c\xa5\x50\x14\xc9\x2c\xcd\xd2\x28\x23\x91\x9f\x7a\x01\x85\x24\x84\x59\x18\x44\x43\x8e\x5d\xe4\x72\xd1\x7e\xb9\x38\x2e\xda\x51\x57\xe6\xc7\xb4\x48\x13\x8f\xfa\x45\xe9\x7b\x7e\x18\x04\x65\x18\x17\x5e\x02\x59\x12\x62\x9f\x12\xe2\x79\x90\x11\xbf\x00\x00\x52\x62\x0c\x65\x12\x7b\xb4\x88\x20\x8a\xc3\x24\x82\xc4\xbf\xb8\xb8\xb8\x58\x76\x05\x48\x0e\xba\xef\xc8\xeb\x7e\x4a\x9f\xfa\x2a\x7a\x1a\xcb\xe8\x69\xab\x8e\x0c\xd2\x45\x3f\x1b\x49\x8f\x43\x09\x4f\x0e\x2b\x7d\xe5\xe3\xba\x5d\x60\xdf\x82\xef\x8c\xdb\x93\xb3\xc5\xbd\x85\xff\xec\xda\x37\x7d\x17\xf9\x3f\x24\x6c\x79\xd6\x60\xce\x4a\x50\x9b\x5f\x83\xb8\x65\xff\x02\x69\x7a\x48\x7e\xbe\xff\x6c\xf1\x21\xb4\x64\x9c\xe6\xbd\x63\xf6\xbd\x01\x8d\x29\xd6\x38\x1f\xce\x3b\xb3\x62\x8e\x36\x5b\x7d\x6b\xd8\x0a\xc9\xd1\x98\x78\x2b\xdc\x9a\x55\x0b\x64\x9c\xff\x45\x7d\xea\x1b\x15\x98\xfb\xed\x03\x36\x16\xdf\xf7\x0c\xd7\xb7\x29\xf8\xef\x11\x2c\xa2\xdc\x12\x34\x59\x80\xfc\xb2\x78\x91\x5a\x74\xb4\x47\x82\x54\xd3\x7d\xde\xef\xe1\x0b\x17\xed\xf7\xcc\xf9\xd7\xec\xa3\xa7\x42\x74\xb6\x23\x8d\x71\x39\xd6\xcb\xce\x84\xc9\x72\x2e\x87\xfa\xd8\x0e\x46\x8b\x25\x6e\x40\x83\x54\xe3\x88\x3b\x4c\xb9\x7b\x7d\xfd\x8f\xf9\xfa\x57\x38\x05\x45\x24\x6b\xb5\x55\xf8\x6f\x73\xb9\x43\x5a\xa0\xb6\x2b\x6a\xa6\x16\x48\x2f\x00\x49\x50\x5d\xad\x19\xaf\xd0\xe6\xb4\xda\xb0\xdd\xde\xdf\xbc\x9c\xbf\xfb\xe5\xee\xd5\x09\xca\xc7\x05\x58\x24\x12\xa5\x65\xbb\x15\x64\x09\xb2\x64\x35\x6c\xe1\x4b\xdc\xd5\x3a\x47\xce\xc6\xe8\xec\x2d\xf3\xf6\xd7\x87\x7f\x9e\xd4\x6c\xee\xa4\xa8\xed\xd4\x02\x09\x89\xb8\xd0\x47\x98\xb5\xec\x0e\x38\x6f\xef\xde\xcd\x6f\x1e\xef\xdf\xfd\x76\x5a\x39\x65\x12\x88\x16\xf2\xa3\xfd\x66\x80\x19\x37\x61\x30\x6e\xe0\xb6\x3d\xb2\xca\xf4\xbd\x90\x4b\xbb\x57\xf7\xd7\xfa\xf9\xd7\xbb\x57\xb7\x2f\xef\x1e\x9f\x6e\x5e\xdd\xcd\xdf\x3c\x3e\x9d\x49\xc2\x7e\xc4\xec\x56\x78\xc9\x34\x22\x35\x03\xae\xd1\xdf\x6c\xce\x89\xae\x7f\xdc\x49\xc8\xb6\x8e\x46\x14\x1f\xa7\xe3\xd6\xc8\x57\xde\x24\x9c\xf8\xae\x14\x42\xd7\xa0\xd4\xfa\x0c\x88\xbc\x19\x21\xb3\x32\x88\xc0\x8f\x23\x3c\x2b\x92\x2c\xcb\x66\x19\x99\x11\xa0\x69\x9a\xa4\x5e\x4c\x30\x49\x66\x59\xe0\xf9\x49\x46\x09\x14\x84\xe0\xcc\x4f\x92\x28\x0b\x01\x82\x22\x39\xe9\xe2\xed\xf5\xfc\xf5\xfd\x9b\xa7\xeb\xdb\xdb\x77\xf3\x87\x87\xd3\x4e\x62\x4a\x25\x28\x75\xe0\x27\xc5\xd0\x08\x3e\xf8\xb9\x64\x9a\xfe\x38\xde\xd0\x8e\x25\x96\xb4\xf9\x74\xed\x2b\xcd\xfd\x20\x8c\x46\x65\x4a\x43\x7b\xb0\xfd\xfb\x6b\x26\xe6\xd4\x35\x3b\x66\xcd\x38\x34\x8f\x17\x2f\x3e\x1d\x4d\xd5\xe6\xda\x6a\x52\xcc\x78\x75\xcb\xa4\x45\xaf\x37\xd1\x06\x31\xfe\xb6\x46\xbf\x3b\x63\xaa\x9c\x4b\xe4\xb8\xae\x71\xf8\x6a\x7b\x85\xdd\x48\x3d\x1b\x94\x9d\x71\x70\xab\x36\x7f\x8e\xeb\xb6\x52\x54\x26\x64\x57\x6d\x8d\xd9\xfe\xa7\x8f\x35\xaa\x94\xf6\xfb\x16\xbd\xa2\xeb\x72\x9a\xac\xbc\xcf\xa1\x5d\xd1\x6a\x23\xc0\xc0\x4d\xa4\x8c\xd0\x4d\x71\x3f\x9f\x9a\x5e\x0b\x82\xad\x7b\xf6\xa3\xda\x07\x7d\x35\xe9\x7d\x5d\x8f\x6f\x44\x18\xd3\x71\x12\xf8\xd0\x0a\xa9\x41\x5e\xd9\x2c\xf4\x04\xe3\xd8\xa8\x6b\xd4\xd4\xa7\xe3\x38\xc6\x64\xd4\x60\x4c\xb7\x78\x76\xfe\xf8\x5f\x00\x00\x00\xff\xff\xf3\xc6\x0c\x82\x00\x14\x00\x00")

func stacksBuildControllerStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksBuildControllerStackYaml,
		"stacks/build-controller-stack.yaml",
	)
}

func stacksBuildControllerStackYaml() (*asset, error) {
	bytes, err := stacksBuildControllerStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/build-controller-stack.yaml", size: 5120, mode: os.FileMode(420), modTime: time.Unix(1553031688, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksBuildStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\x3d\x6f\xdb\x30\x10\xdd\xfd\x2b\x88\x2c\x01\x82\x5a\x54\x62\x0f\x35\x81\x0c\x41\xe2\xb6\x46\x3b\x18\x8e\x96\x4c\x06\x4d\x5d\x95\x83\x29\x51\xb8\x3b\x2b\xd1\xbf\x2f\x24\x9b\xb2\x0d\xa8\x43\xa0\x45\x7a\x1f\x7a\xc7\xe3\x63\xa0\x06\x1d\xb0\x99\x28\xb5\x3b\xa0\xcf\xf7\x28\xdd\xbb\x52\x58\xda\x02\x8c\x2a\xc3\xae\xd5\x03\xd3\xa4\xc9\x2c\x99\xf5\xbc\x0b\x65\x69\xab\xfc\x28\x9e\xaa\xe9\xd4\xe6\x39\x9d\x3e\xc4\xd5\x46\xeb\x34\xe9\x1f\xb3\x48\xd3\xfb\x9e\x80\xcf\x3a\x30\x44\x47\x07\xf7\x9c\x16\x57\x7f\x8b\x11\x3d\x59\x13\x36\xe8\xa1\x80\xdc\x28\xa1\x03\x4c\x94\x22\x28\x90\x85\xda\xab\xe1\x06\xf0\xa1\x47\x19\x1c\x81\x70\x0c\x20\x0c\x53\x07\x24\x6c\x34\x88\xd3\x51\x7c\x1c\xa5\x6a\xa2\x6c\xb3\xfc\xb9\x7a\xcd\x36\x6f\xdb\x5f\x59\xb6\xde\x3e\xbd\xbc\x6c\x1e\xe3\xe4\xf3\xf9\x6c\x54\x94\xfd\x79\xdd\x3e\x2f\x37\xd9\xea\xc7\xea\xf9\x29\x5b\x3e\x5e\xfd\x5f\x8b\xe7\xc4\x91\xfc\xd7\xf9\x7b\xf9\x36\xe2\xd8\x43\x3b\xb2\xa4\xf9\x7c\xd6\x4d\xd1\xaf\xe8\xe2\x00\x1f\xb0\x7b\x0f\x61\x7f\x54\x15\x3e\xec\xac\xdf\xd6\x40\x25\x32\x63\xa8\x86\x0d\xdc\xdc\x45\x25\x56\x56\x02\x25\x84\x21\x71\x56\xc4\x43\x82\x41\x17\x28\x27\x9a\xc0\x01\x36\x40\x7c\xf3\x55\x27\x7c\x82\x3b\x48\x17\x1a\xad\xb7\x77\xca\x85\xea\x2f\x16\xa5\xad\xf9\xf6\x0c\x42\x03\x95\x0c\xc0\xe9\xae\x2e\x6f\x33\xb7\xc8\xef\xb6\xba\x5f\x2c\x1e\xf4\x55\xb8\xc9\xa1\x19\xeb\xdc\x95\x68\xe8\xa1\x47\x16\xa8\xfa\x3a\x02\xf3\x09\x36\xdf\xd3\x45\x7a\x0e\x5b\x1f\xbc\x5f\x07\x8f\xae\x35\xca\xfa\x0f\xdb\x1e\x75\x75\xa0\x73\x7d\x3a\x47\xb7\xf7\xc9\xbf\x00\x00\x00\xff\xff\x31\x5f\x52\x67\x24\x03\x00\x00")

func stacksBuildStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksBuildStackYaml,
		"stacks/build-stack.yaml",
	)
}

func stacksBuildStackYaml() (*asset, error) {
	bytes, err := stacksBuildStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/build-stack.yaml", size: 804, mode: os.FileMode(420), modTime: time.Unix(1553031689, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksCertManagerStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x6b\xdb\x40\x10\xc5\xef\xfa\x14\x83\x5b\x08\x04\xd6\x21\xb7\xa2\x9b\x31\x26\xe4\x90\x36\x84\xde\xc5\x7a\xf5\xac\x2c\xd9\x3f\xea\xcc\xac\x5b\x53\xfa\xdd\x8b\x25\x39\x56\x69\xc0\x3e\xee\x9b\xdf\xcc\xee\x9b\xb7\x02\xde\x7b\x07\xa9\x2b\x22\x07\x56\x13\x6d\xb2\x1d\xf8\x78\x26\xea\x42\xde\xda\xd0\xf4\xe0\xe8\x45\x7c\x4e\x32\xea\x86\x6e\x6e\x07\x7c\xa2\x97\x6f\x5f\x64\xe9\xf3\xdd\xed\xcd\xb9\x8c\x5f\x8a\x34\xf4\xdc\xf9\xd4\x31\x44\x20\xb3\xb2\xcb\x69\xe7\xbb\x68\xfb\xb9\x28\x70\x0c\x9d\x2b\xd8\x23\xe9\xbf\xc8\xf8\xe0\x99\xd4\xe7\x76\x3a\xfa\x68\x3b\xd4\xf4\xf9\xf7\x7a\xf3\xf2\xbd\x79\x5a\x7d\x5d\x3d\x6c\x5e\x9a\xc7\xa7\xd5\xc3\xe6\xcf\x19\x78\x2e\x21\x3c\xe7\xe0\xdd\xa1\xa6\x55\xf8\x69\x0f\x32\xd4\x5c\x8e\xd1\xa6\xf6\xe4\x70\xbe\x8d\x49\x32\x26\xc0\xb6\x60\x83\x00\xa7\x3e\x27\x93\x6c\x84\xf4\xd6\x61\x22\xd8\x67\x23\x07\x51\xc4\xf7\x16\x17\x8a\x28\xd8\x30\x24\x17\x76\xb8\xa6\x27\xe4\x4e\xb3\x68\x0b\x3e\x5d\xbd\x50\x2e\x58\x54\xd5\x5b\xd9\x82\x13\x74\x4c\xec\x7d\x54\xdb\xb8\x22\x9a\x63\x73\xba\xa5\x69\xb1\xf3\xc9\xeb\x29\xb3\x4f\x83\x1f\x3a\xfb\x31\xf4\x28\x52\xc0\xcb\x0f\x62\xdc\xdf\xdb\xd0\xbf\xda\xfb\x01\x5b\xbf\xda\x10\x90\x3a\x5c\x24\xbf\x71\x7b\xcd\x3c\xb0\xfa\x9d\x77\x56\x2f\x4d\xbc\x60\xc9\xd0\x7a\x5c\xed\x15\x46\xaa\x1f\x05\x32\x75\x1a\xda\x5b\xf6\x76\x1b\x50\xd3\xff\xff\xa4\x22\x6a\x21\x8e\x7d\x7f\xc4\x6b\x5a\xcc\xf7\x36\xfe\x1f\xd2\x4c\x45\x8e\x69\xfc\x0d\x00\x00\xff\xff\x22\x78\xed\xc4\x3e\x03\x00\x00")

func stacksCertManagerStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksCertManagerStackYaml,
		"stacks/cert-manager-stack.yaml",
	)
}

func stacksCertManagerStackYaml() (*asset, error) {
	bytes, err := stacksCertManagerStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/cert-manager-stack.yaml", size: 830, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksGrafanaStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x93\x51\x6f\xda\x30\x10\xc7\xdf\xf9\x14\xf7\x05\x5a\xd3\x4d\x7b\xc0\x12\x0f\xee\xa0\x2d\x52\x07\x08\xe8\xa4\x3d\x45\x47\x72\x01\x4f\x8e\x1d\xd9\x4e\x56\xa4\x7d\xf8\xc9\x21\xc4\x69\xa8\x3a\xf5\x2d\xdc\xfd\xef\xec\xff\x8f\xbf\x53\xa3\x73\x79\x70\x7c\x04\x70\xb0\x98\xa3\xc6\x9b\x0c\xdd\x71\x6f\xd0\x66\xa5\x35\xb5\xcc\xc8\x36\x5d\x80\xd4\x68\x4f\xda\x73\xf8\xdb\xfc\x04\xc0\x52\xfe\x24\xeb\xa4\xd1\x1c\xee\xda\xda\x60\x06\xe0\x06\x32\xe9\x70\xaf\x68\x46\x8a\x7c\xa3\xcd\x51\x39\x6a\xdb\x00\xb9\x51\x19\x59\x0e\xd2\x79\x69\xba\xaa\xc6\x82\x86\x35\x53\x86\xf9\x6e\x73\x73\x1c\xfa\x23\x07\x56\xa3\x65\x4a\xee\x59\x6b\x81\x75\x16\x1c\x1b\xac\xb0\x87\x45\x16\x6f\x0b\xe0\x4f\x25\x71\xc8\xa5\xa2\x37\x04\x3c\x3a\x53\xd9\x94\x3e\x63\xfd\x6a\x2a\x98\xc7\x34\x25\xe7\x78\xe0\xf2\x7a\xea\x4e\xa5\x4c\xfa\xc0\x84\x83\xb7\x55\x44\x21\xdd\x8c\x72\xac\x94\x1f\xd4\x7f\x3b\xa3\x67\xe8\xb1\xef\xdc\xcb\x82\x16\xda\x93\xad\x51\x71\xf8\xe6\x06\xe4\xd6\xd6\x14\xe4\x8f\x54\xb9\xff\x79\x2f\xaf\x95\x95\x55\x1c\x8e\xde\x97\x9c\xb1\xd8\xbe\x8d\x9f\x7c\x32\x9e\x8c\x47\x23\x47\xb6\x96\xad\xdd\x96\xdd\xf9\x8a\xa4\x6b\x69\x8d\x2e\x02\xb3\x0e\xc5\xe3\x46\x3c\x88\xa5\x48\xd6\xab\xcd\x6e\xfa\x75\x3c\x1e\xc7\xce\x43\x22\x5e\x76\x4f\xc9\xbd\xd8\x2e\xbe\x27\xf3\xa5\xb8\x7f\x9e\xcf\xa6\xfd\x98\x44\x8d\x58\xae\x96\xbf\x7e\xac\x5e\xb6\x9d\xae\x87\xea\x3d\xd9\x6a\xf3\x98\x6c\x56\xcf\xf3\xa9\xc8\x0a\xa9\xfb\xc2\xb5\xd8\x3d\x6d\x93\x99\xd8\x89\x29\x0b\x7f\xde\x25\x3e\x8d\x46\x16\x78\x20\x0e\x19\x4a\x77\x44\x7d\x37\x99\x7c\xb9\xb4\xb9\x42\x4f\xce\x47\xd5\xba\x52\x6a\x6d\x94\x4c\x4f\x1c\x50\xfd\xc1\xd3\x99\x24\xbd\x96\xc6\x51\xf4\x1f\x2c\xb3\x40\xf5\x12\xa9\xcb\xc3\x3b\xb7\x3f\x78\x7e\x8c\x7c\xda\x65\xbb\x29\x87\xe4\x49\x7d\xe8\x07\xfd\x7a\xee\xf6\x84\x85\x7a\x67\x7f\x8c\xe9\x47\x8b\x3b\x55\xff\x3b\xae\xac\x8d\xaa\x8a\x7e\xd2\x83\x8a\xbf\xe1\xf8\x2f\x00\x00\xff\xff\x4b\x2d\x4e\x24\x5c\x04\x00\x00")

func stacksGrafanaStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksGrafanaStackYaml,
		"stacks/grafana-stack.yaml",
	)
}

func stacksGrafanaStackYaml() (*asset, error) {
	bytes, err := stacksGrafanaStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/grafana-stack.yaml", size: 1116, mode: os.FileMode(420), modTime: time.Unix(1551893106, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioCrdStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\x41\x4b\xc3\x40\x10\x05\xe0\x7b\x7e\xc5\x42\xce\x46\xaa\x37\x6f\x8a\x45\xbd\xc5\xb6\x78\x0d\xe3\xe6\x35\x1d\x9a\xce\x84\xdd\xd9\x96\xfe\x7b\x71\x5b\x14\x2d\x24\x3d\xbf\xef\x0d\xcb\xdb\x6d\xfa\x44\x10\x18\xe2\x43\xe1\x9c\xd0\x0e\x71\x20\x8f\xb6\xf1\x29\x9a\xee\x9a\x80\xa8\x29\x78\x34\x2d\xd6\x2c\x6c\xac\x92\x65\xe9\xbc\xca\x9a\xbb\xc2\xb9\x1b\xf7\x8c\x68\x2c\xf4\x1d\xd6\xda\xb3\x3f\x56\xa7\xb0\xe2\x68\xac\x15\xeb\xed\x7e\x46\xfd\xb0\xa1\xbb\xcc\xe7\x5d\x40\x8c\x8b\xd4\x63\xdc\x2d\x34\x19\xa6\xd9\xeb\x6a\x55\x3f\xd6\x6f\xcb\x01\xfe\x89\xa5\x65\xe9\xae\xf6\xe3\xf0\x3d\xa9\xd1\xd5\x67\x7f\xf4\x18\x2b\x9d\xc0\x0e\x1a\xb6\x2c\xa7\xe9\x3e\x38\x58\xa2\x7e\x89\xb0\x67\x8f\xea\x37\xbd\xa8\xdf\xff\x9f\x3a\x2f\x33\x59\x38\x5f\x9e\x8b\x85\xe3\xb4\x7e\x21\xc3\x81\x26\x61\xe9\x28\xd9\x06\x62\xec\xf3\x53\x72\xf7\xfc\xf5\x7f\x93\x8b\xfa\xac\xf8\x0a\x00\x00\xff\xff\xbd\xa2\x21\x22\x73\x02\x00\x00")

func stacksIstioCrdStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioCrdStackYaml,
		"stacks/istio-crd-stack.yaml",
	)
}

func stacksIstioCrdStackYaml() (*asset, error) {
	bytes, err := stacksIstioCrdStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-crd-stack.yaml", size: 627, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5f\x6f\xdb\x38\x12\x7f\xf7\xa7\x20\x74\x05\x72\x57\x84\x96\xd3\x36\xbd\x46\x80\x1f\x0c\xc7\x45\x73\x97\xc4\x3e\x5b\xc5\xa1\x4f\x06\x4d\x8e\x6d\x22\x14\xa9\x25\x29\x27\xde\xdd\x7e\xf7\x05\x29\xc9\xa2\x12\x79\x9d\xfd\x87\x7d\x49\x2c\xce\x6f\x86\x1c\xce\xcc\x6f\x86\x54\xc9\x35\xdf\x98\xa4\x87\x50\x06\x66\xeb\xfe\x23\x44\x95\xb4\x20\x6d\x82\x7e\xc6\xfe\x1b\x21\xc6\x0d\x59\x09\x98\x29\xc1\xe9\x7e\xbc\x05\xfa\x60\x12\x64\x75\x01\x95\x9c\xcb\x8d\x06\x63\xc6\x4a\x5a\xad\x84\x00\x7d\xa7\x18\x24\x28\x9a\x7e\xfe\x1c\x55\x10\x52\xd8\x6d\xa9\x9f\xa0\xfb\xe9\xfd\xa4\x5a\xd6\xcc\xcc\x61\xad\xc1\x6c\xaf\x41\x90\x7d\x82\x2e\x06\xa6\x12\x65\xfc\x09\xf4\x1c\x72\xa5\xed\x02\xf4\x0e\x74\x82\xde\xfc\x94\x4e\x6e\x27\x77\x93\x74\xfe\x6d\x79\x3f\xba\x9b\x2c\x66\xa3\xf1\xe4\x7b\x5f\x73\x85\xa9\x50\x05\xeb\x9b\x1d\xed\x53\x51\x18\x0b\xba\x2f\x14\x25\x22\xb9\x1a\x5c\x5d\x54\x06\x55\x61\x57\xaa\x90\x2c\xd5\x64\xbd\xe6\xb4\x3a\x4d\x25\x44\x28\xf3\x67\x1e\xdd\xde\x4e\xff\xbf\x1c\xdd\x7f\xab\x5d\x87\x35\x29\x84\x1d\xfb\x8b\x6a\xc0\x8c\x1b\xaa\x76\xa0\xf7\xc7\x4e\xef\xaf\x51\x02\xb5\x29\xcf\x40\x15\x36\x41\xef\xdb\xb2\x35\xdf\xcc\x88\xdd\x26\x28\x8a\xc1\xd2\x98\x1b\xcb\x55\x9c\x6b\xf5\xb4\x8f\x0e\xb0\x15\x97\x44\xef\x6b\x58\x61\x74\xec\x9d\x8a\x57\x5c\xc6\x20\x77\x2a\x80\x1a\xd0\x3b\x4e\x61\x5c\x3a\x9f\x20\x6f\x0f\x7b\x7b\xcd\xa1\x35\xe1\xf2\xba\xd0\xc4\x72\x25\x13\xf4\xe1\xb2\x39\x50\x4e\x34\x48\xbb\xd8\x16\x96\xa9\xc7\x00\x73\x91\x05\xa7\xe6\xd2\x82\xa6\x90\x3b\x51\x19\xe1\xf9\xe4\xfa\x66\x3e\x19\xa7\x8d\x1d\xb7\xe1\x88\x65\x5c\xce\x94\xb6\x09\xba\xb8\x1c\x0c\x06\xa1\xdb\x2e\x41\x66\x82\x48\x18\x75\x27\x44\x70\xb5\x23\xc6\x5c\x56\xb9\xb0\xcf\x6e\x6e\xa7\xe9\x72\x74\x7d\x3d\x9f\x2c\x16\xdf\x13\x67\xf5\xdf\xbd\x5e\xe5\xb3\x4f\xdf\xca\x5f\x2e\x94\x2d\xa3\x24\xc8\x0a\x84\xa9\x23\xe6\xc5\x09\xf2\x72\xbf\xb4\x11\x6a\x45\xc4\x32\x07\x9d\x71\x63\xb8\x92\x15\x14\xa3\xb3\xb7\x55\x78\xfa\x5e\xa9\xcf\x55\xfc\xf6\xac\x91\x49\xb0\x8f\x4a\x3f\x70\x79\x44\xee\x12\x1d\xa4\xe5\xd4\xdf\xe0\x11\x4c\xce\xe1\xc9\x82\xf4\xfb\xf6\x1f\x3e\x19\x07\xa0\x85\xb1\x2a\xd3\x60\x54\xa1\x29\x30\x58\x73\xc9\x9d\x09\x13\x28\x36\x5a\xb1\xdd\x72\xcd\x72\xa2\xed\xbe\x56\x79\x3d\xb0\xdf\x88\xbb\x75\xaa\x82\x3e\x66\xf2\x20\x8e\x8d\x25\xb6\x38\xa0\xf4\x8a\xd0\xc0\xe3\x6a\x95\x6a\x20\x16\xce\x37\x60\xcf\x05\x37\xf6\xfc\x91\x58\xba\x3d\x2f\x72\x46\x2c\x54\x57\x9d\x91\xdc\x54\x68\x90\x2c\x57\x5c\xda\xfa\x3b\x57\xac\xfe\x59\xc7\xbb\xfa\x94\x24\x03\x93\x93\x60\x41\x31\x68\xb0\x54\x43\x65\xc4\x70\x06\x0f\xdc\x91\x56\xef\x59\x8a\x25\x41\x6a\x66\x19\x91\x2c\x69\x64\x08\x63\xa1\x36\x4b\x55\xd8\xbc\xb0\x4b\x01\x3b\x10\x43\x06\xab\x62\x83\x30\xd6\x60\xf6\x92\x0e\xdf\x6d\x9f\x55\xb4\x69\x0c\xe2\x92\x51\x83\xe2\x2e\x21\xb1\x5b\x3e\xa0\x40\xee\xb8\x56\x32\x73\x7c\x1b\xa8\xce\xa6\xd7\x9e\xe0\x86\x6f\xfe\x69\x40\xac\x63\xe7\xea\xbf\x3a\xe4\x9e\x00\x43\x90\xbf\x8f\x16\xd2\x57\x4e\xfa\x65\x3e\x4d\xd3\xdb\xc9\xf0\x32\xa8\xc6\x5a\x38\x1e\x8d\xbf\x4c\x96\x8b\xff\x7d\x1d\x2d\xbe\x0c\x2f\x9b\x6a\xcf\xc8\x06\x2a\x22\x89\xcb\xc2\xba\xe8\x0f\xfa\x1f\xdb\x80\x59\x21\x44\x5d\xc6\x44\x3c\x92\xbd\x09\x28\xc9\x87\x20\x41\x9c\xb9\x82\xb0\xfb\xf2\x32\x28\x68\x6b\xc2\xb2\x2c\x59\xaa\x71\x1f\x9e\x72\x65\x20\xbc\x0e\x5f\xef\xf1\xd6\xda\xbc\xbd\x78\x31\x88\x37\x3a\xa7\xc1\xe2\xd5\xe0\xea\xbd\x07\x9e\xbb\x3f\x38\x53\x92\x5b\xa5\xb9\xdc\x1c\x71\xcb\xed\xbc\x7b\xf7\x1b\x1d\xab\x73\x25\xd8\xb7\x4d\xb4\x18\x61\xdc\x26\xe4\x40\x14\x30\x55\x4b\xc1\x42\x96\x0b\x62\xe1\x33\x17\x10\x08\x9e\x77\x87\x92\xf8\x97\x5e\xbf\xbf\x27\x99\xe8\xdb\x2c\x17\x2d\x4b\xdd\x34\x1b\x40\x5a\x7c\xfb\x97\xa7\xe0\xcd\xfd\x22\x1d\xdd\x8f\x27\xcb\x9b\x59\x8d\xe3\x79\x08\x98\xdf\x4c\x97\x8b\x74\x34\xfe\xef\x30\xf2\x8e\x46\xcf\x64\xb3\xf9\xf4\x3f\x93\x71\x3a\x8c\x5c\xa3\x37\x7b\x63\x21\x8b\x5e\x97\x65\x87\xc6\x40\xb9\x25\x0c\x44\xe9\x60\x2b\x05\x6a\x49\x93\x02\xad\xf0\xba\xfb\x24\x79\x0e\x92\x61\x26\x0d\xf6\x0e\x0e\x0f\xa3\x8f\x93\xba\x0c\xc4\x6e\x4a\x19\x7e\x1a\x7c\x1c\xb4\x97\xb7\xca\x58\xa7\x32\xac\x76\xe9\x35\xd9\x21\xd6\xd8\xf0\x8d\x04\x86\x29\x69\x1b\xac\xb0\xd8\x58\xa5\xc9\x06\xf0\xe1\x52\x87\x8d\xff\x27\x7a\xd8\xa3\xe6\x16\x5a\x1c\x78\x60\x4f\x42\xa9\x2a\xe4\xf3\xd5\xf2\xb3\xc3\x92\x63\x6d\x06\x02\x2c\x20\x06\xb9\x50\x7b\x97\x27\xe6\xa5\xb0\xdb\xfa\x4b\x40\x87\xa4\xdb\xae\x6f\x15\x65\x93\xa8\x81\x41\x07\xfa\x3d\x3a\x1a\x72\xc1\x29\x31\x87\xb6\xf0\xaa\xcc\xd9\x10\x0b\x8f\x64\xdf\x35\x54\x44\x95\x2c\x4a\x50\xe4\xf6\xd1\x92\x88\xe8\x44\x64\x22\x77\xce\xb2\x03\x06\xa7\x3d\xd1\xaf\xa3\x5f\x57\x7e\x1b\xef\xb8\xb6\x05\x11\xf5\x1d\x9f\xc4\x33\x30\x96\x4b\x3f\xa1\xe8\x42\xbc\x42\xa1\xf2\xb4\x02\x96\xcb\x4b\xa5\x99\x1b\x35\x8d\x55\x39\x5e\x73\x6d\x6c\x77\xb7\xed\x24\x79\x57\x30\xe5\x68\x37\x9d\xa7\x8b\xef\xcf\xe9\x39\xea\xe0\xe7\xe8\xcf\x24\x68\xad\x8a\x36\x2d\xe3\x5d\xf0\x11\xbd\x8b\x5a\x8c\xda\x39\xee\x07\x88\xb3\x0b\x73\x86\xfe\x71\x0a\x85\x71\x6b\x02\x0f\xf5\x3f\x5c\x7a\x03\x47\xc4\x18\x77\xcf\xe7\xad\x13\x64\x03\x67\xe2\x24\xd0\xb7\x87\xe0\x61\xd2\xb2\xe1\x4d\x1c\x95\x9f\x6e\x6a\x2f\xba\xe0\x8f\x3c\x7f\xe0\xb2\x9a\xe4\xc3\x0b\x6e\xdf\xaf\x1b\x23\x0d\xfb\xca\xf2\x93\xc8\xf6\x03\x23\xc4\xf9\xa7\x46\xf4\x07\x1a\x61\x2b\xd0\x2f\x0f\x72\xe4\x15\x52\x03\x40\xee\xfe\xa6\xf6\x79\xb3\x48\x6f\xa6\xcb\xbb\x49\x3a\x5a\x9e\xda\xb5\xe9\xb4\x3e\x60\x47\xfa\xec\xb3\x36\x83\x02\xae\x0c\x43\x7e\x74\xaa\xf3\xf5\xe5\x9a\xae\x5b\x0b\x27\xe0\xea\xdd\x50\x91\x09\xae\x98\xb6\xf7\x43\xe1\xe8\xc8\x93\x24\x46\x3b\xa2\x39\x59\x09\x48\x50\xc7\x5b\xbf\xe7\x1e\xe4\x86\x6a\x9e\x97\xcf\xd3\x92\x26\xb0\x05\x01\x19\x58\xbd\x6f\xde\x04\x51\xcb\x54\x2b\x72\x47\x8c\xf8\x89\x0a\x91\x32\xee\x51\xaf\xd7\xfb\x25\x00\x00\xff\xff\x7a\x84\x6b\x78\x1d\x11\x00\x00")

func stacksIstioStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioStackYaml,
		"stacks/istio-stack.yaml",
	)
}

func stacksIstioStackYaml() (*asset, error) {
	bytes, err := stacksIstioStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-stack.yaml", size: 4381, mode: os.FileMode(420), modTime: time.Unix(1553031689, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioTelemetryStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x7b\x6f\x1b\x37\xb6\xff\xbf\x9f\x82\x90\x03\x34\x01\xac\x87\x7d\xd3\xde\x46\x80\xff\x50\x6c\xb9\x57\xf7\x36\xb6\x61\x29\x77\x81\x2d\x8a\x01\xcd\x39\x92\x08\xcf\x90\xb3\x24\xc7\xb6\xb2\xde\xfd\xec\x0b\x72\x5e\x9c\xa7\x66\xe4\xb8\x41\xdb\x49\x8b\x44\x26\xcf\xef\x90\x3c\x3c\xaf\x39\x1c\xd1\x12\xc4\x03\x25\x20\xa7\xdf\x21\x44\xa5\xa2\x7c\xa8\xc0\x03\x1f\x94\xd8\xe9\x26\x84\x36\x1e\xbf\xc3\x9e\x13\x80\xf0\xa9\x94\x94\x33\x19\xb5\x0f\x91\xe0\x1e\x9c\x11\x2f\x94\x0a\xc4\x10\xbb\x3e\x65\xa6\x83\xfa\x78\x03\xd3\x88\xd9\xd8\xa7\x4f\x20\xa6\x27\xa3\xc9\xe8\xc7\xac\xf3\x26\xf4\xbc\x1b\xee\x51\xb2\x9b\x22\xec\x3d\xe2\x9d\x34\x7d\x84\xfb\x3e\x66\x6e\xc2\x7e\x38\xc4\xae\x2b\x40\xca\xf8\xe7\x90\xd1\xa7\xe9\x78\x3c\x96\x9c\xdc\x47\x7c\x47\xfa\x23\xa8\x94\x9e\x70\xb6\xa6\x9b\xa5\xe2\x02\x3e\xdf\xfe\x72\x76\xff\x93\x9c\x8e\xc7\x85\xde\x0b\x58\xe3\xd0\x53\x57\xd8\x07\x19\x60\x02\x67\x6f\xfe\x79\x35\xfb\x34\x5f\xde\xcc\xce\xe7\xff\x32\xb4\x0f\xdc\x0b\x7d\x48\x57\x19\xba\x72\x18\x8d\x33\x35\x43\x9b\x66\x60\x0f\x54\x70\xe6\x03\x53\x09\xdd\xcf\xd7\x17\xf3\x8f\x9f\x7f\x3e\xdb\x10\x25\x34\xdf\xd3\x88\xf0\x29\xe0\x12\x12\x9a\x0f\x93\x0f\xff\x35\x56\x24\x38\xde\x2a\x15\x0c\x7d\xce\xa8\xe2\x82\xb2\x4d\xdc\xfd\xfe\xf4\xfd\xe9\xa9\xe9\x0f\x04\xf7\x41\x6d\x21\x8c\x16\x2f\xa9\x0b\xf7\x94\xdc\xc7\x93\x4a\x76\x2a\x10\xfc\x69\x97\x34\xe5\xc7\xd2\x7f\x8e\xd0\x10\x9d\xfc\x30\xf9\x30\xc9\x86\x04\xf6\xc0\x77\x1a\xe7\xa7\x54\x86\x66\xf2\x5e\xd3\x58\x6d\x1f\x26\x1f\x4e\x0c\x6c\x23\x02\x92\xb6\xe7\xb6\xd6\x8c\xfe\x70\x6a\x6d\x6e\x69\x13\x23\x5e\x86\xd0\xfa\x79\x38\x8c\x95\xee\x3c\xd2\x1d\xab\xab\xa0\x81\x39\x90\x02\x3f\xf0\xb0\x82\x4b\xea\x81\xd5\x31\x06\x45\xc6\xd6\x8c\xc6\x66\x8d\x4e\xca\x63\xb4\xc3\xbe\x37\x52\x7e\xe0\xe5\xb8\x11\xce\x94\xe0\xde\x8d\x87\x19\xcc\x42\xb5\x8d\xf4\xd1\x22\xb9\xba\xbe\x9a\x67\xa2\x2d\xee\x77\x44\x73\x73\x7d\xe1\x68\xed\x39\x7b\xf3\x56\x82\xb7\x1e\x33\xec\xc3\xbb\x8a\x7e\xa3\x5d\x36\x91\x51\x3d\x9b\x72\x71\xb5\x5c\xcd\xae\xce\xe7\xce\xe2\x26\xa1\xa3\x41\x46\x20\x81\x08\x50\x72\x8a\xa8\x0b\x4c\x51\xb5\x9b\x9a\x65\x13\x10\x4a\xa6\x44\x39\xc5\xad\x51\xde\xef\xee\xc3\x3b\x10\x0c\x54\x44\x97\xce\xc5\x75\x48\x28\x15\xf7\x1d\x01\x92\x87\x82\x80\xe3\xc2\x9a\x32\xaa\x12\x83\x1f\x22\x2d\x4d\x4a\x46\x91\x19\x8d\x8c\xc4\x47\x94\x8f\x1f\x4e\xb0\x17\x6c\xf1\xa9\xa1\x11\xa1\x07\xcd\x14\x99\x66\x37\xd3\x65\xf3\x6c\xa6\x4b\xb4\xa2\x99\x0a\x2b\x25\xe8\x5d\xa8\xc0\xc7\x8c\xae\x41\xaa\x66\x72\xca\xa4\xc2\x8c\xec\x63\xea\xe2\x40\x81\x68\x26\xda\x62\xe6\x7a\xfb\x88\x3c\xbe\x01\xa6\x75\xb5\x91\x4a\x2a\x97\xf2\xb6\x52\x03\xf6\xd0\x44\x6a\x6d\x7c\x22\x92\x29\x7a\x1e\x1a\xd5\xc1\x01\xfd\x7f\x10\xda\xd5\x4f\xd1\xa0\x8e\xc7\xc0\x90\xde\x53\xe6\x4e\xcb\xd2\x35\x7d\x3e\x28\xec\x62\x85\x13\x7d\xd4\x43\xc6\xbe\x23\xf3\x08\x32\x00\x92\x10\xa4\x6c\x2c\x15\xe6\x82\x6e\x28\x1b\xd1\x20\x6b\x42\xe8\x01\x7b\x21\xac\x76\x01\x4c\xd1\xe2\xc6\x99\x5d\x5c\xdc\xce\x97\xcb\x22\x24\xa4\x6e\x0d\x66\xb9\xba\x5d\x5c\xfd\x5c\xa2\x97\x20\xda\x01\x04\xfc\x23\xd4\x2a\xb4\x05\xec\x82\x90\x8d\x20\xe7\xd3\xec\xa6\x04\x6c\x3b\xb3\x74\x20\x2e\x55\x37\x84\x36\x31\xde\x71\x94\x00\xab\x6d\x37\x84\x00\x2c\x39\xeb\x8a\x59\x83\xe8\x2a\x69\x49\xb6\xe0\x43\x37\x8c\xe2\x0a\x7b\x8e\xa4\x5f\x72\xb8\x02\x76\x71\xb5\xfa\xf1\x7d\x79\xb8\x02\x68\x2f\x40\xd1\xda\xd9\xad\x16\x9f\xe6\xcb\xd5\xec\x53\x59\x0b\xb4\xc2\xe1\x4d\x2e\xa2\x34\xaf\x4b\x06\x9c\x49\xed\x93\xdc\xb6\xb3\x8b\x11\x6e\x28\xb0\x76\xe4\x35\xa8\x8b\xcf\xb7\xb3\xd5\xe2\xfa\xaa\x0c\x3c\x40\xc3\x63\xe4\x41\xd2\x8f\xb1\x1d\xc4\x9f\x8c\xd6\x45\xfe\x51\x7c\x6b\xef\x1f\x12\x7a\xed\x1f\xd0\x11\xba\x98\xdf\xdc\xce\xcf\x67\xab\xf9\x45\x17\x74\x20\x28\x23\x34\xc0\x5e\xbb\x31\x5d\x90\x8a\x32\xb3\x69\xed\x27\x6a\x83\x5e\x30\x5e\xc0\x45\x9d\x4a\xe6\xc5\x4f\x38\x63\x40\x0c\x06\x1e\x5a\xeb\xb1\x85\x6a\xbb\x30\x0b\x22\x80\x00\x7d\x00\x77\x74\xb7\xcb\xc5\x89\x76\xd3\xcc\xa3\x1d\xa3\xa4\x5d\x79\x48\x60\xea\xb0\xd1\x33\xe4\x61\x23\x77\x35\x63\x0b\xea\x2b\xaf\x6e\xba\x1f\xaf\xaf\x7f\xa9\x96\x95\x71\x53\xe0\x3a\x3a\x5b\x07\xe1\x98\xf8\xdd\x76\xbf\x14\x3c\xa9\x51\x20\xb8\xe2\x84\xb7\xd4\xc1\x04\xa5\x8d\x59\x2a\xec\xd7\x85\xfc\xb2\x45\xdb\xc8\xd6\xa0\x23\x74\x01\x81\x00\x82\x15\xb8\xc7\xe8\x1e\x02\x85\xd6\x5c\xe8\xe7\x97\x00\x2b\x7a\x47\x3d\xaa\x76\xa5\x11\x04\x68\xeb\x00\x31\xf2\x38\xa9\xdd\xc0\xa2\x44\xf3\x48\x93\x32\x75\x12\x48\x0a\x6d\xed\x09\x70\x40\x47\xf1\x33\x56\x7b\xc0\x43\x9c\xf3\xb5\x06\xf0\x00\x1a\x15\xb2\x02\xd2\x4d\x23\x92\x48\x89\x43\xb5\xed\xea\xd1\x72\x58\x1c\xba\x14\x18\xa9\x35\xd9\xe6\x71\x75\x32\xad\xba\xa6\x2c\x06\x4b\x3c\x4c\xfd\x03\x12\x44\x03\x16\xf8\xd1\x69\xc1\xa0\x0c\x0e\xa8\x73\x0f\xbb\xfd\xa0\xe1\xf0\x77\xc8\xf7\xb3\x27\x92\x56\xf9\x7e\x1c\x2e\xbb\xe4\xfb\x31\xc4\xc3\x77\x50\xeb\xe4\x2a\x64\x1d\xc3\x8a\xb3\x6e\x0d\x6c\xef\x0e\x2d\x80\x79\xe4\xea\x84\xe2\x8f\xac\xad\xea\xc5\x88\xc4\xf0\xd1\xc1\xc9\x4a\xcc\x61\x46\x08\x0f\xdb\x86\xf5\x3c\xb4\xa5\xca\xc6\xa0\x47\x2e\xee\x3d\x8e\xdd\xce\x39\x59\x0a\xec\xbc\x19\x39\x64\x87\x5d\xb1\x13\xa5\x2e\x4a\x6a\xe3\xba\x6a\xaa\x8d\xed\xae\xae\x36\xba\x83\x32\xd9\xb0\xf6\xd2\xb5\x51\x3a\x7c\x61\xca\x40\x1c\x88\x7f\xc1\xce\xa4\x26\xd0\xd9\x02\x2a\xb8\x1c\x96\x80\x27\xe0\xc3\xd6\x6e\xa3\x5f\x26\x83\x0e\xc5\x83\x0a\x74\x27\x17\x60\xe3\xbb\x9b\x74\x25\xfa\x30\xe9\x1d\x62\xdc\x07\x07\x43\x53\x95\x6b\x08\x80\x71\x01\xb0\x14\xfd\x78\xa8\x82\x50\xcd\xe4\xff\x4a\x3d\x94\x12\x21\xbc\x6c\x1e\x49\x0d\xb1\x61\x2a\x98\x10\x90\xd2\xe3\x9b\xd2\x64\x24\x3c\x80\xa0\x6a\x37\x45\xdf\x0f\x16\x6c\xcd\x07\xdf\xc7\x1d\x59\x32\x9e\x2b\x76\x7c\x97\x88\x52\x50\x7c\xe7\x95\x03\xf8\x22\x98\x66\xa1\x1c\x3d\x23\x1a\xbc\x1d\x4c\x46\xe6\xbf\xc1\xbb\x02\xed\x2c\xc8\x88\x23\xd7\xf8\xeb\x00\x07\xc1\xe0\x37\xf4\x8c\x06\x83\x02\xf1\x4d\x9a\x05\x96\x9e\xac\xab\xc8\xaf\xcc\xba\xad\x00\x5c\x45\xf4\xb7\x58\x5d\xa6\x95\xc1\xa1\x8e\x6d\xa4\x57\xa5\xe0\x5e\x45\x7e\x6d\xdc\x6e\x2e\xa2\xe7\xc9\x2c\xe5\x35\xd2\x28\x47\x8b\x4a\x91\x58\x64\x8b\x02\xaa\x41\xea\x16\xd9\x32\xb2\xf2\xff\xd1\x2e\xa2\xd6\x79\xd4\x8e\x99\xc9\xad\xd6\xf8\x6a\xb1\xd1\xc6\x14\xdd\x7d\x23\x79\x2c\xf0\xca\x10\x51\x0b\x8c\x45\x5f\x0a\x82\xb5\x00\x4b\xc1\x2a\xeb\x29\x79\x20\x0e\xe8\x79\x94\xa2\xd7\xe5\xee\x25\xfa\xff\x83\xdd\xb4\x98\xab\xa3\xe7\x62\x51\xf9\xd7\xc1\xd3\x10\x07\x74\x78\x0f\xbb\xe2\xae\xa7\xcf\x50\x85\xf2\x28\x7a\x2e\x3d\x78\x6b\xe0\x56\xa9\x20\x03\xc7\x85\xe1\x42\xa1\x38\x3f\x40\x28\x2c\xde\x01\x56\xdb\x7c\x77\x52\x75\x3b\xe7\x2e\x4c\xf3\x65\x49\xf4\x8c\x26\x25\xba\x25\xfd\x62\xd3\x49\xfa\xa5\x48\x67\x46\x4a\xc8\xb2\x12\x6c\x15\xd5\xc2\x9a\xbb\x25\xaa\xb8\x69\x48\xdd\xa2\xb4\x88\x47\x81\xa9\x95\xc0\x04\x6a\xb0\x11\xc5\xd0\x9c\xda\x56\x30\xf0\xb0\x02\x46\x76\xd3\x72\x39\x55\xd3\x4d\x7c\x39\xb0\x1f\xd8\xe3\xea\x89\x23\x81\x84\xda\xa1\x3a\x41\x7c\xce\x4d\x38\x73\xcd\x69\x1a\xf6\xde\xbe\xad\x2c\x0a\x68\x76\x94\xdd\xf1\x90\xb9\x83\x77\xe8\xec\x0c\x0d\x78\xa8\xa2\x1f\x8f\xd1\x20\x64\xf7\x8c\x3f\xb2\xc1\x71\x8e\x53\xa1\xc4\x83\x9e\xd1\x1a\x7b\x12\x8e\xd1\xc0\x0f\x55\x88\x3d\x47\x79\x52\xa3\x19\x67\x30\x78\xf7\xae\x28\x4d\x70\x97\xa6\xb6\x13\x59\xe3\xbe\xe2\x4f\x41\x4b\x24\x88\x99\x29\x5f\x97\x2b\xda\xd5\x0a\xb3\xb2\x63\x89\x55\xb9\xb5\x08\xa3\xf2\xdc\x47\x53\x5d\xab\xa8\xe4\xe7\x34\x42\x3f\x95\xa7\x94\xa5\xb2\x73\x41\x79\xa2\x43\x87\xe2\x29\x44\x7e\x9e\xda\x52\x66\xa1\xda\xf2\x28\x12\x96\x54\x65\x8a\x93\x4e\xa3\x23\xf6\xe9\x4c\x9e\xd1\xd3\x25\x17\x8f\x58\xb8\xe0\x5e\x72\x51\xa9\x73\xeb\x84\x40\x7f\x8a\x34\x2e\x71\xd4\xd6\xa4\x23\xe5\x78\xb9\xee\x44\x81\x47\x7f\xb2\x5c\x5a\x1a\x11\xe2\xd7\x10\xc0\xcd\xce\x7e\x95\xc9\x8e\xbe\x1f\x44\xef\x7e\xc4\xc9\xc0\x6b\x66\x26\x8a\x04\x2f\x4b\x4e\xec\x12\x20\x7a\xce\x7a\xde\x0e\x4e\x27\x27\xff\x3d\x9c\x9c\x0c\x27\x27\xab\xc9\x64\x6a\xfe\xff\x7b\xba\xf6\x8a\x04\x26\xb3\x82\xb9\x29\x6a\x97\xca\xdc\x55\x11\xbe\xcf\x77\x6c\xf2\x3e\xdf\x29\x61\xff\x24\xf9\x4e\x96\x7b\x54\xa5\x1a\x8a\x04\x55\xc1\xf0\x22\x39\xb7\xa8\x3a\xcc\xf8\x6b\x07\xd1\x42\xc4\xab\x3d\xaa\xaa\x0b\x7c\x95\xa7\x4b\x39\x62\x13\x11\x6f\x5b\x0e\x13\x9d\x4b\x95\xf1\xcb\x3d\x23\x56\xe0\xfe\x34\xd1\x4b\x84\xf1\xeb\x66\xd5\x91\x2b\x7b\xfc\xb7\x43\x96\x8f\x15\xd9\x56\x18\x89\x5e\x9b\x49\xc8\xd1\x73\x45\xb6\xae\x7b\x37\x22\x20\x89\x7e\x60\xa2\xb2\xf7\x2d\xad\x97\x89\xd2\xa2\xc2\x28\x1b\x5d\xff\x49\x5e\x5b\xca\xbd\x02\x96\xc6\xd5\x51\x2e\x0e\xbf\xaa\x3c\x92\x77\x09\xdb\x8a\xc4\x72\x1c\x5f\x65\xcd\x76\x3a\xf1\x95\x96\x1d\xbd\xfd\xd6\xb0\xf0\xd8\xda\x4d\xbd\xac\xb4\x78\x53\x73\x9a\xa2\xc1\x49\xb2\x4c\x97\xfa\xc0\xa4\xbd\xd2\xdf\xcf\x64\x92\x30\xed\x3c\xee\x4d\x04\x12\x87\x59\x87\x74\x58\x29\x33\x28\x17\xdf\x9a\x18\x05\xcd\xf9\x4d\x1d\x0c\x37\xe5\x50\x75\xa0\xe4\x80\xb3\x08\x8c\xdb\x6b\xc0\x96\x04\x2d\x81\x35\x66\x00\xad\x78\xd8\xa2\x6b\x2e\x5e\xee\x65\x19\xb4\x88\xe1\x8d\x0c\xf0\xde\x24\xac\x11\x9e\x0a\xb6\x8a\x45\x7b\xe9\xa6\x55\xfb\xa6\xcc\xac\x0d\x87\xe8\x55\x85\xda\x82\x7a\x27\x36\x15\x3b\x54\x2a\xce\x57\x32\x8c\xfd\x81\x93\xa5\x4c\xf6\x01\x78\x4d\xb1\xa6\x82\x4b\xf4\x64\xeb\x90\xca\x6a\xcb\xe9\x64\xf2\x87\x4b\x9c\x1a\x22\xf6\xe7\xab\xe5\xcd\xfc\x7c\x71\xb9\x98\x5f\xbc\x34\x6c\xb7\xf5\xd7\x49\x1e\x5a\xe7\xb2\xf7\x55\x7d\x7a\x47\xde\x3b\xf2\xde\x91\xf7\x8e\xbc\x77\xe4\xdf\xd8\x91\x4b\xfa\x05\xea\x9d\x78\xe5\xa9\x42\xef\xbb\x7b\xdf\xdd\xfb\xee\xde\x77\xf7\xbe\xfb\xdb\xf9\xee\x48\x94\xcd\xce\xbb\xfa\xe4\xb8\xf7\xde\xbd\xf7\xee\xbd\x77\xef\xbd\x7b\xef\xfd\xad\xbc\xb7\x22\x81\x39\xfe\x81\xfa\x8a\xf7\xbe\x03\xaa\xde\x89\xf7\x4e\xbc\x77\xe2\x1d\x9c\x78\x67\xef\xfb\xad\x9d\x78\xef\x53\x0f\xf1\xa9\xc9\xb9\x7c\x0b\xbf\x5a\xfb\xa6\x40\xef\x5b\x7b\xdf\xda\xfb\xd6\xde\xb7\xfe\x55\x7c\x6b\xe1\xd2\xac\x6e\x5f\xc7\x89\x1c\xb3\xf5\xde\x49\xbe\xb8\x1c\xbd\xe1\x94\x0a\x3e\x79\xeb\xc4\x29\xbf\xfb\x31\x8a\xef\x49\x2a\xdd\x2b\x96\x4d\xf4\xfc\xfa\xf3\xd5\x6a\x7e\x9b\xb6\x1a\x35\x8e\x34\xc1\x7e\x8b\x25\xd9\x2c\xab\x29\x73\x4d\xe5\xc6\xd4\x14\xcb\x5d\x89\xbd\xd7\xf7\x64\x7a\x58\xa6\x89\xad\xcb\xea\x28\xd8\x75\x4d\x4f\xd5\x84\xaa\xbc\xd4\x9e\xee\xca\xa9\x55\xb8\x86\x9a\xde\xd8\x92\x9a\x7b\xcd\x18\x2d\x48\x8a\xd3\x28\x3e\xa1\xe6\xba\xac\xc7\x4e\xab\xbd\xde\x66\xab\x55\xcf\x49\x0e\x9e\x35\x39\x67\xae\xdc\xa3\x84\x09\x79\x0b\x3d\xbc\x58\x2c\x57\xb7\x8b\x8f\x9f\x73\xb7\x46\xf4\xca\xd8\x2b\xa3\x7d\x13\xde\x5d\x48\xee\x41\xe5\xbe\xae\x0c\x4f\x81\x47\x09\x55\x4e\x45\x1f\x42\x26\x82\xc8\x29\xfa\x75\x32\x9a\x4c\x7e\x38\x46\x93\xd1\xe4\xc4\xfc\x7d\x1a\xfd\x60\xfe\x36\x2d\x51\xc3\x0f\xc7\xe8\xe4\x18\x9d\xea\x7f\xf5\xc7\xc9\x6f\x35\x76\x60\xd2\xdb\x3d\xca\x2f\xe9\x17\xe8\x15\xbf\x57\xfc\xd7\x53\x7c\xce\x80\x29\x8a\xbd\x8f\x55\xaa\xcf\x42\xff\x92\x32\xaa\x20\xe9\x45\x3f\xe5\xfa\x25\xc1\x1e\x4c\xd1\x49\xae\x71\x23\xf8\xa3\xda\x5e\x62\xa2\xb8\x98\xa2\x93\x49\x49\xfd\xe3\x15\xec\xd1\xff\xec\x20\xa5\x37\x80\xde\x00\xac\xae\x3f\xba\x01\x28\x12\x38\x12\x58\x1c\x00\x9a\x13\x71\xab\x22\xdd\xe7\xe1\x7f\x21\x03\x68\x9d\x54\x6b\x65\x4a\x0a\x66\x1d\x14\x2a\xad\xb1\xf5\x4a\xd5\x2b\x15\x79\xdd\x6f\xd0\x04\x82\xfb\x5b\xa5\xba\x7d\x83\xe6\x6b\x7e\xa9\xa8\x50\x47\x41\x75\xdf\xb2\xa9\xa8\x7a\x94\x7b\x0b\x8f\xa3\x65\x02\x2b\x63\xa9\x08\x5b\xc5\xde\xd7\x14\xfa\xab\x7e\x6b\xa9\xad\x50\xcb\x11\xac\xdc\x59\xf0\x46\x2f\x13\x4c\xee\xca\xe8\x06\x09\xd5\x15\xce\x8e\xd0\xe3\x16\x18\x12\x21\x63\x94\x6d\xd0\x5a\x70\x1f\x99\xdb\xf9\x91\xe0\x5c\x1d\xa3\x50\x02\x52\x5b\x40\x6b\xee\x79\xfc\x51\x93\x44\xb3\x42\x78\xad\x40\x20\xec\xba\xba\x0d\xa7\xdc\xe4\xce\xbf\xd3\x46\x86\x3c\xca\xee\x91\xe2\x08\x5b\x53\x4c\xb0\x6b\xea\x01\x7a\xa0\xe9\x14\x8f\x52\xf8\x1b\xe4\x31\x34\x94\xe8\xdf\xe3\x91\x86\x8d\x63\x80\x99\xd1\x38\xbe\xb1\x7b\x9c\x31\x34\x1f\x23\x9a\x12\xab\xac\xcb\x31\x77\x23\xa3\x41\x0b\x2e\x83\x57\x55\x53\x3d\x0e\x56\x4a\x6c\x80\x69\xca\x94\x3a\x77\xad\xde\x5e\x5d\x2c\x6f\x79\xad\x3a\x66\x77\xf4\x8d\x0a\x37\xf9\xbd\xd6\x12\x15\x09\xda\xac\xf2\xab\x19\xe6\xb7\x15\x46\x81\x4f\xcd\xbd\x4d\xe9\xb8\x15\xd6\x77\x83\xa5\x34\x06\xa6\xfd\x29\x15\xe0\x66\xe4\x48\xb3\xd2\x26\xa4\xbb\x63\xad\x8d\x71\x71\xf4\x0f\x69\x76\x30\x17\xd2\xdc\x3d\x30\x31\x05\x6d\xba\xd9\x00\x1d\x21\x37\xfa\x7d\x1a\x7a\x94\x90\xe9\x99\xd1\x35\x05\x17\xd1\x40\x5b\x76\x32\x9a\x1d\x71\xcd\x90\xf6\x51\x47\x61\xdc\x5c\x92\xc1\x45\xe1\x8b\xfa\xba\xc5\x3a\xe2\x4c\x97\xea\xdc\x51\xa6\x1d\x89\xb5\x5f\x47\xe8\x92\x7a\x9e\x59\x3b\x83\x47\x4b\x88\x91\x8f\xb2\x64\xa2\xbd\xbf\x1b\x12\x70\xe3\x4b\xb9\x46\x16\x8f\x37\x3c\x54\xd1\xfd\x21\xd2\x38\x23\x96\xaa\x06\xe2\x6b\x74\x6d\xe8\x57\xf1\xef\x20\x40\x3e\x48\x89\x37\x59\x0e\x91\x0a\x6e\x6a\xf8\x8c\x92\x64\x8e\xbb\xce\xde\x6b\x22\xcc\xcd\x69\x25\x58\x2c\xac\x9a\xe3\xc7\xe4\x6a\xc1\x1c\x2c\x6a\x43\xcf\x08\xfc\x40\xed\x96\x4a\x50\xb6\xf9\x84\x83\xb7\xa5\x01\x23\x65\x2b\x8e\xb8\xe7\x98\xd6\xba\x63\x2d\x07\xcd\x1d\x5c\xc5\x4a\x52\xc2\x46\xf7\x11\xe6\x70\xe9\x6d\x05\x75\xe3\x15\x6e\xa6\xcb\x81\x93\x6c\x0e\x47\x9d\x7b\xe7\x9e\xbb\xa5\x2e\xc7\x29\xcd\x4f\xf7\x08\x3c\x7f\x53\x5d\x35\x8b\xd6\xb3\xa8\x11\x65\x39\x57\xde\x77\xba\x98\x69\x5c\xde\x9a\x1a\xd5\xae\x60\x93\x35\x0c\xea\xe4\x51\x3e\x96\xad\x60\xb0\x5f\x15\x6d\x36\x96\x48\x8b\xb3\x68\x73\xc4\x5a\xbc\x80\xb2\xcc\x29\x25\x68\xc7\xaf\xb8\x3d\x36\xab\x66\x75\xb7\xb9\xd8\x3a\x6f\x73\xa8\x57\xfc\x8a\x73\xe1\xbc\xf6\x57\x3d\xd0\xec\x35\x81\xca\xf7\x01\xaa\xf7\x7d\xaf\x31\xd4\xbe\x5b\xd0\xc4\xac\xdb\xcc\x9a\x84\xdf\xc2\x40\x74\x80\xfe\x4f\x00\x00\x00\xff\xff\x8d\xe3\xf9\xdb\xeb\x6a\x00\x00")

func stacksIstioTelemetryStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioTelemetryStackYaml,
		"stacks/istio-telemetry-stack.yaml",
	)
}

func stacksIstioTelemetryStackYaml() (*asset, error) {
	bytes, err := stacksIstioTelemetryStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-telemetry-stack.yaml", size: 27371, mode: os.FileMode(420), modTime: time.Unix(1553031689, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksKialiStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x5d\x6b\xdb\x30\x14\x7d\xf7\xaf\xb8\x84\x40\x61\x34\x71\x3a\xf6\x64\xc8\x83\x49\xb5\x2d\xd0\xa6\xc1\x4e\xba\x47\xa3\xd8\xb7\x8e\x88\x2c\x79\x92\xec\xb4\x64\xfd\xef\x43\x8e\x54\x67\xa5\x29\xcb\x8b\x7d\x3f\xce\x39\xba\x70\xef\xc9\xa5\x78\x62\xa5\x8e\x02\x80\x1d\xa3\x9c\x8d\x8e\x05\x9b\x03\xe4\x52\x18\x14\x26\x82\x3f\xa3\x2e\x07\xd0\xa8\x5a\x54\x91\xcb\x00\x6a\xa9\x4c\x04\x5f\x27\x93\xc9\x8d\xab\xe1\xb3\x41\x25\x28\xcf\x2c\x94\xe5\xa8\x7b\x70\xa9\xe8\x13\x15\xb4\x2f\x00\x34\x8a\x47\x30\x3c\xfc\x48\xe2\xef\xf1\x22\xce\xd6\xc9\xdd\x6b\x70\x4a\xec\x66\x3a\x12\x4a\x2e\x37\x94\x67\x35\xaa\x8a\x69\xcd\xa4\x70\xca\x23\x18\x94\x68\xae\x39\xd3\xe6\x7a\x4f\x4d\xbe\x05\x81\x66\x2f\xd5\x8e\x89\x72\xcc\xb4\x61\x72\xcc\x64\xd8\x32\x65\x1a\xca\xbd\xf6\xe0\x02\x6a\x81\xda\x30\x41\x0d\x93\x42\x35\xfc\x32\xae\x7b\x0f\x85\x51\xec\x32\x66\x49\x0d\xee\xe9\xcb\x59\xce\x71\x4f\x3d\xfe\xcb\x39\xe0\xf9\xce\xc6\x7e\xcf\xb7\x69\x5d\xeb\x4f\xba\x8d\x91\x3a\xa7\x9c\x89\xd2\x83\x58\x45\x4b\x8c\xa0\x90\xf9\x0e\x95\x9d\xa9\xdb\xde\xf1\x1b\xb5\x93\xf1\xcd\xa4\x83\xa1\x68\x99\x92\xa2\xb2\x97\xe5\xc4\xe3\xd9\x6a\xfe\x48\xb2\x45\x7c\x4f\xd2\x65\x3c\x23\xd3\xe1\xe1\x2d\x7e\x75\x98\x94\x24\x8f\x24\xc9\x66\x09\xb9\x25\x8b\xd5\x3c\xbe\x4b\xb3\x75\x4a\x12\x8b\x9b\x0e\x0f\x3e\xfc\x04\xbd\x8c\xd3\xf4\xd7\x43\x72\x3b\x1d\x1e\x7c\xe8\xd1\xcb\xe4\xe1\x9e\xac\x7e\x92\x75\x9a\x59\xe2\x7c\x46\xec\x29\x5a\x60\xdf\xe8\x6e\xf3\xe8\x8a\xaa\xa2\xa2\xf0\xb3\x3b\xc7\xb8\x2c\x3c\x75\x51\xa3\xba\xab\x09\xdd\xae\x5e\x68\xc5\x3d\xa9\x75\xc1\xd5\xb7\x2b\x6f\x35\xef\x43\x5b\xfe\xc7\x8b\xff\xa5\x89\xcf\xb5\xd4\xe8\xf9\x9d\x23\xc3\xad\x31\x75\x10\x78\x47\x9e\xfa\xaa\x56\xb2\x42\xb3\xc5\xc6\xbd\xe8\x7a\xd1\x49\x23\xec\xc3\xe0\x9d\x77\xdf\xd0\xae\x1a\xba\x7f\x10\xfc\x6e\xac\x59\x9c\x37\x47\xd0\x52\xc5\xe8\x86\x63\x04\x7e\x3f\x1d\xbf\x40\x9d\x2b\x56\x5b\x60\x04\x83\x46\xdb\xf1\x2a\x04\x23\x81\xcb\x92\x09\x28\xa8\xde\x6e\x24\x55\xc5\xe0\x9d\x8a\xdf\xdb\x07\x2a\x35\xd5\x7a\x2f\x55\xf1\xa1\xca\xdf\x00\x00\x00\xff\xff\x3d\xcf\x6a\x21\xe6\x04\x00\x00")

func stacksKialiStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksKialiStackYaml,
		"stacks/kiali-stack.yaml",
	)
}

func stacksKialiStackYaml() (*asset, error) {
	bytes, err := stacksKialiStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/kiali-stack.yaml", size: 1254, mode: os.FileMode(420), modTime: time.Unix(1549987353, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksLocalstorageStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x53\x51\x8b\xd3\x40\x10\x7e\xcf\xaf\x18\x82\x70\x2a\x97\xe6\xf4\x49\x16\x7c\xa8\xd7\x16\x85\xbb\xb6\xd8\x53\x1f\x44\xc2\x34\x99\xb6\xeb\x6d\x66\xc3\xee\x24\x20\xea\x7f\x97\xdd\xa4\x69\x7b\x70\x3e\x25\x33\xdf\x37\xbb\xb3\xdf\x37\xf3\xd8\x6e\xc9\x31\x09\x79\x95\x00\xd4\xc8\x7a\x47\x5e\x14\xfc\xc9\x12\x00\x00\x6c\xf4\x57\x72\x5e\x5b\x56\xe0\xc5\x3a\xdc\xd3\xe4\xf1\x9d\x9f\x68\x9b\x77\x6f\x22\xe3\x51\x73\xa5\x60\xd3\x63\xb7\x06\xbd\x8f\xe9\x9a\x04\x2b\x14\x54\x31\x02\x60\xac\x49\x81\xb1\x25\x9a\x21\x83\xcc\x56\x50\xb4\x65\x7f\x24\xc1\xf1\x8e\x32\x9c\x33\x39\xf5\x16\xee\xd3\x3e\xab\x68\x87\xad\x91\x2c\xc2\x0a\x52\x71\x2d\xa5\xb1\xb6\x71\xb6\xd3\xa1\x4d\x72\x0a\x1c\x72\x79\x20\x17\x8a\xe2\x85\x59\x83\x72\x88\xb4\xce\x9a\xb6\xa6\x0f\x9a\x2b\xcd\xfb\x7b\x5b\x91\x82\x6f\xa8\x65\x61\xdd\x42\x3b\x2f\xb7\x96\x7d\x5b\x93\x8b\x5c\x17\xba\xd0\xf5\xda\x1a\x5d\xfe\x52\x30\x23\x43\x42\x49\x52\x5a\xde\xe9\x7d\x6c\xb9\xff\xed\x9b\x2f\x2d\x0b\xf1\x49\x38\x80\xdf\xe3\xa3\x52\xb6\x15\xad\x51\x0e\xf7\xd8\xa4\x0a\xbe\x8f\xc0\x39\x69\x24\xa6\x0a\xd2\xd9\x7c\x31\xfd\x72\xf7\x50\xac\xa7\x0f\x1f\x8b\xc5\xea\x73\xb1\x5c\x2d\x8b\xbb\x4f\x9b\x87\xf9\xac\x58\xae\x66\xf3\x4d\x7a\x7d\x59\x18\x5e\xe8\x9f\x9c\x1d\x81\xbc\x43\x97\x1b\xbd\xcd\x07\x51\x72\x17\xac\x8b\x32\xf8\xf4\x82\xfc\xe3\x2c\xfa\x9b\x3c\xcd\xf6\x19\x83\x5b\x32\xa3\x5d\x25\x8a\x18\x0a\x32\x97\x8e\x50\xac\x53\xc0\xd6\xd5\xc8\x89\x27\xd7\xe9\xb2\x9f\xa9\x93\x05\xd9\xb9\x4b\x83\x6a\x75\x8d\x5c\xf5\x41\xf6\x0c\x75\x00\xb3\xac\xa2\x6d\xbb\x1f\x22\x2f\xe8\x64\x44\x7a\x27\x86\x30\x27\x29\xf3\x3e\x33\x7c\x26\x3f\xbd\xe5\xa3\x4d\xd1\xbd\xa3\x77\xff\xe3\x12\x77\xda\x59\xae\x83\xad\xc3\xd1\xeb\xd5\xac\x58\x4e\xef\xe7\x9b\xf5\xf4\x76\xfe\xfe\xc5\x4b\x4f\x66\x97\x87\xd1\xf6\x0d\x96\xf4\x2a\xb2\xf6\xc6\x6e\xd1\x14\x0d\xb9\x5a\x7b\x7f\x1a\xef\x0c\x82\xbb\x7e\xf8\x6f\xc2\x56\xf9\x30\x32\xbd\x19\x71\xd6\x8e\xe0\xd5\x6b\x20\xae\x1a\xab\x59\xfc\xd5\x29\xf7\xb4\xe6\x02\xb3\xd5\x18\x46\x37\xe8\xba\x41\x29\x0f\x40\x1d\xb1\xf8\x51\xb5\x8b\x15\x3e\xdf\xb6\xa1\x33\x5d\xe3\x9e\xc6\x15\xca\x9f\x31\xaf\xbb\x99\xdc\x4c\xde\x26\xff\x02\x00\x00\xff\xff\xdc\x03\x0d\x3a\x3d\x04\x00\x00")

func stacksLocalstorageStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksLocalstorageStackYaml,
		"stacks/localstorage-stack.yaml",
	)
}

func stacksLocalstorageStackYaml() (*asset, error) {
	bytes, err := stacksLocalstorageStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/localstorage-stack.yaml", size: 1085, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksNfsStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xda\x40\x10\xbd\xf3\x2b\x46\xa8\x47\x9c\x28\x55\x0f\xcd\x4a\x39\x44\x91\x2b\x72\x28\x20\x40\xa8\x37\x34\xd8\x03\x8c\x58\xef\x3a\xbb\x63\x27\xa8\xed\x7f\xaf\x76\xcd\x87\x1d\x40\xaa\x6f\xb3\xf3\xde\xdb\xf9\x78\xeb\x5d\xb5\x22\x67\x48\xc8\xab\x1e\x40\x81\x86\xd7\xe4\x45\xc1\x9f\xa4\x07\x00\x80\x25\x2f\xc8\x79\xb6\x46\x81\x17\xeb\x70\x43\x77\xbb\xef\xfe\x8e\xed\x7d\xfd\x10\x11\x3b\x36\xb9\x82\x59\x93\x7b\xd1\xe8\x7d\x3c\x2e\x48\x30\x47\x41\x15\x23\x00\x83\x05\x29\x30\xeb\x26\x5b\x3a\x5b\x73\x50\x25\xd7\x1c\xf6\x3c\xb9\x9a\xb3\xa6\x0a\xb3\xf6\x49\x1b\x11\x29\x5c\xe0\x86\x14\xbc\x55\xb8\x0f\xb7\xd3\x87\x90\x33\xa8\x97\x87\xaa\xee\x03\x29\xd3\x4c\x46\x3a\x5c\x8d\x42\x5e\xa2\x02\x99\xba\x91\x4a\x60\x32\x1d\x2f\x5e\x67\xaf\xe3\x51\x3a\x5d\x8e\x9e\x7f\xa6\x4f\xc7\xc2\x12\x18\xfd\x98\x2d\x67\xe9\x74\x91\x4e\x9f\xbe\xfc\x3e\x07\xcb\xe1\x78\x36\x0f\xd0\xbf\x2d\xdc\xe4\x79\x3e\xec\xa2\xd2\x5f\x93\xf1\x74\x1e\x13\x0d\xb0\xb6\xba\x2a\x9a\xb6\x02\x2b\x8e\xe4\xbe\x0c\x23\xf5\x42\x46\x0e\xe9\x98\xdd\x68\xbb\x42\xbd\x2c\xc9\x15\xec\x43\xf9\x27\xd6\x86\x64\xa0\xd9\xcb\xe0\x1d\x25\xdb\x0e\x32\x47\x28\x34\xc8\x49\x93\x10\x5c\x17\xbb\x20\x55\x65\x8e\x57\xd0\x99\x46\x2e\xae\x53\x3e\x2f\xfc\x10\x66\x61\xc7\xa7\x5b\x0e\xb5\x34\xea\x83\x32\xf2\xa8\x26\x23\x87\x45\xff\x6f\x33\x5d\x01\x93\x97\x96\x8f\x1a\x8e\xbc\xa0\x13\x05\xa8\xdf\x71\xef\x7b\xf1\xd0\x73\x4e\x3b\xce\x76\xfe\x68\x30\x36\x2c\x49\x67\xda\x2d\xd7\xe4\xc8\x7e\x8b\xe6\xe1\xf1\xf1\x6b\xcb\x28\x6d\x73\x84\x2f\xb3\x45\x81\x26\x3f\xb3\x13\xe8\xfb\x6d\xbf\x1d\x26\x59\x27\x2c\x6c\x65\x04\x12\x09\x96\xfd\x06\xd7\xfd\xa2\x6e\x1a\x04\x2e\x8d\x70\x56\xbf\x68\xe5\xa6\x79\x94\xdf\xa2\xa3\xfc\x04\x2c\x1d\xd7\xac\x69\x43\xb9\x02\x71\x15\x9d\x87\x61\x58\x5e\xac\x11\xe4\xf8\xee\xba\xb9\x30\xa8\x49\xa5\xf5\xc4\x6a\xce\xf6\xe7\x61\xbf\x55\xe4\xa5\xd9\x5f\x02\x35\x3a\xc6\x95\x26\x05\x57\x3a\xed\x01\xe4\xe4\x33\xc7\xa5\xc4\xff\x45\x7f\x68\xbd\x84\x77\x0f\x76\x1d\xf0\x10\xde\x38\xb9\xfe\x2d\x9d\xd6\x68\x2e\xa4\xd2\x8f\xd2\x3a\x81\x12\x65\xfb\x49\xed\x5f\x00\x00\x00\xff\xff\x7c\xd3\x96\x06\xc1\x04\x00\x00")

func stacksNfsStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksNfsStackYaml,
		"stacks/nfs-stack.yaml",
	)
}

func stacksNfsStackYaml() (*asset, error) {
	bytes, err := stacksNfsStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/nfs-stack.yaml", size: 1217, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksPrometheusStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x6d\x6f\xdb\x38\x12\xfe\xde\x5f\x31\xd8\x14\xb0\xdd\x46\x72\xd2\x97\x3d\x54\x41\x51\x14\x87\x00\x57\xdc\xbe\x04\xb7\xf9\x72\xe8\x75\x05\x9a\x1a\x5b\x6c\x28\x52\x47\x8e\xec\x18\x4d\xff\xfb\x81\xa4\x24\xcb\x8e\xdf\xe2\xa6\xdb\xdb\x6d\xf2\x21\xb6\x25\x72\xe6\xe1\xcc\xc3\x19\x72\x48\xae\xd5\x58\x4c\x6c\xf2\x08\xa0\x34\xba\x40\xca\xb1\xb2\x51\x78\xea\x1e\x02\x70\xad\x08\x15\x25\x00\x37\x91\x7f\x00\x30\x91\x7a\xc4\x64\x52\xff\x02\xb0\xdc\xb0\x12\x53\xa1\x08\xcd\x94\xc9\x04\x4e\x5f\xda\x47\x4b\xaf\x3a\x6a\xdc\x5f\x04\x1f\xf5\x28\x55\xac\xc0\x04\x7a\xc2\x92\xd0\x51\x81\x36\xef\xb5\x12\x8f\xe0\xd7\x29\x1a\x23\x32\x04\xca\xb1\x56\x08\x19\x8e\x59\x25\x09\x98\xca\x6a\xc1\x40\xcc\x4c\x90\x2c\x8c\x8d\x2e\x80\x72\x61\x9d\x64\xc0\x29\x9a\x39\xbc\x04\x8b\x5c\xab\xcc\xc6\x9b\x91\xb6\x40\x01\xae\xaa\x11\x1a\x85\x84\x36\xb5\xd9\x2a\x62\x87\xd9\x68\x89\x09\xa0\xca\x4a\x2d\x14\x2d\x3a\x02\xb8\x91\xd8\x92\x71\xec\xb4\x6f\x9f\x2f\x3f\x8a\xe0\xf1\xa7\xcb\xf3\x9f\xce\x7f\x3e\xbf\xfc\xd7\xbf\xd3\x5f\xde\xfe\x7c\xfe\xdb\xc5\xdb\xbf\x9f\x7f\x6e\x1b\x19\x94\x6c\x84\x72\x1d\x00\xab\x2b\xc3\x31\xf5\xef\x6d\x02\xef\xd3\xb4\x40\x62\x69\x17\x38\x9a\xa9\xe0\xe8\x4d\x7b\x0c\xb7\xdf\x37\xe0\xd3\x52\x1b\xf2\xad\x3e\x74\xd0\x31\x4e\x42\xab\x04\xae\x10\xcb\xce\x63\x83\x13\xbc\x4e\x6e\xe1\xfe\x7c\xb6\x60\xcc\xa3\xc6\x6d\xbf\x05\xb7\x04\xf0\x30\xd6\x06\x50\x4d\xf5\x1c\x2c\xb1\xd6\x62\x4b\xde\xf7\xaf\x23\xff\xba\xb7\x97\x9b\x0a\x24\x23\xb8\x4d\x4b\x46\x79\x02\x43\xdf\x73\x78\x0b\xc9\xde\xee\x2c\x75\x76\x3f\xa6\x2f\xb5\xd7\x42\x4c\x28\x34\x87\xd8\xb7\x17\x3f\x89\x82\x35\xdc\x68\x7a\x5b\x95\xb3\x2c\x33\x68\x6d\x9a\xae\x73\xb2\x43\xc2\x94\xd2\xc4\x9c\xba\x74\x61\x9b\x54\x68\x0f\x6c\x1d\x26\x83\xa5\x64\x1c\x6f\xc3\xea\xbf\xff\x3d\xf9\xf0\x74\xd0\x7f\x93\x24\xff\xc9\x9e\x0e\xde\x9c\xf5\xdd\xc7\x52\x3b\xdf\xb3\xf0\x41\xe2\xf1\x69\x72\xfa\xf2\xe4\xd5\x49\xe7\x7d\x98\xa2\x01\x7d\x02\x1d\xec\x9d\x11\x36\x28\x7c\xa3\x82\xad\xb1\xce\xfa\x61\x06\x7f\xf5\xe3\x0e\xa0\x7d\x7c\xd5\xce\xd7\xfd\x2c\xb1\x3c\x82\xb6\xf3\x9d\xe9\xb1\x89\x0f\xbb\x34\x36\x7d\x57\xe6\x40\xba\x91\xaf\x47\x70\x7e\xcd\x65\x95\x21\x58\x5d\x20\xe8\xb1\x8f\xa2\x61\x26\xd6\xf3\x07\x28\x67\x04\x39\x9b\x22\x14\xcc\x5a\x31\x45\xe0\xcc\x64\x42\x31\x29\x68\xde\x91\x74\xe9\x82\xaa\x14\x96\xa0\x60\x73\x50\x88\x19\x90\x86\x11\x42\x69\x2a\x85\x19\x8c\x2b\x43\x39\x1a\x28\xf4\x54\x28\x3f\xe5\x67\xcc\x64\xc7\xc0\x2c\x08\x35\xd6\xa6\xc0\xac\x23\x6d\x34\x87\x12\x8d\x7b\xcc\x14\xc7\x3a\x92\x33\xc9\x46\xc2\xa9\x05\x42\x4b\x42\x4d\xe2\x2d\xa6\x05\x2e\x2b\x4b\x68\xbc\x45\xe0\xc3\x9a\x79\xd4\xd7\x15\x8d\x74\xa5\xb2\x1b\xa1\xc2\x67\x67\x0a\xf8\x78\x31\x88\x9f\xf4\xd6\xf8\x21\x33\xba\xdc\xa6\x99\x78\x99\x96\x06\xc7\xe2\xfa\x8f\xd5\xeb\xac\x8f\x2e\xaa\xd4\x53\x67\xbd\xf6\xf8\xe9\xe0\x10\xe1\xa9\x37\x64\x9a\xae\x15\xea\x29\x93\x92\xb4\x87\x01\xdf\x47\x36\x2f\xd3\x4c\xcf\x94\x25\x83\xac\xf8\x6a\x6a\x72\xa2\x32\xed\x7b\x27\xdc\xb0\xac\x10\xea\x40\x57\xec\xa1\xaa\xe1\x67\x5f\x8e\x6e\x0c\x92\x99\xdf\x8c\x84\xe7\x04\xa1\x51\x4c\xde\x14\xec\xfa\x46\x1b\x31\x71\x53\x6d\x37\x8a\x35\x4b\xa5\x52\x4b\xc1\xe7\xdf\x76\xb1\x74\xb4\x94\x87\x1b\x65\xd6\x85\x86\xde\xb0\x7e\xd5\x45\x68\x79\x8e\x05\x2e\xb7\x73\x3e\xe9\xc5\x0f\xeb\xaf\x5b\xee\x5f\xbf\x3e\xe8\x3a\xff\xcc\xd9\x2e\x2a\xb4\x12\xa4\x8d\x50\x93\xcd\x64\x21\x94\xe8\xfc\xf1\xc0\x97\xef\x8d\x2f\xb7\xd7\xeb\x7b\x90\xa6\x14\x52\xd3\x03\x55\xbe\x3b\xaa\x5c\xbc\xfb\xe9\xd7\xcb\xfd\x69\x32\x61\x52\xe2\x43\x48\xf9\xde\x78\x12\x52\x4a\x70\xfe\x06\x9a\x1c\x35\x9e\xee\x94\x00\xde\x5e\xbc\x03\x07\x0b\xcd\xda\x12\xc0\x02\x5c\xc4\x4a\x51\x37\xec\xfd\xe1\x4e\xa9\x89\xd1\xe1\x9e\xe3\x4b\x02\x6e\x9c\x0b\xa1\x24\x6d\xda\x2d\x8f\x85\x3f\xce\xd2\xb1\x70\x28\x86\x53\x66\x86\xa6\x52\x43\x8b\xdc\x20\xd9\xe1\x02\x7d\x2c\xf4\xb0\x76\x0e\xe3\x5c\x57\x8a\x86\x9c\xc5\xdc\x2c\x34\x8e\x90\x19\x34\x29\xe9\x2b\x54\x07\xc9\xf3\x3d\xff\xff\x69\xb4\x10\x73\xb6\x6c\xdc\x68\x8f\x62\xc1\x4a\xc1\xa1\x63\x8f\xda\x81\xb1\x9d\xf2\xe4\xc5\x8b\xe7\x5b\x08\xa9\x74\x86\x16\xfa\xae\xaf\x44\x1a\xec\x20\xa5\x6f\xdd\xfb\xeb\xf0\x62\xcf\x09\xe5\x86\xbd\x0f\x97\x0e\xa9\xdd\x38\xd9\xeb\x8b\x37\xf7\x4f\x80\x3d\x4b\x42\x0e\xd1\x2a\x8d\x9b\x12\x58\xbc\x54\xf0\x5a\x85\xd8\x4d\x43\x9b\x71\x0e\x59\x29\x86\xd3\xd3\xa1\x67\xd3\xf0\xf1\xe3\x4f\xa7\x9f\x87\xa5\xd1\xd7\xf3\x26\x57\xb5\x7c\xbd\x5d\x43\xfd\x67\x20\x2a\xf0\xb7\xd9\x54\x58\x6d\x9a\x8c\x75\xd4\xf6\xf1\x55\x1a\x61\xc1\xe0\x7f\x2b\x61\x30\x6b\xbb\x85\xe1\xc1\x69\xfc\xb7\xf8\xb9\x4f\xc4\x92\x11\x9a\x63\x98\xe5\x68\xb0\x15\x08\xab\x18\xfa\x94\x6b\x8b\x30\xf3\xff\x7d\xb8\x84\x11\x4e\x84\x82\x99\xa0\x1c\x7a\x8b\x42\x67\x6f\x10\x8a\x48\x23\x44\x05\x06\x0b\x3d\x75\xca\x43\x76\xc7\x56\x5c\x33\x80\xa6\xf8\xd4\x44\x8f\x18\x02\x72\xb7\x08\x08\xd3\xd4\xfa\x05\x44\x8b\xab\x69\x08\xa4\x5b\x61\x6e\x53\x2d\x70\xea\x96\x1a\x0e\x5d\x2d\xf3\xb6\x4d\xde\xa9\x55\x0b\x9c\x44\xee\xff\xb3\x63\xa7\x63\xd1\x13\x98\x41\xd0\x4a\xce\x01\xaf\x4b\x6d\x31\x03\xad\x96\x50\xb4\x12\xff\x71\x79\x79\xd1\x42\x3a\x83\xca\x22\xfc\xb0\xcd\xc9\x9f\x4e\x3f\x27\x2f\x4e\x5f\xbd\x58\x76\xf4\x0f\xad\x3c\xa1\x42\x19\x8e\x33\x8b\xd0\x77\xde\x41\x65\xab\x8e\x5f\x7a\x36\xe8\x0c\x49\x11\x72\x66\x55\x8f\x82\xad\x33\x61\xd9\x48\x62\xe6\x3d\xd2\x4a\x74\xb0\xa3\x88\xb3\xd0\x3d\x72\xc1\xf9\xf5\x49\x6b\xfe\xb1\x64\x93\xc1\x06\xf2\x38\x17\x08\x0b\x4a\x13\x28\xe4\x68\x2d\x33\xf3\xb0\x72\xcb\x75\x25\x33\x18\x61\xeb\x5e\xb1\x62\xd8\x1f\x5d\xbb\x56\x1a\x32\x23\x05\x1a\x70\x59\x5c\x68\x65\x8f\x41\x1b\x10\x04\x33\x21\x25\x70\xe6\x8c\xe6\x50\xb6\x75\x48\x5f\x4c\x0c\xce\xcf\x80\x66\x82\x63\xbc\x23\x20\x37\xc3\x7b\x88\xc9\x0f\x31\xb9\x71\xf5\xd7\x89\xc9\xc3\x86\x6a\x5b\x16\x13\xb5\x5f\x17\x0b\xd0\x5d\xf4\xad\x3b\x44\x6d\x87\x7b\x58\xeb\xde\xcb\x5a\x6f\xe3\xa1\x51\x18\xf4\xfe\x0b\x3c\x32\xd5\xdd\x4e\x47\xf6\x40\xe0\x26\xf8\x21\x87\x27\x69\xdd\x77\x85\x05\x81\x44\x3e\x5e\xbc\xb9\xdb\xe1\xd1\x4e\xac\x8e\x73\x87\x21\xdd\xc2\xda\xdb\xa4\xbf\xf3\xb9\xe0\x6e\xe0\x7b\x9f\x0d\xee\x17\x11\x0e\x3b\x3f\x7c\xfc\xec\x0b\x03\x59\x33\xce\x6f\x71\x38\xb8\x4e\xce\xc1\xfb\xae\x7b\x00\xb0\x23\x14\x95\x3a\xbb\x7b\xf4\xd9\x76\x64\xee\xd7\x5d\x63\x18\x0b\x63\x09\x68\xa6\x83\xe3\xc2\x12\xab\x34\x68\x51\xd1\xb1\x13\xd0\x59\x55\x34\xa9\x1f\x46\x73\xbf\x30\x08\x45\x06\x8b\xdc\x2d\x84\x3e\xea\xd1\xb6\xc3\xc0\x3b\x1e\x7e\x7f\xf5\x38\xb6\xa2\xdd\x8a\x0c\x39\x33\xa9\x1f\x92\x07\x40\x8c\x2a\xbb\x0e\xc0\xd2\xc1\xd3\xfe\x13\x7e\x07\x80\xa0\xb8\x20\x79\x17\x9d\x6e\xd4\x5f\xa4\xf5\xcf\x11\x0e\xbf\xf1\x35\x89\x4e\x98\x7b\xb8\x23\x71\xef\x77\x24\xb6\x05\xbc\xa8\x1b\x61\xbe\x74\x0f\x81\xc4\x87\x41\x1e\x47\x43\x76\x68\xb4\x26\xff\x35\x2e\xb1\xe8\xf6\x40\x43\x9b\xfa\xb8\xff\x11\xcf\x99\x50\x2b\x9d\xae\x70\xbe\xa9\xcf\x15\xce\x57\x1a\x0b\x15\x46\x94\xda\x2b\x51\xa6\x53\x34\x62\x3c\x0f\x21\xcc\x05\xe5\x05\xbd\x21\xd3\x18\xf6\x79\xb6\x2a\x1d\xcf\xa1\x8e\xb5\x8a\x15\x4b\x77\x2f\xbe\xc5\x0d\xaa\xaf\x13\xba\x8f\xa0\x8e\xc4\x10\x02\x30\x2c\xd4\xb8\x3d\x2f\xcb\x32\xcc\x5c\xfa\x69\x5a\x09\xf5\x11\x39\x69\xd3\xd9\xd7\xfa\xed\xba\x8f\xa6\x33\x6d\xae\xa4\x66\x99\x0f\xab\x69\x73\x73\x85\x33\xe5\x93\x59\x89\x5c\x8c\x05\x67\x52\xce\xc1\x33\xd6\x57\x13\x98\xcf\x79\xa4\x41\xa8\x4c\x70\x46\x08\x82\x2c\xb4\xb7\x5e\x34\x18\xe4\x28\xa6\x08\x4e\x26\x90\x61\xe3\xb1\xe0\x5f\x94\xf8\x36\xa4\x9e\x3d\x02\xe1\xf6\x9c\xb1\xde\xda\xfd\xfe\xfb\xdf\xcf\x3e\x3c\x1d\x9c\xf9\xcf\x27\x83\xc1\x4d\xbf\xfe\x76\x16\xd2\xc9\x5f\x2c\x9f\x7c\xf0\x47\x5e\x4a\xce\xbd\x3d\xa0\xb9\x97\xe3\x8b\x39\xc2\x42\xae\x2d\x25\x6e\x6a\x6d\x30\x60\xa0\x93\xa6\x1c\xcd\x4c\x58\x04\xa6\x00\xaf\xc9\xb0\x1a\x71\x5d\x64\x73\xfb\xe5\xde\x82\x9f\x6e\xaf\xe9\x63\x53\x1d\xa9\x36\xe6\xa0\x64\x39\xf5\x3c\x24\xc6\x87\xc4\xe8\x12\xe3\xa3\x7a\x6b\xb1\x72\xd9\x3b\xc4\xe8\x70\x62\x9b\x96\x68\x0a\x61\x7d\xd9\x2e\x3c\x8f\xc2\x59\x49\xfd\xbd\x91\x50\xff\x5c\x2e\x43\x44\x4e\x55\xf3\xb5\x2e\xa9\xf8\x62\x4a\xfd\x28\xe4\x84\x82\x95\x4d\x1b\xc7\xf4\xca\xc8\xd7\x4b\x05\x70\x51\xb0\x89\x4b\x2a\x46\x17\x9d\x5b\xbd\xc9\xf4\x59\xfc\x3c\x3e\x5d\xb4\xb8\xa8\xa4\xbc\xf0\x57\x61\x12\x78\x37\xfe\x45\xd3\x45\xd8\x5c\xf8\x16\xa1\x8c\xdb\x0c\xe0\xd5\xc9\xab\x93\xa1\x9b\x38\xfe\xf7\x52\x66\x8a\xd6\x5c\x7a\xf7\x99\x76\xf1\xb8\xf3\x35\x9e\x17\xb2\x96\x51\x14\x4c\x65\x8d\x8c\x28\xb2\xa4\x0d\x9b\x60\x4c\x36\x1b\xc5\x06\x09\x95\xf3\xcd\xeb\x1f\xf3\xb6\x45\x10\x1e\xbb\x64\xfe\x7a\x87\x86\xff\x05\x00\x00\xff\xff\x28\xbc\xe1\x7c\x93\x2f\x00\x00")

func stacksPrometheusStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksPrometheusStackYaml,
		"stacks/prometheus-stack.yaml",
	)
}

func stacksPrometheusStackYaml() (*asset, error) {
	bytes, err := stacksPrometheusStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/prometheus-stack.yaml", size: 12179, mode: os.FileMode(420), modTime: time.Unix(1551893106, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksRioAutoscalerStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x5d\x6e\xdb\x30\x10\x84\xdf\x7d\x8a\x7d\x33\x50\x98\xfe\x43\x51\x24\x3c\x45\x6e\x50\xac\xc9\x89\x44\x94\x7f\x20\x57\x56\x5c\xf4\xf0\x05\x2d\xc9\x8e\x0b\x17\xc8\xa3\xbe\x99\xe1\x8e\x96\x34\x29\xbe\xbb\xae\xea\x15\x11\x0f\x92\xaa\x61\x0f\x35\xc1\xc6\x88\x4c\x8a\x82\x28\x9a\xfe\xa8\xeb\x37\x11\x22\x9f\x3c\xd4\x64\x95\xa4\x7e\xa3\x24\x4d\x52\x06\xcc\x86\xc0\x1f\xb3\x3a\x64\x55\x58\xa0\xe9\xb0\x9f\xb5\x76\x1c\xbb\x88\xd2\x86\x98\xa1\x14\x44\x73\x51\xc2\xa5\x83\xa8\x8c\x62\x10\x85\xbb\x96\xd8\x7e\x29\x62\xf1\xce\x83\x17\x4d\x87\xd9\x5d\xe5\xda\x6e\x74\xd1\xa6\x51\xd3\x8f\x7d\x9d\x85\xcc\xd1\x99\x3b\x5f\xb0\x38\xf3\x4b\xb9\x28\x28\x67\xf6\x9a\x8e\x0b\x7f\xf8\x3d\x25\x7d\x41\xed\x93\xb7\x9a\xbe\x87\xa7\x8e\xae\xb0\x41\xfb\x03\x97\xac\xa6\x63\x58\xad\x2a\xca\xd9\x19\x3c\xec\x36\x95\x69\xab\x9d\x4f\x27\xf6\x3f\x33\x4a\x70\xb5\xba\x14\xeb\xc4\x15\xad\xbf\xd1\xb4\xfe\xc0\xb9\xae\xef\x10\x67\x44\xb9\x81\x0e\xb2\xf1\xae\xca\x66\xc8\x96\x05\x9b\x91\xc5\xf4\x1b\x0b\x0f\x01\x15\x97\xb6\x86\x45\x3c\xb6\x2e\xed\x96\x1a\x9f\x92\x93\xfb\x53\xbe\x45\xd4\xed\xfe\x9f\x84\x1b\x2e\x30\x29\x04\x44\xcb\xd2\x0a\x3f\x3d\x8f\x72\xb2\xf5\xdf\x8e\x93\x3c\x4f\x42\xb4\x39\xb9\x28\xff\xc9\xdf\xda\x5e\x65\x17\xae\x6f\xc1\xb2\xab\x3d\xc7\xc3\xeb\xeb\x71\xf7\xd0\xb4\x68\x8b\xf3\xdd\xf9\x36\x78\xff\x96\xbc\x33\x17\x4d\xec\x47\xbe\x4c\x43\xf0\x91\x53\xc5\xb2\xe0\x97\xfd\xae\x17\xc9\xf3\xe3\x0e\x81\xa3\x5d\xa4\xc7\xb3\x67\xa8\x94\xc5\x69\xe8\x96\xba\x2c\x18\xf9\x72\xd3\x5a\x69\xc4\xe5\x9a\x5e\xf6\xeb\xd5\xdf\x00\x00\x00\xff\xff\x48\x65\xd3\x5d\x52\x03\x00\x00")

func stacksRioAutoscalerStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksRioAutoscalerStackYaml,
		"stacks/rio-autoscaler-stack.yaml",
	)
}

func stacksRioAutoscalerStackYaml() (*asset, error) {
	bytes, err := stacksRioAutoscalerStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/rio-autoscaler-stack.yaml", size: 850, mode: os.FileMode(420), modTime: time.Unix(1553031689, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"stacks/build-controller-stack.yaml": stacksBuildControllerStackYaml,
	"stacks/build-stack.yaml":            stacksBuildStackYaml,
	"stacks/cert-manager-stack.yaml":     stacksCertManagerStackYaml,
	"stacks/grafana-stack.yaml":          stacksGrafanaStackYaml,
	"stacks/istio-crd-stack.yaml":        stacksIstioCrdStackYaml,
	"stacks/istio-stack.yaml":            stacksIstioStackYaml,
	"stacks/istio-telemetry-stack.yaml":  stacksIstioTelemetryStackYaml,
	"stacks/kiali-stack.yaml":            stacksKialiStackYaml,
	"stacks/localstorage-stack.yaml":     stacksLocalstorageStackYaml,
	"stacks/nfs-stack.yaml":              stacksNfsStackYaml,
	"stacks/prometheus-stack.yaml":       stacksPrometheusStackYaml,
	"stacks/rio-autoscaler-stack.yaml":   stacksRioAutoscalerStackYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"stacks": &bintree{nil, map[string]*bintree{
		"build-controller-stack.yaml": &bintree{stacksBuildControllerStackYaml, map[string]*bintree{}},
		"build-stack.yaml":            &bintree{stacksBuildStackYaml, map[string]*bintree{}},
		"cert-manager-stack.yaml":     &bintree{stacksCertManagerStackYaml, map[string]*bintree{}},
		"grafana-stack.yaml":          &bintree{stacksGrafanaStackYaml, map[string]*bintree{}},
		"istio-crd-stack.yaml":        &bintree{stacksIstioCrdStackYaml, map[string]*bintree{}},
		"istio-stack.yaml":            &bintree{stacksIstioStackYaml, map[string]*bintree{}},
		"istio-telemetry-stack.yaml":  &bintree{stacksIstioTelemetryStackYaml, map[string]*bintree{}},
		"kiali-stack.yaml":            &bintree{stacksKialiStackYaml, map[string]*bintree{}},
		"localstorage-stack.yaml":     &bintree{stacksLocalstorageStackYaml, map[string]*bintree{}},
		"nfs-stack.yaml":              &bintree{stacksNfsStackYaml, map[string]*bintree{}},
		"prometheus-stack.yaml":       &bintree{stacksPrometheusStackYaml, map[string]*bintree{}},
		"rio-autoscaler-stack.yaml":   &bintree{stacksRioAutoscalerStackYaml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
