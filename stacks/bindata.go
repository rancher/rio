// Code generated by go-bindata.
// sources:
// stacks/build-stack.yaml
// stacks/cert-manager-stack.yaml
// stacks/grafana-stack.yaml
// stacks/istio-stack.yaml
// stacks/istio-telemetry-stack.yaml
// stacks/kiali-stack.yaml
// stacks/localstorage-stack.yaml
// stacks/mesh-stack.yaml
// stacks/nfs-stack.yaml
// stacks/prometheus-stack.yaml
// stacks/rio-autoscaler-stack.yaml
// stacks/rio-controller-stack.yaml
// DO NOT EDIT!

package stacks

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _stacksBuildStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x7b\x6f\xdb\x38\x12\xff\x3f\x9f\x82\x30\x16\xe8\x6e\x11\xd9\x92\x2c\x59\x0f\x20\xb8\xcd\x3a\xde\xdd\x5c\xdb\x24\x88\xbd\x77\x28\x8a\x22\xa0\xc8\x91\xcc\x0b\x25\xea\x48\xca\x6d\xae\xdb\xef\x7e\xa0\x5e\x96\x5f\xd9\xbb\x6d\xb7\x2d\x10\x58\x33\x3f\x0e\xe7\xcd\x21\x89\x28\x52\x96\xa9\xf8\x0c\x21\x2e\xb2\x8c\x15\x99\xf9\x89\x10\x11\x85\x86\x42\xc7\xe8\x77\xab\xfe\xae\xd9\x1c\x36\xc0\xc7\x86\x25\x05\xe7\x20\x63\xc4\x8a\x54\xb4\xfc\x21\x42\x02\x55\x16\x2b\x98\x3e\x85\xc8\x98\x7e\x96\xff\x01\x92\xb5\x10\x8f\x7b\xec\xff\xe0\xd2\x32\x5a\x82\xb4\x1a\xbd\x63\xf4\x7b\xcf\x44\xe8\xd3\xe0\x37\x42\xa3\x5a\xd2\x28\x46\x23\x23\x63\x74\xbe\xcb\xa4\x86\x29\xca\x1c\x0a\x3d\x8a\x51\x8a\xb9\x82\x3d\x84\xc2\x79\xc9\x59\x91\x8d\xe2\x3d\xc1\xc8\x48\x64\x9a\x61\x23\xdc\xb1\xed\xf3\x7d\xae\x5e\x83\x04\x9c\x6a\x90\x0d\x60\x87\xff\x79\x6f\x1b\x51\xe9\xb2\xd2\x77\x58\xaf\xd5\x28\x46\xef\x46\x4a\x53\x51\xe9\xd1\xfb\x3d\x18\x48\x29\xe4\xed\x21\x16\xa4\x3c\xc4\x16\x44\xd0\x46\xf3\xd1\xbf\x94\x28\xf6\x6d\xaf\xf9\x20\xe7\xb5\x0b\x8f\x99\xa7\x59\x0e\xaf\xe0\xc9\xac\x1f\x1d\x58\x57\xbb\xb5\xe5\x36\x2e\x3e\x80\x14\xb8\x5f\xdf\x84\xeb\x10\x42\xb0\x49\xa0\x16\xd4\x7c\x1c\x82\x72\x50\x0a\x67\x9d\xa8\x5c\x65\x87\x10\xa5\x31\x79\xd4\x12\x93\x0e\xb5\x25\x1c\x51\x9d\x15\xb0\x28\x3a\xd7\x9c\x30\x6d\xd1\x78\xe7\x38\xc2\x78\xe6\x59\x00\xad\x24\xd6\x4c\x14\xcf\x82\x1a\x7b\x87\x90\xdd\x14\x39\x1b\xfe\x3e\x53\x20\x37\x8c\x40\x5d\xa3\x49\xc5\x38\x7d\x64\xba\x29\xd2\x1c\x7f\x5c\x12\xcc\xc1\x64\x59\x43\x60\x45\x47\xe8\xaa\x98\x54\x52\x42\x41\x9e\x62\xe4\xd7\xa4\x52\x48\xad\x9a\xe5\x16\x8a\x6c\xdb\x99\x68\x52\x9e\x77\x72\xcf\x59\xa1\x41\x16\x98\x5f\x68\x59\x41\x8d\x52\x4f\x4a\x43\xbe\x2c\x81\xc4\xad\x5e\xa5\xa0\xc3\xcf\xa6\x59\x60\x56\x80\x54\x5b\x9a\x85\x58\x8e\x33\x88\x51\x2e\x92\xa7\x49\xaf\xf7\xc6\x1e\x4f\xc7\xd3\x81\x81\x58\x66\x83\x55\x66\x9d\x65\x61\x4a\xe5\x0e\x49\x93\x32\x9e\x4c\xec\x71\xfd\x3f\x36\x5a\x0f\xd8\x26\xdb\xe2\xde\x33\x74\xc0\x19\xd8\xda\x49\xea\x55\xbd\x13\x52\xc7\x68\x4f\x94\x02\x52\x49\xa6\x9f\xe6\xa6\xfb\x7d\xd4\xf1\x4e\x58\x4a\xc9\x36\x8c\x43\x06\x34\x46\xad\x77\x24\x64\x4c\x69\xf9\xd4\x00\x5b\x83\x7b\xa2\x5b\x53\x39\x4e\x80\xf7\x5a\x48\xf8\x77\x05\x4a\x5b\xaa\x4a\xa8\xc8\x31\x2b\x62\xf4\xc2\x08\x7b\x71\xd6\xee\x2f\x61\x1b\x1e\xc9\x84\xf5\x81\x71\x4a\xb0\xa4\xf1\x04\x34\x99\x74\xb2\x6b\x00\x14\x9b\x0e\x79\xbf\xf8\xe5\x7a\xb9\xba\x7f\xfb\xf0\xeb\x6a\x75\xf7\x70\x79\x75\x75\x7f\xd1\x79\xcb\xf3\xa6\x47\x41\xab\xd7\xcb\x87\xf9\xe2\x7e\x75\xfd\xf3\xf5\xfc\x72\xb5\xb8\xd8\x91\x3f\xd1\x5c\x8d\x89\xd4\x27\x57\xbe\x5a\xbc\x3d\xb2\xe2\x11\x9e\x0e\x93\xcc\xf3\xa6\x46\x89\x3a\xcf\x76\xf4\xdf\x08\x5e\xe5\xd0\xe3\x94\x16\x12\x67\x60\xf5\xfe\x9b\x6c\xb0\x9c\x70\x96\x0c\xad\xee\x0e\x86\x7a\x4d\xc6\x45\x82\xf9\x43\x09\x32\x67\x4a\x31\x51\xf4\xb2\x46\x2f\x3b\x24\x2b\xb0\x16\x72\x2c\x99\x18\x13\xac\x35\x87\x31\x13\x93\x8c\xe9\x96\x2d\x81\x00\xdb\x80\x54\xa3\xff\x77\x25\x7c\x04\x52\x99\x52\xef\x97\xbe\x78\x89\x9a\x63\x29\xc7\xa5\x7a\xb1\x25\xc2\x06\x0a\xdd\x13\xda\x18\x0f\x33\x86\x62\xa6\xd6\xb8\x70\xa2\xc8\x9d\xec\x6c\x1e\x53\xd8\x9c\xed\x56\x89\xb5\xab\xde\x59\x57\x33\x9c\x29\x0d\x45\x5d\x3a\xa0\x54\x4b\x8e\x43\x3b\xb2\xb7\x3b\xdd\x55\x9c\xdf\x09\xce\x4c\x37\xc0\xfc\x03\x7e\x52\x87\xd1\x32\x2b\xea\x50\xad\xb5\x2e\xad\xfd\xbd\xea\x2a\xb3\x06\x13\xc0\x1f\xc4\xe1\xc5\x4b\xd3\x2d\x86\xce\x30\xd5\xaa\x4a\x4c\x60\x48\x6c\x7d\x72\xd2\x67\x35\xa4\xee\x82\x98\x10\x51\xed\x72\x8e\xfb\xfc\xa3\x19\x5f\x8c\x2a\x13\x0a\x25\x17\x4f\xf9\x8e\x3c\x22\x01\x6b\x38\xcf\x40\x9f\x1b\xc7\x9d\x7f\xc0\x9a\xac\xcf\xcb\xfa\x6f\x55\x52\xc3\xa3\xc0\x41\x43\x63\xf1\xf8\xb1\xc0\x9a\x6d\x60\x4c\x61\xd3\xf4\xb2\xaf\x29\x6a\xa2\x34\xd6\xd5\x57\x94\xa8\x21\x2f\x39\xd6\xf0\x75\x44\x12\x5e\x29\x0d\xf2\x84\xe4\x97\x88\x60\xb2\x66\x45\x36\xee\x8e\x8e\x9d\xc5\x75\xde\x0d\xd1\xb8\x64\x75\x6c\xea\x34\x19\x3f\x86\xca\x54\x15\xa9\x94\x16\xb9\x04\x25\x2a\x49\x80\x42\x5a\x0f\x58\xa2\x68\x17\xb6\x65\x92\x11\x69\xc0\xad\x78\x4b\x02\x07\xac\x40\x99\x9a\x5c\x57\xc9\x98\x88\xbc\xe3\x35\x6e\x98\x90\x9c\x4e\xb6\xb9\xfa\xa3\x5a\x63\xd7\x9f\xc5\x41\x90\x84\xe1\x34\x05\x12\x84\xae\x9d\xd0\xa9\xeb\x44\xc4\x76\x9c\x20\x9a\xa5\xbe\xef\xa6\x8e\xef\x07\x2e\xb6\xa7\x41\x18\xf9\x69\x02\x01\x0e\x48\x10\x92\x60\xea\x86\x29\x8d\x66\x4e\x18\x74\x27\x6b\x37\x37\x1b\xc3\xda\xd9\x79\xd2\x8d\xcd\x75\x6b\x6c\x30\x56\xcb\xdb\x6f\xd9\xcb\xb7\xcb\xd5\xe2\xcd\xc3\xcd\xe5\x9b\xc5\xf2\xee\x72\xbe\xb8\xf8\xee\x53\xff\xfb\xf3\x41\xd1\x1b\x29\x5a\x34\x03\x5f\x47\x6a\xbe\xf4\x5a\x82\x5a\x0b\x4e\x5b\xf2\xf5\xcd\xcf\xb7\x1d\xa2\x1d\xc4\x8d\xfb\x5a\xd2\x9f\xf3\x61\x3f\xcf\x77\x3e\x84\x24\xf5\xc3\x34\xf4\x42\x32\xf3\x89\x6f\xe3\xc0\xf1\x43\xec\xf8\x3e\x4d\x02\xb0\xa7\xa1\x47\xa6\xde\xd4\x76\x5d\xc7\x9f\x79\xc4\x4b\x12\x9c\x86\x53\x08\xd3\x84\x42\x98\x06\xfe\x2c\xed\xb4\xb1\xea\x7b\xc0\x97\xaa\xd7\x5d\x26\x3a\xe5\xec\x28\x75\xdd\xc8\x89\x5c\x7f\x96\x60\x2f\x0d\x3c\xdf\x01\x0f\xfc\xc8\x77\xdd\x20\x4d\x42\xdf\x4d\x6c\xec\xfb\xe0\x83\x03\xde\x2c\xf2\x48\x12\xd0\xd4\x4f\xb0\x8d\x69\xe0\xb9\x89\xdb\x1d\x97\x56\x21\xca\x2f\x57\xae\x10\x65\xa7\x17\x9e\x3a\x21\x40\xe0\x86\xd4\x77\x66\x69\x1a\x4c\x5d\x70\xc3\x99\x43\x6c\x97\xd2\x34\x9c\x39\x51\x00\xbe\x4b\x66\x6e\x18\xda\x5e\x34\x8b\xfc\x20\x74\x30\x49\x82\xc0\xb1\x49\xe8\x39\xd4\x3b\x3b\x3b\x7b\xac\x12\x90\x05\xe8\xe6\xd4\xcc\x71\xc1\x52\x50\xdb\x5b\x1a\x2e\xd9\x3f\x40\x9a\xd2\x8a\x8f\x17\xda\xc6\x49\x40\xe3\x66\xe4\x79\x64\x05\x8d\xd1\xbc\x2e\xbd\xfb\xb6\xf4\xae\xfa\xd2\x6b\xe6\x49\xd0\x98\x62\x8d\xbb\xe9\x65\x77\x96\x41\x68\xa7\x4d\x48\x6a\xb1\x42\x69\xcc\x79\x8c\x46\x66\xa6\xe9\xa6\xda\xc1\x80\xa6\xc6\x07\xfd\xa5\x19\x7c\x06\xf3\x24\xa6\xb4\xd6\x00\xf3\x3b\x59\xf7\x94\xb9\x99\x13\x8a\x7e\x5b\x0b\xfd\x7d\x79\x7b\x63\x6e\x41\x31\x1a\x37\xad\xd3\xdc\x49\x9b\x45\xea\xdd\xdf\xbe\xff\x71\xac\x9f\x4a\xb8\xb8\x18\x2d\x2b\x42\x00\x28\xd0\xd1\x0f\xef\x5b\xe4\xd9\xee\xd4\xd8\x23\x7a\xba\x59\x1a\x23\xa5\x65\x57\xb2\x7f\x7a\x43\x09\x58\xb5\x7e\xdc\x6e\x78\xbf\x4b\xfc\x1f\x77\x53\x1a\x4b\xbd\x62\x39\xec\xab\x7f\x40\x6f\x04\x9a\x86\xfe\xac\xf2\x79\xc9\xc1\x68\x7f\x44\xe6\xfc\x38\xf3\x40\x70\x26\x45\x55\xc6\x87\xe7\xc5\x20\xe8\x83\x4c\x21\x58\x43\x26\x24\x83\x9d\x2b\x02\xe6\x7c\xf0\xd5\x0a\xd9\x66\x57\x9d\xa0\x3f\x99\x0d\x7a\x5a\xc9\x2b\x89\x79\x97\x4d\x2d\x59\x11\x61\x94\xbb\xe9\x46\x8b\x0e\xae\xaa\xa4\x3b\x53\x06\xdb\x36\x4e\x88\xd1\xa7\xee\x9e\xb5\xe9\x4a\x66\xe3\x60\x5e\xae\xdb\xf2\xb0\xac\xc3\x9a\x7a\xf6\xa8\xdb\x59\xdd\xe8\x7e\xdd\x77\x8f\xfd\x4a\x6a\x7c\xbd\x6d\xac\x43\xaf\x19\x13\x62\x74\x70\x1c\x0c\x6b\xe4\x8b\x4e\xc4\xbf\xa8\x9b\x7f\x03\x7f\x75\x9d\xfe\x1b\x7a\xeb\xaf\x39\x5c\xbe\x85\xaf\x88\xb2\x52\xd0\x64\x0d\xf2\x8b\xdc\x45\xb8\xa8\xa8\x55\x3b\x04\xa4\x9a\xec\x8b\xfd\x16\xa6\x14\xa2\xfc\x86\x11\xff\x9a\x27\xf6\x29\x0f\x1d\x4e\xd9\x47\xdc\x32\x6f\x06\xef\xba\x01\xae\xda\xc1\xfb\x19\x2f\x75\x2f\x20\x07\xce\x28\xb1\xc4\x39\xe8\xc1\xf3\x8c\xd5\x2e\xb9\x7e\x73\xf9\xcb\xa2\x6f\x8c\x14\x14\x91\xac\xd4\xb5\x86\xff\x5c\x83\x04\xa4\x05\x2a\xab\x84\x33\xb5\x46\x7a\x0d\x48\x82\xaa\xb8\x66\x45\x86\xb6\x73\xd1\x56\xda\xd5\xed\xfc\xd5\xe2\xfe\xe7\xeb\xd7\x27\x44\xae\xd6\x50\x23\x91\x48\x6b\x69\x57\x82\x3c\x82\x4c\x19\x87\x01\x3e\xc5\x15\xd7\x31\x1a\x6d\x99\xa3\xbd\x6d\xee\x7e\x5b\xfe\x7a\x52\x67\xbd\x06\x89\xca\x4a\xad\x91\x90\xa8\x10\xfa\x88\xe4\xe1\x68\xd2\xab\x7e\x7d\xbf\x98\xaf\x6e\xef\xdf\x9e\xd6\x9c\x32\x09\x44\x0b\xf9\xd4\xbd\x21\x19\x37\x18\x33\x70\x59\x1e\xd9\x65\xf2\x41\xc8\xc7\x3a\x55\xf7\xf7\xfa\xe9\xb7\xeb\xd7\x57\xaf\xae\x57\x0f\xf3\xd7\xd7\x8b\x9b\xd5\xc3\x33\x41\xd8\xf7\x58\x9d\x0a\xaf\x98\x46\x84\x33\x28\x34\xfa\xbe\x8e\x39\xd1\xfc\x87\x9d\x80\x0c\xf5\x38\xf2\xfc\xe6\x58\x52\x08\xcd\x41\xa9\x2e\xcf\x5d\xcf\x0e\x08\x09\x52\xd7\x03\xc7\xf7\x70\x90\xcc\xa2\x28\x0a\x22\x12\x10\xa0\x61\x38\x0b\x6d\x9f\x60\x32\x0b\x22\xd7\x76\x66\x11\x25\x90\x10\x82\x23\x67\x36\xf3\xa2\x29\x80\x9b\xcc\x4e\x9a\x78\x75\xb9\x78\x73\x7b\x53\x3f\x48\x2d\x96\xcb\xd3\x46\xb6\xcf\x16\x07\x76\x52\x0c\xb9\x28\x5a\x3b\x1f\x99\xa6\x3f\x74\x0f\x01\xc7\x02\x5b\xbf\x12\xf6\xd0\xd8\x71\xa7\x5e\xa7\x99\xd2\x50\x1e\xa4\x7f\xf3\x9a\x81\x0b\x6a\x99\x8c\xe9\x25\xb6\xcd\xe3\xbb\xef\x3e\x1d\x0d\xd5\xf6\x79\xd6\x84\x98\x15\xd9\x15\x93\x35\xba\x4f\xa2\x2d\x82\x88\x3c\xc7\xa6\x96\xdf\x8d\xba\x50\x8d\xce\xd1\xa8\x79\xe2\xbc\x18\xee\xb0\xeb\xa9\xcf\x06\x55\xaf\x38\x78\x3d\x36\xff\x46\x96\x55\x4a\x91\x19\x97\x5d\x94\x1c\xb3\xfd\x27\xfe\x1e\x95\xca\xfa\x42\x4a\x2f\x68\x5f\x4e\xe3\x8d\xfd\x47\x68\x4b\x94\xda\x28\x60\xe0\xc6\x53\x46\xd1\x6d\x71\x7f\x3e\xb5\x9c\x0b\x82\x6b\xf3\x48\xf3\x7c\x7a\x31\x6e\x6c\xed\xe9\x5b\x25\x0c\xeb\xb8\x10\xf8\x58\x0a\xa9\x41\x5e\xd4\x51\x68\x04\x74\xb4\x4e\xaf\x4e\xa7\x26\x1c\xc7\x31\x26\xa2\x06\x63\xba\xc5\xe7\xd1\xfb\xb3\xff\x06\x00\x00\xff\xff\x97\x36\x65\xd4\xe9\x1a\x00\x00")

func stacksBuildStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksBuildStackYaml,
		"stacks/build-stack.yaml",
	)
}

func stacksBuildStackYaml() (*asset, error) {
	bytes, err := stacksBuildStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/build-stack.yaml", size: 6889, mode: os.FileMode(420), modTime: time.Unix(1557164821, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksCertManagerStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xc1\x6a\xc3\x30\x10\x44\xef\xf9\x0a\x11\x0a\x81\x80\x12\xda\x53\xe3\x9b\x29\x39\xa6\x18\xf2\x01\x65\x23\x4f\x15\xd1\xb5\x64\x76\xe5\xb4\xa1\xf4\xdf\x4b\x6c\x37\x71\x6e\x3d\xee\xcc\xbc\x11\x83\x14\x72\x0a\x0e\x5a\xcc\x8c\x71\x90\x6c\x1b\x8a\xe4\x21\x97\xdb\x98\x3a\x28\x1d\x18\xfb\x21\xb4\x83\x1e\x0b\x93\xa5\x43\x6f\x7a\x4e\x07\xe2\xb7\x16\xd2\x04\xd5\x90\xa2\x0e\x90\x35\x8b\x65\xdf\x35\x56\xad\x3e\x9e\x75\x15\xd2\x7a\xb9\xb8\xd9\xf8\xca\x88\x3d\xb3\x0e\xd1\x0b\x54\xa1\x13\xdb\xa5\xf8\x1e\x7c\x43\xed\x54\x54\x38\x41\x9e\x2a\x38\x21\xe6\xfb\xc8\xb0\x66\x22\xb5\xa9\x1e\xcf\xd0\x90\x47\x61\x6a\x0a\x7a\xa4\xf8\xb8\xd9\x3c\xad\xef\x16\x33\x65\x68\xbe\x45\xab\x8e\xb9\x4a\x1c\xdc\xb9\x30\x25\x7f\xd2\x59\x7b\x8f\xc4\x5f\x87\x4e\xf9\x51\xb2\x96\x41\x35\xc4\x82\xe1\x72\x48\xd1\x46\x6a\xa0\x2d\x39\x8c\x89\x87\xef\xd7\x72\xb7\xdd\x57\xe5\xcb\xf6\xe7\x0a\x39\xee\x34\x43\xac\x40\x53\x27\x0e\xff\xa3\x38\xf9\x9c\x34\xd7\x90\xbf\xe7\xe7\x97\xef\x99\xcf\x66\xbf\x01\x00\x00\xff\xff\x88\x0a\x96\xb1\xd8\x01\x00\x00")

func stacksCertManagerStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksCertManagerStackYaml,
		"stacks/cert-manager-stack.yaml",
	)
}

func stacksCertManagerStackYaml() (*asset, error) {
	bytes, err := stacksCertManagerStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/cert-manager-stack.yaml", size: 472, mode: os.FileMode(420), modTime: time.Unix(1556674378, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksGrafanaStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xc1\x8e\xda\x30\x10\xbd\xef\x57\xcc\x0f\x50\xb3\xad\x7a\xc0\x12\x07\x6f\x61\x77\x91\xb6\x80\x80\xad\xd4\x53\x34\x24\x13\x70\xe5\xd8\x91\x3d\x49\x8b\xd4\x8f\xaf\x1c\x48\xc2\x86\x56\x6d\x6f\xce\xbc\x37\x33\x7e\x2f\xcf\xa9\xb3\xb9\x3e\x04\x79\x07\x70\xf0\x98\xa3\xc5\x51\x86\xe1\xb8\x77\xe8\xb3\xd2\xbb\x5a\x67\xe4\x1b\x14\x20\x75\x96\xc9\xb2\x84\x9f\xcd\x27\x00\x96\xfa\x0b\xf9\xa0\x9d\x95\x70\x7f\xa9\x0d\x7a\x00\x46\x90\xe9\x80\x7b\x43\x33\x32\xc4\x0d\x37\x47\x13\xe8\x02\x03\xe4\xce\x64\xe4\x25\xe8\xc0\xda\x75\x55\x8b\x05\x0d\x6b\xae\x8c\xfd\xdd\xe4\x66\x1d\xf2\x51\x82\xa8\xd1\x0b\xa3\xf7\xe2\x22\x41\x74\x12\x82\x18\x8c\xf0\x87\x45\xd6\xdf\x16\x80\x4f\x25\x49\xc8\xb5\xa1\x37\x0e\x30\x06\x57\xf9\x94\xfe\x47\xfa\x4d\x57\x14\x8f\x69\x4a\x21\xc8\xe8\xcb\x8f\x53\xb7\x95\x32\xcd\xd1\x13\x09\xec\xab\xde\x0a\x1d\x66\x94\x63\x65\x78\x50\xff\x16\x9c\x9d\x21\xe3\xb5\x72\xd6\x05\x2d\x2c\x93\xaf\xd1\x48\xf8\x18\x06\xce\xad\xbd\x2b\x88\x8f\x54\x85\xbf\x69\x2f\x6f\x99\x95\x37\x12\x8e\xcc\xa5\x14\xa2\x87\xe5\x64\x3c\x19\xdf\xdd\x05\xf2\xb5\xbe\x68\xbc\x18\x76\xbe\x17\xd9\xfa\x7c\x18\xc1\xd3\x46\x3d\xaa\xa5\x4a\xd6\xab\xcd\x6e\xfa\x61\x3c\x1e\xb7\xf5\xc7\x44\xbd\xee\x9e\x93\x07\xb5\x5d\x7c\x4a\xe6\x4b\xf5\xf0\x32\x9f\x4d\xfb\x3c\xf4\x0c\xb5\x5c\x2d\xbf\x7e\x5e\xbd\x6e\x3b\x56\xe7\xc8\xef\x48\xab\xcd\x53\xb2\x59\xbd\xcc\xa7\x2a\x2b\xb4\xed\x69\x6b\xb5\x7b\xde\x26\x33\xb5\x53\x53\x11\xff\x4f\x9b\x90\x86\xa1\x0b\x3c\x90\x84\x0c\x75\x38\xa2\xbd\x9f\x4c\xde\xb7\xb0\x34\xc8\x14\xb8\x67\xad\x2b\x63\xd6\xce\xe8\xf4\x24\x01\xcd\x77\x3c\x9d\xcd\x2a\x9d\xe7\xd0\x8a\x8e\x3a\x45\x74\xad\x8d\x4c\xfb\xb0\x22\xf8\xe7\xc7\x25\xda\x70\x09\xe2\xb4\x4b\x70\x03\xc7\x7c\x69\x7b\xb8\x8e\xf3\x6d\xff\xbb\x13\x16\xe6\x66\x4b\x17\xc5\x7f\x1a\xdf\xb3\xaf\xce\xfd\xe0\xda\x99\xaa\xa0\x4e\x4b\xe4\xc8\x37\x76\xfe\x0a\x00\x00\xff\xff\xed\x1f\xb2\xa4\x46\x04\x00\x00")

func stacksGrafanaStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksGrafanaStackYaml,
		"stacks/grafana-stack.yaml",
	)
}

func stacksGrafanaStackYaml() (*asset, error) {
	bytes, err := stacksGrafanaStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/grafana-stack.yaml", size: 1094, mode: os.FileMode(420), modTime: time.Unix(1557161625, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5d\x6f\xdb\xb8\x12\x7d\xcf\xaf\x10\x7c\x0b\xa4\x2d\x22\x4b\xce\xc7\x45\x20\xc0\x0f\xba\x8e\x9b\x18\x48\x1c\xdf\xda\x05\x76\x9f\x04\x86\x1a\x4b\x44\x28\x92\x20\x29\x27\xee\x62\xff\xfb\x82\xd4\x17\xed\xd8\xb1\xdb\xdd\x62\x5f\x8c\x88\xe7\xcc\x90\x9c\x19\xce\x9c\x28\x90\x2b\x82\x41\x45\x27\x9e\x47\x94\x26\xdc\x17\x84\x72\x6d\x3e\x3d\x2f\x25\x0a\x3d\x51\x98\x57\x9c\x07\x50\x79\xe4\x69\x59\x82\x05\x29\x7a\x02\xaa\x2a\x62\x6d\x1b\x79\xd6\xd8\x2e\x65\x94\x3f\x21\x9a\x08\x90\x05\x51\x8a\x70\x56\x53\x7d\xef\xf4\xb3\x87\x39\x5b\x92\xac\x6f\x8d\xfa\x84\x07\x9f\x4f\x3b\x8c\x81\x7e\xe1\xf2\x99\xb0\x3d\x38\x2a\x75\x0e\x4c\x13\x8c\x34\xe1\x6c\x0f\x47\x10\x78\xd5\xc0\xec\xbe\xfd\xe7\x6b\x65\x08\xb8\x54\x9a\x17\x12\x14\x2f\x25\x86\x14\x96\x84\x11\xe3\x42\x39\x86\x9d\x55\xa0\x73\x22\x53\x81\xa4\x5e\x37\x26\xc7\x13\xfb\x1d\xbc\xdb\x86\xb0\x4c\x82\x52\xfb\x5c\xb6\x70\xa0\x34\xd2\x65\xcb\x92\x4f\x08\x3b\x37\xae\x57\xb1\x04\xa4\xe1\x2c\x03\x7d\x46\x89\xd2\x67\x2f\x48\xe3\xfc\xac\x14\x29\xd2\x50\x87\xba\x40\x42\xd5\x6c\x60\xa9\xe0\x84\xe9\xe6\x5b\xf0\xb4\xf9\xb3\x29\x86\xfa\x93\xa1\x02\x94\x40\xce\x02\x4f\xa1\xe3\x62\x09\xb5\x13\xcc\x99\x46\x84\x81\x6c\x73\x6c\x4c\x23\x53\x3f\x98\xaf\x40\xae\xeb\x22\x41\x32\x6b\x0b\xc6\x7f\x83\xfa\x9e\xef\x17\x9c\x11\xcd\x25\x61\x59\x9c\xa6\x72\x18\x0d\xae\xc2\xc1\xa5\x83\xa7\xbc\x40\x84\xb5\x0b\x98\x96\x4a\x83\xec\x53\x8e\x11\x75\x68\x0a\x70\x29\xe1\x56\x0a\x6c\xdc\xb4\x40\xaf\xe7\x70\x9e\x01\x04\xa2\x64\x05\x0f\xe8\xd5\x54\x38\xc8\x11\x67\x0c\xb0\x29\x89\x38\x83\x96\x79\x11\x16\xf5\xdf\x55\x28\x9d\x1b\x14\xa0\xf2\xc0\xfc\x8c\x2c\x12\x05\xa0\x71\x60\xd3\x13\x54\x5c\x0b\xd6\x74\xc1\xa5\x76\x6c\xaf\xc3\xeb\x30\xc8\xb5\x16\x67\xe6\xc7\xa7\x90\x21\xbc\xf6\xdf\xc6\xc4\x44\x20\x0c\x32\x29\xf0\x99\xf9\xf1\x5f\xeb\x6c\x35\xd8\xa5\xe3\xa4\x8b\x5e\x4d\x01\xb6\xea\x76\x9c\x3d\xde\x24\xd3\xf8\x61\x3c\xfc\xf0\x51\x01\x5d\x06\x26\x47\x9f\xde\xa0\xf3\x59\x3c\xda\xa0\xd8\x0a\x70\x78\x93\xfb\xc7\x45\xb2\xb8\xfb\xfa\xb8\x58\xdc\x8f\x87\x57\x61\xb8\x05\x8d\xe2\xd1\xdd\x38\x99\xff\xff\x5b\x3c\xbf\x1b\x5e\x6d\x81\x37\x93\x79\xfc\xbf\xfb\x71\xf2\xdb\xcd\x3c\x79\x88\xbf\xce\xef\xe2\xfb\xc9\xf4\x36\x59\x3c\x26\xf1\xf4\xf7\xe1\x60\x7b\x97\xaf\xf1\x68\x9c\xcc\xe3\x87\x99\x61\x0d\x07\xed\x5e\xa4\x40\x19\x44\x55\xd3\x09\xaa\x86\x35\xe8\x0f\xfa\x17\x2e\x3c\x2b\x29\x9d\x71\x4a\xf0\x3a\xf2\x10\x7d\x41\xeb\x26\x6e\x75\xe5\x46\x1e\x49\x4d\x1f\xd1\xeb\x2a\x6f\x18\xa4\x6e\x28\x12\x50\x4a\x18\x28\x35\x93\xfc\x09\x9a\x10\x7a\xde\x12\x11\x5a\x4a\x58\xe4\x12\x54\xce\x69\x1a\x79\x17\x2d\x66\x32\x70\x0b\xba\x23\x7b\x9e\x40\x3a\x8f\xbc\xc0\x78\x5b\xbb\xcb\x5c\xea\xc8\x16\x80\xb3\xa8\x70\x0e\xe6\xcd\xdc\x2d\x16\xb3\x76\xd9\x76\x28\x44\x6f\x80\xa2\xf5\x1c\x30\x67\xa9\x8a\xbc\xab\x16\x16\x20\x09\x4f\x5b\xe0\xa2\xf3\xa7\x4a\x8c\x41\x29\xe7\xa0\x83\x16\xd3\xa4\x00\x5e\xea\x2d\x7f\xcd\x9b\xad\x87\x80\xe4\xaf\xeb\xdd\x85\x6b\x8a\x6e\x60\x8b\x4e\xd9\xaa\x53\x4e\x49\x6e\xe6\xc5\xf8\x58\x9d\xff\x40\x66\x36\xfb\x83\x7b\x86\x1d\x6f\xff\xc3\xc7\x8d\x92\xfd\xd4\x57\x2b\xdc\xdf\xdf\x10\x6c\x67\x1b\x55\x70\x0b\x38\x13\xcf\x21\x6b\x28\x04\x45\x1a\xbe\x10\xda\xb5\x01\xe7\x6d\xdb\x83\x05\xc0\x56\x7c\x9d\x58\xdb\xfe\x1a\x15\xb4\xaf\x0b\xe1\x6e\x69\x9a\xa2\xe4\x74\x46\x11\x83\xb8\xd4\x79\x75\xe3\x96\x30\x7d\x9c\x8e\x7f\xdd\x2b\x9d\x4c\xe7\x8b\x78\x3a\x1a\x27\x93\x59\xc3\x22\xe2\xd3\x31\x0f\xa0\xd5\x01\x98\x68\x94\x02\x3d\x42\x09\x6c\x64\xbd\x31\xeb\xb2\xde\x65\xd5\x84\x05\x09\x01\x2c\xf5\x53\xa6\x7c\x7b\xee\x61\xeb\xc6\xa0\xb6\xc5\x99\x82\x1b\x5e\x87\xff\x0d\x37\x97\x73\xae\xb4\x31\x19\xd6\x5b\x9c\x74\xc9\xa5\x4b\x5f\x91\x8c\x41\xea\x63\xb4\xe9\xb0\x6b\x89\x95\xdb\x6e\xa0\xd8\x1c\x55\x9e\x7c\xa5\xb9\x44\x19\xf8\x6d\x24\x87\x1f\xfe\x68\xc3\xfc\xe7\x01\x3d\xf3\x22\x89\x86\x8d\x79\xd8\x4e\x52\x84\x31\x2f\xd9\xf6\x6a\xf5\xb9\xc3\x93\x99\xe0\x29\x50\xb0\xee\x76\x39\x78\x4b\xd8\x81\xa4\x20\x28\x5f\x17\xb0\x69\x66\x95\x41\xa5\x09\x1a\xa2\x23\x38\x7e\xc6\x46\x82\xa0\x04\x23\xd5\xdc\xfa\xb8\xb2\xca\x90\x86\x17\xb4\xfe\x61\x81\xd9\xab\x0d\x7b\x91\xd7\x33\x87\x90\x0c\xd1\x66\x9c\xf7\xac\x6b\x83\x34\xa4\x03\x29\xeb\x99\xdb\x55\x32\xc9\xb9\xe3\x01\x51\xd7\x7b\xdf\xf8\x73\xb0\x22\x52\x97\x88\x36\x99\x39\xc8\x4f\x41\x69\xc2\xac\x8c\x95\x25\x3d\xc2\xa0\xbe\x5d\x4d\xac\x96\x13\x2e\x53\x90\x91\xa7\x34\x17\xfe\x92\x48\xa5\xdf\x95\x64\x07\xdb\xfb\x75\x18\x5d\x87\xb6\xb1\x9f\x9f\x11\x56\xc5\xb9\x7b\x52\x86\x71\x79\x79\x11\x5d\x5e\x5e\x54\xcd\x7f\x27\xe7\x17\x8e\x01\xc9\x4b\xb7\x81\xff\xbd\xa9\x40\x79\x96\xf0\x52\x8b\x52\x27\x14\x56\xd0\x41\x84\x2d\xb9\xbb\x87\x44\x84\xdd\x94\xd2\xa6\xaa\x5d\x3f\xbd\xbc\x52\xa7\xde\x7f\x76\x83\xbe\x2f\x90\x04\xa6\xe7\x79\xa9\x53\xfe\xb2\xc3\x7a\x50\x84\xc6\xfc\x00\xcd\xce\x11\xa3\x4a\x17\xd5\xd4\x76\xec\xad\xf9\x1e\xf4\xc0\xc4\xab\x0b\xc9\xa1\x7f\x27\xe2\x99\x30\xa3\x96\x41\xa9\xdd\x82\xd9\xfc\x2b\xa2\xd2\x6f\xa9\x78\x97\x65\xd3\x15\xa7\x05\x61\x33\x2e\xbb\x03\xf5\x06\x57\x61\x18\x6e\xbb\x2b\xd5\x1b\xd2\xf9\x06\xe9\xf8\x21\x6a\xf3\xd4\xa8\xe7\xed\x13\xba\xff\xd9\x5a\x41\xfd\x2f\x4d\x5e\xdf\x9b\xcc\x17\x93\xc7\xe4\x61\xbc\x88\x93\xf7\xf7\x73\x88\xa3\xc7\xe9\x97\xc9\xed\x11\xbb\x37\x1d\xb8\xbb\xf7\x3f\xa1\x70\xc3\x23\x24\x6e\x0e\x88\xea\xfc\xfb\x1e\xa9\x6b\xd3\xfa\x53\x5a\x77\xb0\x4f\xeb\x9e\xff\x94\xd4\x1d\x9c\x9c\xfc\x15\x00\x00\xff\xff\x52\xbb\xd7\x73\xf1\x10\x00\x00")

func stacksIstioStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioStackYaml,
		"stacks/istio-stack.yaml",
	)
}

func stacksIstioStackYaml() (*asset, error) {
	bytes, err := stacksIstioStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-stack.yaml", size: 4337, mode: os.FileMode(420), modTime: time.Unix(1556838876, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioTelemetryStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x6d\x6f\xe3\x36\xf2\x7f\xdf\x4f\x41\x78\x17\xe8\x2e\x10\x3f\x24\xdd\xfe\xff\x5d\x01\x79\xe1\x4d\x9c\x9e\xef\xba\x49\x10\x7b\xef\x80\x2b\x0a\x81\x91\xc6\x36\x11\x89\xd4\x91\x54\x12\xef\xe5\xee\xb3\x1f\x48\x3d\x51\x12\x65\x4b\xce\xa6\x8b\x76\xd5\x16\x5b\x9b\x9c\xdf\x90\x1c\xce\x93\x86\x32\x57\x00\xbf\x27\x1e\x08\xe7\x3b\x84\x88\x90\x84\x0d\x25\x04\x10\x82\xe4\x5b\xd5\x84\x90\x4f\x04\xbe\x0d\x60\x91\xd0\x7d\x04\xb1\x71\x90\xe4\x31\xe8\xce\x75\xc0\x6e\x71\xe0\x46\xc0\x43\x22\x04\x61\x54\x24\xa0\x21\xe2\x2c\x80\x53\x2f\x88\x85\x04\x3e\xc4\x7e\x48\xa8\xee\x20\x21\x5e\x83\x93\x8c\x34\x0e\xc9\x23\x70\xe7\x78\x74\x3c\xfa\xa1\xe8\xbc\x8e\x83\xe0\x9a\x05\xc4\xdb\x3a\x08\x07\x0f\x78\x2b\x74\x1f\xe6\xeb\x9c\xf7\x70\x18\x32\x4a\x24\xe3\x84\xae\xaf\x19\x97\xa7\xef\x27\xef\x7f\xc8\xfb\xb0\xef\x73\x10\x22\xfd\x1e\x53\xf2\xe8\x8c\xc7\x63\xc1\xbc\xbb\x64\xc0\x91\xfa\x08\x32\xa7\xf7\x18\x5d\x91\xf5\x42\x32\x0e\x9f\x6e\x7e\x39\xbd\xfb\x49\x38\xe3\x71\xa5\xf7\x1c\x56\x38\x0e\xe4\x25\x0e\x41\x44\xd8\x83\xd3\xd7\xff\xbe\x9c\x7e\x9c\x2d\xae\xa7\x67\xb3\xff\x68\xda\x7b\x16\xc4\x21\xe4\x53\x8c\x7d\x31\x4c\xc6\x71\xf4\xd0\xba\x19\xe8\x7d\xd6\xff\xf3\xd5\xf9\xec\xc3\xa7\x9f\x4f\xd7\x9e\xe4\x8a\xdf\x89\x6e\x8f\x18\x97\x39\x0b\xb5\xa8\xb1\xf4\xa2\xa3\x62\xb1\x47\x84\x4a\xe0\x14\x07\xa7\xf9\x0e\x0c\xd1\xbb\x93\x77\x27\x27\x9a\x30\xe2\x2c\x04\xb9\x81\x58\x58\x08\x3d\x46\x25\x26\x14\x78\x3e\x00\xc5\x61\xb6\x15\xc3\x88\xb3\xc7\xad\x6e\x2f\xcd\x42\x91\x1d\xff\x38\x99\xbc\x53\xfc\xf3\x96\xf7\x93\xf7\xc7\x7a\xc0\x35\x8f\xbc\xb4\xb5\xb4\xb1\x9a\xdb\xfd\x89\xb1\xb5\xe6\x06\x2a\x16\xe6\x78\x4a\xcc\xa9\x1a\x9e\x25\x0a\x93\x77\x54\x34\xd2\x00\x48\x08\xa3\x00\x4b\xb8\x20\x01\xe4\xcd\x63\x90\xde\xd8\x98\xc2\x18\xe8\x3d\xdb\xba\x39\x7e\xb4\xc5\x61\x30\x92\x61\x14\x18\x9c\x94\x60\x38\x0b\xae\x03\x4c\x61\x1a\xcb\x4d\xa2\x7c\x39\xc1\xe5\xd5\xe5\x2c\xfd\x92\xef\x9f\x6a\xbf\xbe\x3a\x77\x95\x0e\x9c\xbe\x7e\x23\x20\x58\x8d\x95\x34\xdf\xd6\x7a\xb5\x86\x98\x24\x5a\x7d\x0a\xba\xf9\xe5\x62\x39\xbd\x3c\x9b\xb9\xf3\xeb\x8c\x8a\x44\x59\xb7\x00\x8f\x83\x14\x0e\x22\x3e\x50\x49\xe4\xd6\xd1\x0b\xf4\x80\x4b\x91\x92\x94\xd4\xce\xaa\x78\xdf\xdd\xc5\xb7\xc0\x29\xc8\x84\x2a\xc4\x94\xac\x40\x48\x07\x3d\x0d\x13\xc3\x8a\xc8\xdf\x81\x2b\xdb\x75\xd0\x20\xd1\xf6\x91\x16\xe1\x88\xb0\xf1\xfd\x31\x0e\xa2\x0d\x3e\x19\x68\xd2\x3b\x42\x7d\x07\x61\x29\x39\xb9\x8d\x25\x64\xac\x74\x5f\x08\x12\xfb\x58\xe2\x6c\x26\x86\x72\x15\x7b\x2d\x22\xf0\x32\x82\x9c\x4d\x3e\x79\x84\x18\x27\x6b\x42\x47\x24\x2a\x9a\x10\xba\xc7\x41\x0c\xcb\x6d\x04\x0e\x9a\x5f\xbb\xd3\xf3\xf3\x9b\xd9\x62\x51\x85\xc4\xc4\x6f\xc0\x2c\x96\x37\xf3\xcb\x9f\x6b\xf4\x02\x78\x3b\x00\x87\x7f\xc5\x20\xe4\x68\x03\xd8\xcf\x8d\xa7\x01\xe4\x7e\x9c\x5e\xd7\x80\x6d\x67\x96\x0f\xc4\x84\xec\x86\x50\x46\xcf\x3a\x8e\x12\x61\xb9\xe9\x86\xe0\x80\x05\xa3\x5d\x31\x2b\xe0\x5d\x25\x2d\xbc\x0d\x84\xd0\x0d\x23\x99\xc4\x81\x2b\xc8\xe7\x12\xae\x82\x9d\x5f\x2e\xff\xef\x5d\x7d\xb8\x0a\x68\x2f\x40\x92\xc6\xd9\x2d\xe7\x1f\x67\x8b\xe5\xf4\x63\x5d\x0b\x94\xc2\xe1\x35\xd0\xd6\x5b\x2b\x22\x46\x05\x8c\x3c\xe6\xb7\x9d\x5d\x8a\xf0\x63\x8e\x25\x69\xdc\xa9\xf3\x4f\x37\xd3\xe5\xfc\xea\xb2\x0e\x3c\x40\xc3\x53\xe4\x41\xd2\x4f\xb1\x1d\xc4\x9f\x8d\xd6\x45\xfe\x82\xc5\xdc\x83\xf6\xfe\x21\xa3\x57\xfe\x01\xbd\x42\xe7\xb3\xeb\x9b\xd9\xd9\x74\x39\x3b\xef\x82\x8e\x38\xa1\x1e\x89\x70\xd0\x6e\x4c\x1f\x84\x24\x54\x6f\x5a\xfb\x89\x9a\xa0\x67\x8c\xa7\x82\x7d\x2b\xf1\x7b\x8c\x52\xf0\x34\x06\xee\x5b\xeb\xb1\x81\x6a\xbb\x30\x03\xc2\xc1\x03\x72\x0f\xfe\xe8\x76\x5b\x8a\x13\xed\xa6\x59\x46\xbb\x5a\x49\xbb\xf2\x10\x40\xe5\x61\xa3\x17\xc8\xc3\x46\xee\x6a\xc6\x06\x34\x94\x41\xd3\x74\x3f\x5c\x5d\xfd\x62\x97\x95\x76\x53\xe0\xbb\x2a\x13\x03\xee\xea\xf8\xdd\x76\xbf\x24\x3c\xca\x51\xc4\x99\x64\x1e\x6b\xa9\x83\x19\x4a\x19\xb3\x90\x38\x6c\x0a\xf9\x75\x8b\x36\x91\xad\x41\xaf\xd0\x39\x44\x1c\x3c\x2c\xc1\x3f\x42\x77\x10\x49\xb4\x62\x1c\x79\x2c\x8c\xb0\x24\xb7\x24\x20\x72\x5b\x1b\x81\x83\xb2\x0e\xe0\xa3\x80\x79\x8d\x1b\x58\x95\x68\x19\xa9\x53\xa6\x4e\x02\xc9\xa1\xad\x3d\x01\x8e\xc8\x28\xcd\x9f\xdb\x03\xee\xd3\x9c\xaf\x35\x80\x45\xb0\x53\x21\x2d\x90\x6e\x1a\x91\x45\x4a\x1c\xcb\x4d\x57\x8f\x56\xc2\xe2\xd8\x27\x40\xbd\x46\x93\xdd\x3d\x2e\x28\xc3\xed\x9a\xb2\x68\xac\x17\x60\x12\x1e\x90\x20\x6a\x30\xc7\x0f\x6e\x0b\x06\x75\x70\x44\xdc\x3b\xd8\xee\x07\x0d\x87\xbf\x43\xbe\x5f\x3c\x6b\xb4\xca\xf7\xd3\x70\xd9\x25\xdf\x4f\x21\x01\xbe\x85\x46\x27\x67\x91\x75\x0a\xab\xce\xba\x35\xb0\xbd\x3b\x34\x00\xfa\x59\xaf\x13\x8a\x3d\xd0\xb6\xaa\x97\x22\x32\xc3\x47\x07\x27\x2b\x29\x87\xa9\xe7\xb1\xb8\x6d\x58\x2f\x43\x5b\xaa\x6c\x0a\x7a\x60\xfc\x2e\x60\xd8\xef\x9c\x93\xe5\xc0\xce\x9b\x51\x42\x76\xd8\x15\x33\x51\xea\xa2\xa4\x26\xae\xab\xa6\x9a\xd8\xee\xea\x6a\xa2\x3b\x28\x93\x09\x6b\x2f\x5d\x13\x95\x97\x97\x0e\xc4\x3f\x63\x67\x72\x13\xe8\x6c\x01\x16\x2e\x87\x25\xe0\x19\xf8\xb0\xb5\x9b\xe8\xe7\xc9\xa0\x43\xf1\xc0\x82\xee\xe4\x02\x4c\x7c\x77\x93\xb6\xa2\x0f\x93\xde\x21\xc6\x7d\x70\x30\x14\xd2\x27\x6c\x47\x00\xdc\x60\xea\x07\x69\x01\xd3\x8c\x7e\x2c\x96\x51\x2c\xa7\xe2\xaf\x42\x0d\x55\x54\x6f\x0f\x9d\x47\xc0\xd6\x40\xb3\x8a\xa8\x7d\x2a\xd8\xf3\x40\x88\x80\xad\x6b\x93\x11\x70\x0f\x9c\xc8\xad\x83\xbe\x1f\xcc\xe9\x8a\x0d\xbe\x4f\x3b\x8a\x64\xbc\x54\xec\xf8\x2e\x13\x25\x27\xf8\x36\xa8\x07\xf0\x79\xe4\x14\xa1\x1c\x3d\x21\x12\xbd\x19\x4c\x46\xfa\xdf\xc1\xdb\x0a\xed\x34\x2a\x88\x13\xd7\xf8\xeb\x00\x47\xd1\xe0\x37\xf4\x84\x06\x83\x0a\xf1\x75\x9e\x05\xd6\x9e\xac\x6d\xe4\x97\x7a\xdd\x46\x00\xb6\x11\xfd\x23\x55\x17\xc7\x1a\x1c\x9a\xd8\x26\x7a\x55\x0b\xee\x36\xf2\x2b\xed\x76\x4b\x11\xbd\x4c\x66\x28\xaf\x96\x46\x3d\x5a\x58\x45\x62\x90\xcd\x2b\xa8\x1d\x52\x37\xc8\xd2\x23\x9c\xbf\x28\x17\xd1\xe8\x3c\x1a\xc7\x2c\xe4\xd6\x68\x7c\x8d\xd8\x64\x63\xaa\xee\x7e\x27\x79\x2a\x70\x6b\x88\x68\x04\xa6\xa2\xaf\x05\xc1\x46\x80\xa1\x60\xd6\x7a\x4a\x19\x88\x23\x72\x96\xa4\xe8\x4d\xb9\x7b\x8d\xfe\x6f\xb0\x75\xaa\xb9\x3a\x7a\xaa\x16\x95\x7f\x1d\x3c\x0e\x71\x44\x86\x77\xb0\xad\xee\x7a\xfe\x0c\x55\x29\x8f\xa2\xa7\xda\x83\xb7\x02\x6e\xa4\x8c\x0a\x70\x5a\x18\xae\x14\x8a\xcb\x03\xc4\xdc\xe0\x1d\x61\xb9\x29\x77\x67\x55\xb7\x33\xe6\x83\x53\x2e\x4b\xa2\x27\x34\xa9\xd1\x2d\xc8\x67\x93\x4e\x90\xcf\x55\x3a\x3d\x52\x46\x56\x94\x60\x6d\x54\x73\x63\xee\x86\xa8\xd2\xa6\x21\xf1\xab\xd2\xf2\x02\x02\x54\x2e\x39\xf6\xa0\x01\x9b\x50\x0c\xf5\xa9\x9b\x85\x41\x80\x25\x50\x6f\xeb\xd4\xcb\xa9\x8a\x6e\x12\x8a\x81\xf9\xc0\x9e\x56\x4f\x5c\x01\x5e\xac\x1c\xaa\x1b\xa5\x07\x97\x1e\xa3\x3e\x51\x5d\x38\x78\xf3\xc6\x5a\x14\x50\xec\x08\xbd\x65\x31\xf5\x07\x6f\xd1\xe9\x29\x1a\xb0\x58\x26\x5f\x8f\xd0\x20\xa6\x77\x94\x3d\xd0\xc1\x51\x89\x53\xa5\xc4\x83\x9e\xd0\x0a\x07\x02\x8e\xd0\x20\x8c\x65\x8c\x03\x57\x06\x42\xa1\x29\xa3\x30\x78\xfb\xb6\x2a\x4d\xf0\x17\xba\xb6\x93\x58\xe3\xbe\xe2\x4f\x45\x4b\x04\xf0\xa9\x2e\x5f\xd7\x2b\xda\x76\x85\x59\x9a\xb1\xc4\xa8\xdc\x1a\x84\x49\x79\xee\x83\xae\xae\x59\x2a\xf9\x25\x8d\x50\x4f\xe5\x39\x65\xad\xec\x5c\x51\x9e\xe4\xd0\xa1\x7a\x0a\x51\x9e\xa7\xb2\x94\x69\x2c\x37\x2c\x89\x84\x35\x55\x71\x70\xd6\xa9\x75\xc4\x3c\x9d\x29\x33\x7a\xbc\x60\xfc\x01\x73\x1f\xfc\x0b\xc6\xad\x3a\xb7\xca\x08\xd4\xa7\x44\xe3\x32\x47\x6d\x4c\x3a\x51\x8e\xe7\xeb\x4e\x12\x78\xd4\x27\xc3\xa5\xe5\x11\x21\x3d\x4c\x06\xdf\xe5\x90\x50\xba\x52\x67\x47\xdf\x0f\x92\xc3\xfc\x34\x19\x78\xc9\xcc\x44\x7a\xd1\xf3\x92\x13\xb3\x04\x88\x9e\x8a\x9e\x37\x83\x93\xc9\xf1\xff\x0f\x27\xc7\xc3\xc9\xf1\x72\x32\x71\xf4\x7f\xff\xcc\xd7\x6e\x49\x60\x0a\x2b\x98\xe9\xa2\x76\xad\xcc\x6d\x8b\xf0\x7d\xbe\x63\x92\xf7\xf9\x4e\x0d\xfb\x27\xc9\x77\x8a\xdc\xc3\x96\x6a\x48\x2f\xb2\x05\xc3\xf3\xec\xdc\xc2\x76\x98\xf1\x6d\x07\xd1\x4a\xc4\x6b\x3c\xaa\x6a\x0a\x7c\xd6\xd3\xa5\x12\xb1\x8e\x88\x37\x2d\x87\x49\xce\xa5\xea\xf8\xc5\x9e\x11\x2d\xb8\x3f\x4d\xf4\xe2\x71\xfa\x3a\x91\x3d\x72\x15\x8f\xff\x66\xc8\x0a\xb1\xf4\x36\x16\x23\x51\x6b\xd3\x09\x39\x7a\xb2\x64\xeb\xaa\x77\xcd\x23\x2f\xd3\x0f\xac\xe5\x6c\xbc\xca\x93\xd6\x12\xf2\xa2\xc2\xa8\x18\x5d\xfd\x43\xa8\x90\xb8\x7c\xcc\x31\x2c\x1e\xfa\x47\xa5\x38\xfc\xa2\xf2\xc8\x5e\x0d\x6b\x2b\x12\xc3\x71\x7c\x91\x35\x9b\xe9\xc4\x17\x5a\x76\x08\x92\x13\x6f\xc7\xc2\x53\x6b\xd7\xf5\xb2\xda\xe2\x75\xcd\xc9\x41\x83\xe3\x6c\x99\x3e\x09\x81\x0a\x73\xa5\xbf\x9f\xc9\x64\x61\xda\x7d\xd8\x9b\x08\x64\x0e\xb3\x09\xe9\xd2\x5a\x66\x50\x2f\xbe\xed\x62\x14\xed\xce\x6f\x9a\x60\x78\x57\x0e\xd5\x04\xca\x0e\x38\xab\xc0\xb4\xbd\x01\x6c\x48\xd0\x10\xd8\xce\x0c\xa0\x15\x0f\x53\x74\xbb\x8b\x97\x7b\x59\x46\x2d\x62\xf8\x4e\x06\x78\x6f\x12\xb6\x13\x9e\x0b\xd6\xc6\xa2\xbd\x74\xf3\xaa\xfd\xae\xcc\xac\x0d\x87\xe4\x55\x85\xc6\x82\x7a\x27\x36\x96\x1d\xaa\x15\xe7\xad\x0c\x53\x7f\xe0\x16\x29\x93\x79\x00\xde\x50\xac\xb1\x70\x49\x9e\x6c\x5d\xcf\x5a\x6d\x39\x99\x4c\xfe\x70\x89\xd3\x8e\x88\xfd\xe9\x72\x71\x3d\x3b\x9b\x5f\xcc\x67\xe7\xcf\x0d\xdb\x6d\xfd\x75\x96\x87\x36\xb9\xec\x7d\x55\x9f\xde\x91\xf7\x8e\xbc\x77\xe4\xbd\x23\xef\x1d\xf9\x57\x76\xe4\x82\x7c\x86\x66\x27\x6e\x3d\x55\xe8\x7d\x77\xef\xbb\x7b\xdf\xdd\xfb\xee\xde\x77\x7f\x3d\xdf\x9d\x88\x72\xb7\xf3\xb6\x9f\x1c\xf7\xde\xbb\xf7\xde\xbd\xf7\xee\xbd\x77\xef\xbd\xbf\x96\xf7\x96\x5e\xa4\x8f\x7f\xa0\xb9\xe2\xbd\xef\x80\xaa\x77\xe2\xbd\x13\xef\x9d\x78\x07\x27\xde\xd9\xfb\x7e\x6d\x27\xde\xfb\xd4\x43\x7c\x6a\x76\x2e\xdf\xc2\xaf\x36\xbe\x29\xd0\xfb\xd6\xde\xb7\xf6\xbe\xb5\xf7\xad\xdf\x8a\x6f\x2d\x2e\x3b\xda\xe1\x5f\x9b\x7e\x8e\x93\x38\x66\xe3\xbd\x93\x72\x71\x39\x79\xc3\x29\x17\x7c\xf6\xd6\x89\x5b\x7f\xf7\x63\x94\x70\x1a\xd5\xee\x83\x2a\x26\x7a\x76\xf5\xe9\x72\x39\xbb\xc9\x5b\xb5\x1a\x27\x9a\x60\xbe\xc5\x92\x6d\x96\xd1\x54\xb8\xa6\x7a\x63\x6e\x8a\xf5\xae\xcc\xde\x9b\x7b\x0a\x3d\xac\xd3\xa4\xd6\x65\x74\x54\xec\xba\xa1\xc7\x36\x21\x9b\x97\xda\xd3\x6d\x9d\x9a\xc5\x35\x34\xf4\xa6\x96\xb4\xbb\x57\x8f\xd1\x82\xa4\x3a\x8d\xea\x13\x6a\xa9\xcb\x78\xec\x34\xda\x9b\x6d\xd6\xae\x7a\x6e\x76\xf0\xac\xc8\x19\xf5\xc5\x1e\x25\xcc\xc8\x5b\xe8\xe1\xf9\x7c\xb1\xbc\x99\x7f\xf8\x54\xba\x35\xa2\x57\xc6\x5e\x19\x0b\x65\x44\xe8\x36\xf6\xee\x40\x96\x7e\xae\x0c\x8f\x51\x40\x3c\x22\x5d\x4b\x1f\x42\x3a\x82\x08\x07\xfd\x3a\x19\x4d\x26\x3f\x1e\xa1\xc9\x68\x72\xac\xff\x3c\x49\xbe\xe8\x3f\x75\x4b\xd2\xf0\xe3\x11\x3a\x3e\x42\x27\xea\xff\xea\xe3\xe4\xb7\x06\x3b\xd0\xe9\xed\x1e\xe5\x17\xe4\x33\xf4\x8a\xdf\x2b\xfe\xcb\x29\x3e\xa3\x40\x25\xc1\xc1\x07\x9b\xea\xd3\x38\xbc\x20\x94\x48\xc8\x7a\xd1\x4f\xa5\x7e\xe1\xe1\x00\x1c\x74\x5c\x6a\x5c\x73\xf6\x20\x37\x17\xd8\x93\x8c\x3b\xe8\x78\x52\x53\xff\x74\x05\x7b\xf4\xbf\x38\x48\xe9\x0d\xa0\x37\x00\xa3\xeb\x8f\x6e\x00\xd2\x8b\x5c\x01\x34\x0d\x00\xbb\x13\x71\xa3\x22\xdd\xe7\xe1\xdf\x90\x01\xb4\x4e\xaa\x95\x32\x65\x05\xb3\x0e\x0a\x95\xd7\xd8\x7a\xa5\xea\x95\xca\x7b\xd9\x5f\xd0\x44\x9c\x85\x1b\x29\xbb\xfd\x82\xe6\x4b\xfe\xa8\xa8\x52\x47\x41\x4d\xbf\xb2\xb1\x54\x3d\xea\xbd\x95\xc7\xd1\x3a\x81\x91\xb1\x58\xc2\x56\xb5\xf7\x25\x85\xfe\xa2\xbf\x5a\x6a\x2b\xd4\x7a\x04\xab\x77\x56\xbc\xd1\xf3\x04\x53\x5c\xd0\x06\xf4\x7e\x87\x84\x9a\x0a\x67\xaf\xd0\xc3\x06\x28\xe2\x31\xa5\x84\xae\xd1\x8a\xb3\x10\xe9\x5b\xd5\x11\x67\x4c\x1e\xa1\x58\x00\x92\x1b\x40\x2b\x16\x04\xec\x41\x91\x24\xb3\x42\x78\x25\x81\x23\xec\xfb\xaa\x0d\xe7\xdc\xc4\x36\xbc\x55\x46\x86\x02\x42\xef\x90\x64\x08\x1b\x53\xcc\xb0\x2b\x12\x00\xba\x27\xf9\x14\x5f\xe5\xf0\xd7\x28\xa0\x68\x28\xd0\x7f\xc7\x23\x05\x1b\xa7\x00\x3d\xa3\x31\xf6\x71\x24\x81\x8f\x0b\x86\xfa\x63\x42\x53\x63\x55\x74\xb9\xfa\x6e\x64\x34\x68\xc1\x65\xf0\xa2\x6a\xaa\xc6\xc1\x52\xf2\x35\x50\x45\x99\x53\x97\xae\xd5\xdb\xab\x8b\xf5\x2d\x6f\x54\xc7\xe2\x8e\xbe\x51\xe5\x26\xbf\x97\x5a\xa2\xf4\xa2\x36\xab\xfc\x62\x86\xf9\x75\x85\x51\xe1\xd3\x70\x6f\x53\x3e\xae\xc5\xfa\xae\xb1\x10\xda\xc0\x94\x3f\x25\x1c\xfc\x82\x1c\x29\x56\xca\x84\x54\x77\xaa\xb5\x29\x2e\x8d\xfe\x31\x29\x0e\xe6\x62\x52\xba\x07\x26\xa5\x20\xbb\x6e\x36\x40\xaf\x90\x9f\xfc\x3d\x08\x6a\x94\x98\xaa\x99\x91\x15\x01\x1f\x91\x48\x59\x76\x36\x9a\x19\x71\xf5\x90\xe6\x51\x47\x65\xdc\x52\x92\xc1\x78\xe5\x87\xfa\xaa\xc5\x38\xe2\xcc\x97\xea\xde\x12\xaa\x1c\x89\xb1\x5f\xaf\xd0\x05\x09\x02\xbd\x76\x0a\x0f\x86\x10\x13\x1f\x65\xc8\x44\x79\x7f\x3f\xf6\xc0\x4f\x2f\xe5\x1a\x19\x3c\x5e\xb3\x58\x26\xf7\x87\x08\xed\x8c\x68\xae\x1a\x88\xad\xd0\x95\xa6\x5f\xa6\x7f\xf3\x00\x0a\x41\x08\xbc\x2e\x72\x88\x5c\x70\x8e\xe6\x33\xca\x92\x39\xe6\xbb\x7b\xaf\x89\xd0\x37\xa7\xd5\x60\xa9\xb0\x1a\x8e\x1f\xb3\xab\x05\x4b\xb0\xa4\x0d\x3d\x21\x08\x23\xb9\x5d\x48\x4e\xe8\xfa\x23\x8e\xde\xd4\x06\x4c\x94\xad\x3a\xe2\x9e\x63\x5a\xe3\x8e\xb5\x12\xb4\x74\x70\x95\x2a\x49\x0d\x9b\xdc\x47\x58\xc2\xe5\xb7\x15\x34\x8d\x57\xb9\x99\xae\x04\xce\xb2\x39\x9c\x74\xee\x9d\x7b\xe9\x96\xba\x12\xa7\x3c\x3f\xdd\x23\xf0\xf2\x4d\x75\x76\x16\xad\x67\xd1\x20\xca\x7a\xae\xbc\xef\x74\xb1\xd0\xb8\xb2\x35\xed\x54\xbb\x8a\x4d\x36\x30\x68\x92\x47\xfd\x58\xd6\xc2\x60\xbf\x2a\x9a\x6c\x0c\x91\x56\x67\xd1\xe6\x88\xb5\x7a\x01\x65\x9d\x53\x4e\xd0\x8e\x5f\x75\x7b\x4c\x56\xbb\xd5\xdd\xe4\x62\xea\xbc\xc9\xa1\x59\xf1\x2d\xe7\xc2\x65\xed\xb7\x3d\xd0\xec\x35\x01\xeb\xfb\x00\xf6\x7d\xdf\x6b\x0c\x8d\xef\x16\xec\x62\xd6\x6d\x66\xbb\x84\xdf\xc2\x40\x54\x80\xfe\x5f\x00\x00\x00\xff\xff\x72\x39\xb5\x4c\xd9\x68\x00\x00")

func stacksIstioTelemetryStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioTelemetryStackYaml,
		"stacks/istio-telemetry-stack.yaml",
	)
}

func stacksIstioTelemetryStackYaml() (*asset, error) {
	bytes, err := stacksIstioTelemetryStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-telemetry-stack.yaml", size: 26841, mode: os.FileMode(420), modTime: time.Unix(1556815333, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksKialiStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x5d\x6b\xdb\x4a\x10\x7d\xd7\xaf\x18\x4c\x20\x70\x89\x63\xe7\x72\x5f\xae\x20\x0f\x22\x55\xdb\x40\xf3\x81\x95\xa4\x8f\x66\x2c\x4d\xe4\xc5\xab\xdd\xcd\xee\x48\x6e\x48\xf3\xdf\xcb\xae\xb4\xb6\x1a\xe2\xd2\xbc\x08\xcd\xcc\x39\x67\xc6\x9a\x39\x2e\xb5\x7a\x14\xb5\x4b\x13\x80\x8d\x40\x29\xa6\x7d\xc2\xc7\x00\xa5\x56\x4c\x8a\x53\xf8\x39\x0d\x31\x80\x23\xdb\x91\x4d\x87\x08\xc0\x68\xcb\x29\xfc\x3b\x9f\xcf\xcf\x86\x1c\xfd\x60\xb2\x0a\xe5\xd2\x43\x45\x49\x6e\x0f\xae\x2d\x3e\xa2\xc2\x7d\x02\xa0\xb5\x32\x85\xa3\x97\x2f\x8b\xec\x73\x76\x9d\x2d\xef\x17\xdf\x5e\x93\x31\x31\xcc\xd4\x13\x6a\xa9\x57\x28\x97\x86\x6c\x23\x9c\x13\x5a\x0d\xca\x53\x98\xd4\xc4\x27\x52\x38\x3e\xd9\x22\x97\x6b\x50\xc4\x5b\x6d\x37\x42\xd5\xa7\xc2\xb1\xd0\xa7\x42\xcf\x3a\x61\xb9\x45\x19\xb5\x27\x1f\xa0\x56\xe4\x58\x28\x64\xa1\x95\x6d\xe5\xc7\xb8\x43\x3f\x52\x6c\xc5\xc7\x98\x35\x32\x6d\xf1\xf9\x20\xa7\xdf\xd3\x1e\xff\xcf\x21\xe0\xe1\xca\xca\x3f\x0f\x97\xd1\x18\xf7\x87\x6a\xcb\xda\x95\x28\x85\xaa\x23\x48\x34\x58\x53\x0a\x95\x2e\x37\x64\xfd\x4c\x61\x7b\xfd\x33\xed\xe6\xa7\x67\xff\x07\x18\xa9\x2e\x6e\x2e\xbb\xb8\xbb\x7c\xc8\x97\xd7\xd9\x55\x5e\xdc\x66\x17\xf9\xf9\xd1\xcb\xee\xfd\x75\xc0\xdc\x2e\x6e\xae\xf2\xbb\xaf\xf9\x7d\xb1\x2c\xf2\xc5\xc3\xe5\x45\xee\xcf\xe4\xfc\xe8\x65\x54\x08\x77\xe3\xe1\x68\xeb\xdd\x59\x0c\xa7\x3c\x44\xb3\xf1\x79\xb7\x36\xac\x73\x36\x7c\xc4\x67\x6c\x64\x24\x75\xc3\xcb\xf1\x7f\xc7\xd1\x03\xd1\x20\x3e\x3d\x56\x99\x45\x7f\xfc\x95\xb6\xa3\xd2\x12\xff\x2e\x14\x99\x7d\x6d\x96\x44\x4b\xed\x50\xc1\x59\xb3\x35\xb3\x49\x92\x4d\xbb\x22\xab\x88\x7b\x67\x34\xa8\xc4\x23\xb9\xbd\x39\xd1\x88\x07\xb2\xde\x18\x29\x74\xbd\x1b\x37\x42\x55\x29\x14\x41\x3c\x24\x1a\x62\xac\x90\x77\x16\x54\xd8\x50\xda\x8f\x32\xca\x38\x83\x25\x79\x5b\xbe\xd9\x05\x80\xc4\x15\xc9\x91\xa3\xd1\x98\x31\x9d\x9f\x0d\xa5\x70\x63\xf0\xa9\xa5\x90\x18\xf7\x6a\x9d\xff\x5f\x68\x82\xf0\x7d\x91\x2f\xbc\x78\xd4\x35\xe8\x9c\x59\x5b\x74\xa1\x7a\x9b\x15\xc5\xf7\x9b\xc5\xa7\xd7\x24\x61\x6a\x8c\xc4\xe1\x27\x3f\xb5\xde\x89\x83\xf1\xa7\xd0\xa1\x15\xb8\x92\x94\x42\x94\xeb\x7b\x92\x2b\xad\x30\x1c\x3e\xc4\x24\x76\x05\xd6\x20\x75\x2d\x14\x54\xe8\xd6\x2b\x8d\xb6\x9a\xbc\x51\x89\x6d\xdf\x51\xf1\xf3\x6d\xb5\xad\xde\x55\xf9\x15\x00\x00\xff\xff\x14\x50\xb7\x75\x43\x05\x00\x00")

func stacksKialiStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksKialiStackYaml,
		"stacks/kiali-stack.yaml",
	)
}

func stacksKialiStackYaml() (*asset, error) {
	bytes, err := stacksKialiStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/kiali-stack.yaml", size: 1347, mode: os.FileMode(420), modTime: time.Unix(1557159995, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksLocalstorageStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x53\x51\x8b\xd3\x40\x10\x7e\xcf\xaf\x18\x82\x70\x2a\x97\xe6\xf4\x49\x16\x7c\xa8\xd7\x16\x85\xbb\xb6\xd8\x53\x1f\x44\xc2\x34\x99\xa6\xeb\x6d\x76\xc3\xce\x34\x20\xea\x7f\x97\xdd\xa4\x69\x7b\x70\x3e\x25\x33\xdf\x37\xbb\xdf\xce\x37\xf3\x78\xd8\x92\xb7\x24\xc4\x2a\x01\x68\xd0\xea\x1d\xb1\x28\xf8\x93\x25\x00\x00\xd8\xea\xaf\xe4\x59\x3b\xab\x80\xc5\x79\xac\x69\xf2\xf8\x8e\x27\xda\xe5\xdd\x9b\xc8\x78\xd4\xb6\x52\xb0\xe9\xb1\x5b\x83\xcc\x31\xdd\x90\x60\x85\x82\x2a\x46\x00\x16\x1b\x52\x60\x5c\x89\x66\xc8\xa0\xb5\x4e\x50\xb4\xb3\x7c\x24\xc1\xf1\x8e\x32\x9c\x33\x39\x69\x0b\xf7\x69\xce\x2a\xda\xe1\xc1\x48\x16\x61\x05\xa9\xf8\x03\xa5\xb1\xb6\xf5\xae\xd3\x41\x26\x79\x05\x1e\x6d\xb9\x27\x1f\x8a\xe2\x85\x59\x8b\xb2\x8f\xb4\xce\x99\x43\x43\x1f\xb4\xad\xb4\xad\xef\x5d\x45\x0a\xbe\xa1\x96\x85\xf3\x0b\xed\x59\x6e\x9d\xe5\x43\x43\x3e\x72\x7d\x50\xa1\x9b\xb5\x33\xba\xfc\xa5\x60\x46\x86\x84\x92\xa4\x74\x76\xa7\xeb\x28\xb9\xff\xed\xc5\x97\xce\x0a\xd9\x53\xe3\x00\x7e\x8f\x8f\x4a\xad\xab\x68\x8d\xb2\xbf\xc7\x36\x55\xf0\x7d\x04\xce\x49\x23\x31\x55\x90\xce\xe6\x8b\xe9\x97\xbb\x87\x62\x3d\x7d\xf8\x58\x2c\x56\x9f\x8b\xe5\x6a\x59\xdc\x7d\xda\x3c\xcc\x67\xc5\x72\x35\x9b\x6f\xd2\xeb\xcb\xc2\xf0\x42\x7e\x72\x76\x04\xf2\x0e\x7d\x6e\xf4\x36\x1f\x9a\x92\xfb\x60\x5d\x6c\x03\xa7\x17\xe4\x1f\x67\xd1\xdf\xe4\x69\xb6\xcf\x18\xdc\x92\x19\xed\x2a\x51\xc4\x50\x68\x73\xe9\x09\xc5\x79\x05\xd6\xf9\x06\x6d\xc2\xe4\x3b\x5d\xf6\x33\x75\xb2\x20\x3b\x77\xa9\x1f\x2f\x5f\x0f\xa7\x65\xcf\xf0\x06\x30\xcb\x2a\xda\x1e\xea\x21\x62\x41\x2f\x23\xd2\xdb\x30\x84\x39\x49\x99\xf7\x99\xe1\x33\xf9\xc9\xce\x1e\x3d\x8a\xd6\xc1\x09\x8f\x9e\xfd\xaf\x86\x6c\x77\x14\xb8\x5e\xcd\x8a\xe5\xf4\x7e\xbe\x59\x4f\x6f\xe7\xef\x5f\xbc\x64\x32\xbb\x3c\xcc\x35\xb7\x58\xd2\xab\xc8\xaa\x8d\xdb\xa2\x29\x5a\xf2\x8d\x66\x3e\xcd\x76\x06\xc1\x5a\x1e\xfe\xdb\xb0\x52\x1c\xee\xee\x9d\x88\x83\x76\x04\xaf\x5e\x03\xd9\xaa\x75\xda\x0a\x5f\x9d\x72\x4f\x6b\x2e\x30\x57\x8d\x61\xb4\x82\xae\x5b\x94\x72\x0f\xd4\x91\x15\x1e\xbb\x76\xb1\xbf\xe7\xab\x36\x28\xd3\x0d\xd6\x34\xee\x4f\xfe\x8c\x73\xdd\xcd\xe4\x66\xf2\x36\xf9\x17\x00\x00\xff\xff\xa8\x93\x80\x21\x3a\x04\x00\x00")

func stacksLocalstorageStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksLocalstorageStackYaml,
		"stacks/localstorage-stack.yaml",
	)
}

func stacksLocalstorageStackYaml() (*asset, error) {
	bytes, err := stacksLocalstorageStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/localstorage-stack.yaml", size: 1082, mode: os.FileMode(420), modTime: time.Unix(1556674378, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksMeshStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x59\x6d\x8f\xdb\xb8\x11\xfe\x9e\x5f\x41\xa8\x29\xb0\x0b\x54\x5a\x7b\x93\xa0\x8d\x80\x7e\x50\x6c\x27\x75\xb1\xb6\x05\x5b\x77\x6d\x6a\x04\x36\x2d\x8d\x6d\xde\x4a\xa4\x8e\xa4\x9c\xf5\x25\xf9\xef\x85\x28\xd9\x12\xf5\x62\x3b\xfb\xd2\x7e\x8a\x43\x6a\xe6\x79\x66\x38\x9c\x19\xce\xfe\x89\x32\x09\x51\x1c\x62\x49\xe8\xe6\x95\xcf\xe8\x9a\x6c\x84\xfd\x0a\xa1\x08\xc4\x36\xfd\x37\xfb\xd5\x53\x1b\x36\xfa\x6e\xaa\x25\x84\x02\x22\xf0\x2a\x04\x97\x85\xc4\xdf\xf7\xb6\xe0\xdf\x0b\x1b\x49\x9e\x40\xbe\x4f\xe8\x86\x83\x10\x3d\x46\x25\x67\x61\x08\x7c\xc4\x02\xb0\x91\x31\xf9\xf8\xd1\xc8\x3f\xc1\x89\xdc\x66\xf2\x36\x1a\x4f\xc6\x83\x7c\x99\x07\x62\x0a\x6b\x0e\x62\xdb\x87\x10\xef\x6d\xd4\xed\x88\x7c\x2b\x22\x0f\xc0\xa7\x10\x33\x2e\x67\xc0\x77\xc0\x6d\xf4\xfa\x9b\x37\xb8\x1b\x8c\x06\xde\xf4\xf3\xc2\xe9\xf7\xa7\x83\xd9\xec\x87\xfd\xbe\xf3\xbe\x9b\x8b\xb0\x44\xae\x58\x42\x03\x8f\xe3\xf5\x9a\xf8\x39\x5e\xbe\x89\x50\xa4\x58\x39\x77\x77\x93\x7f\x2d\x9c\xf1\xe7\x83\x71\xb0\xc6\x49\x28\x73\xa3\x8f\x1f\x07\x44\xf8\x6c\x07\x7c\xdf\xc6\x0f\x21\x9f\x51\x0a\xbe\xf4\x48\x04\x2c\x91\x36\x7a\xa3\xef\xad\xc9\xc6\xc5\x72\x6b\x23\xe3\x06\xa4\x7f\x43\x84\x24\xec\x26\xe6\xec\x61\x6f\x1c\x3f\x5b\x11\x8a\xf9\xfe\xf0\x59\x22\xf8\x4d\xc8\x7c\x1c\xde\xac\x08\xbd\x01\xba\x63\xa5\x4f\x05\xf0\x1d\xf1\xa1\x17\x26\x42\xa6\xce\x50\xfa\x4c\xa5\xaf\x20\xcd\x31\xa1\xfd\x84\x63\x49\x18\xb5\xd1\xdb\x77\x05\xa1\x18\x73\xa0\x72\xb6\x4d\x64\xc0\xbe\x96\xbe\xe9\x46\x25\xd6\x84\x4a\xe0\x3e\xc4\xe9\x56\x76\x86\xd3\x41\x7f\x38\x1d\xf4\xbc\x42\x4f\x0a\xe8\x04\x11\xa1\x2e\xe3\xd2\x46\xdd\x77\x9d\x4e\xa7\x6c\x76\x1a\x02\x6e\x88\x29\x38\xcd\x47\x5e\x72\xad\x13\x04\x69\xdc\x1c\x6d\x21\x21\x93\xd6\xeb\x6f\x63\x67\x34\x98\xb9\x4e\x6f\xf0\xc3\xee\xbe\xeb\x74\x33\xed\x82\x04\xe0\x63\xee\x65\xf1\x0b\xa5\xe8\xe4\xf0\x95\x13\x09\x4e\x1c\xff\xc3\xf3\x5c\x97\xb3\x15\xd8\x68\x8d\x43\x51\x84\x27\x49\x8f\x57\x62\x42\x81\x8b\xc3\x11\xcf\xe7\x88\xac\x11\x05\x74\x85\x29\x65\x52\xb9\x03\x59\x93\xd5\x6f\xe0\xcb\x11\x48\x8c\x96\x39\xa4\xa5\xd8\x59\x84\xdd\x54\xdd\xb3\x44\x96\x9b\xba\x23\x8b\x1d\x6b\x58\xd9\xbe\x46\x46\x6a\xb7\x81\xbe\x7c\xc9\x31\x4d\x44\x71\x04\x07\x7b\x53\x5e\x85\xeb\x23\xbc\x49\xef\x4c\xc0\xfc\x7b\xe0\x0a\xad\x08\x98\x45\xfa\xa9\xdd\xb5\xba\xd6\x9b\x22\x20\x30\xdf\x88\x22\x5e\x4d\x64\x98\xb1\x51\xfa\xef\x7c\x8e\xac\xd1\xf1\x36\x67\x44\xef\x88\x90\xa0\x0e\xae\xe0\x94\x89\x26\x65\xd1\xee\x9b\x37\x7f\xd5\x76\xa3\x8a\xe2\x97\xf2\x58\x95\x15\x29\xe3\x1a\x27\x80\x65\x76\xe3\xad\x06\x02\x7e\x98\x04\x30\xc9\x33\xc3\xd0\x9d\x62\xba\x01\xb1\x44\xc8\xf8\xf6\x0d\x59\xc3\x6c\xfb\xb0\x8c\x7e\xfc\x48\x4f\x4b\x43\x35\x1f\x9e\x4c\x02\x1e\x4e\x92\x18\x3c\x9c\x27\xb1\x7a\x2e\x4f\x0c\xa9\xe2\x90\xc6\x80\x58\xa2\xab\x86\x55\x64\xcd\x62\xf0\xad\xe2\xc6\x5c\xd7\xd8\x04\x55\x36\xb9\x85\x25\x35\x27\xae\x95\xc4\x32\x11\x75\x82\x69\xa6\x5f\xa2\x34\xa1\xdc\x76\xd0\x75\xbb\xfc\x39\x37\xeb\x16\x22\xc3\x40\xba\x01\xd9\xc5\xbf\x22\x42\x80\x2c\x6b\xb6\x9c\x23\xa0\x38\x81\x72\x9f\xac\x60\x47\xb8\x54\xb1\xbb\xc6\x3e\x88\xe5\x35\x32\x2b\x81\x7b\x5f\x75\x10\xa1\x01\x3c\x3c\x0f\x5a\xd5\x18\xa0\x81\x86\xaf\x32\x89\x9b\x84\xe1\x21\xf9\x0e\xd7\x63\x26\x5d\x0e\x02\x68\x91\x6f\x38\x08\x96\x70\x1f\x4a\x29\x24\x5d\xfc\x3d\x01\x21\xb5\x35\x84\xfc\x38\x49\x0b\x5f\xa4\x2d\x46\x10\x31\xae\x0a\xe2\x88\x94\x36\x42\x12\x91\x16\xf9\x16\x05\xef\xca\x0a\x04\xf8\x09\x27\x32\xcd\x0f\x12\x1e\xa4\xc6\x2d\xa1\x8e\xf8\x45\xa4\xa5\xaf\x53\x5d\x1e\x33\x3a\x65\x4c\xea\x69\x5f\x41\xe3\x18\xaf\x48\x48\x24\x81\x0a\x29\x1c\x04\xfa\x82\x89\xc6\x03\x6f\xe1\xf4\x47\xc3\x71\xd9\x49\x12\x73\x79\x70\xa4\x13\x7e\xc5\x7b\xf1\xaa\xc5\xf3\x7e\xad\xc4\xe8\xe9\x5e\x2f\xd5\x79\xbe\xff\x99\x64\xaa\x14\x0c\x53\xb9\x34\xac\x1b\x0b\xc5\xee\x36\xaf\x12\xa8\x9c\x4a\xd3\x9b\xa5\x95\x8a\x23\xd5\x63\x0d\x7f\x5f\xf6\x69\xcc\x99\x64\x3e\x0b\x6d\xe4\xf5\xdc\xd2\x7a\x66\xcd\x56\xca\xd8\x54\xcd\x49\x6a\x52\xd4\x5a\x8f\x74\x7b\xcd\x43\x05\x2f\xad\x98\x66\xc0\x22\x4c\x68\x69\xe9\xf5\x95\x3b\xe9\x2f\x8e\x1d\xc0\xb5\x25\x76\xbe\xe5\x67\x3d\x8f\xa5\x7a\x23\x4d\xbe\x68\xb3\x2a\x95\xaf\x5c\x65\x7a\xc7\x8f\xf4\xfa\x62\x9a\x45\xfb\x75\x42\xfc\xc3\xf1\xa3\xaa\xb8\xde\x92\x55\x12\x0c\x85\x34\xf5\x5c\xd5\x2f\xfe\x1d\x5e\x41\x28\x90\x81\xe3\xd8\xa8\x66\x8e\xc6\x4c\x51\x16\x40\x5f\xbe\x58\x55\x1f\x69\xc9\x20\x14\x50\xd7\xb9\xc3\x61\x02\x13\xde\xcf\x5a\x5d\x64\xf5\x21\x0e\xd9\x3e\x02\x9a\x01\x8c\x71\x04\xc8\x28\x45\xa9\x82\xb9\x4c\x4e\xc4\xd8\x07\x64\xe4\x5d\xb4\x51\x76\x51\x43\x6e\x52\x67\x5e\x6e\x52\x75\x9e\x6b\xc6\x23\x2c\x0f\x7b\xfa\x31\xf4\xcb\x62\xd5\x93\x68\xee\x6e\x2f\x57\xee\x36\xca\x57\x51\xaa\x8d\xeb\x23\x9b\xa2\xaa\x9a\x4a\x53\xd4\xaf\x6c\x57\x59\xfc\x41\xe2\x7b\x42\x1b\x29\x68\x7a\x3e\x81\xf4\x38\xf6\x09\x55\x3f\xff\xa3\xa4\xd2\x5f\x2d\x6a\xf5\xd7\xcc\xe5\xae\xeb\x69\x72\xb5\x83\xd1\x9e\x0b\x27\xd8\xba\xda\x87\x95\x30\x22\x6b\xb4\x91\x35\x58\x3f\xe1\x1c\xa8\xbf\x47\x9d\x5a\x8c\xf9\xc5\xee\xe9\xc4\x70\xd4\x71\x3e\x6e\x9b\xdf\x36\x8f\x8c\x81\x66\x65\xcb\x1a\xbf\x86\x8f\x0a\xaa\xf3\xb9\xa9\x5a\x99\x93\x8f\x98\xcb\xba\x2d\xa3\x63\x5c\xd7\xd2\x9b\x12\xad\x9f\xdb\x93\xa0\xaa\x20\x38\x8e\x43\xe2\x2b\x6d\xaa\x63\xbb\xb0\xcd\xe5\x80\x03\x42\x41\x08\xab\x0d\xb5\xaa\x78\x89\xae\xaa\x4b\x27\x3b\xdd\xd4\xb9\x69\x18\x94\xf8\x02\xdd\x95\x0b\x5c\x56\x0e\x0f\xb9\xb8\x54\x27\x55\xda\xfc\xc8\x59\xa4\x77\x18\x6b\x02\x61\x30\x85\xb5\xbe\x9a\xaf\x67\x33\x80\x08\x24\x0e\xb0\xc4\x56\xaa\xbb\x15\x4a\xa5\xfd\xe7\xc7\x53\xa9\xbc\x06\x3a\x1c\xcf\x3c\x67\xdc\x1b\x2c\x86\xee\xb3\x40\xe6\xe7\x15\xb3\xa0\xa4\xb0\x8e\x3a\xf3\x86\x93\xc5\x68\xe0\x39\x8b\xff\xa1\x83\x4b\xa8\xbd\xc9\xf8\xe3\xf0\xd3\xff\xc1\xdd\x05\x85\xe1\xd8\x1b\x4c\x7b\x03\xd7\x1b\x4e\xc6\x8b\xd1\xa4\x5f\xe3\xa0\xda\x47\xc6\x9b\x9a\x8c\xf2\xeb\xc2\x38\xfb\x2c\x37\xae\x4f\xbf\xcb\xad\x99\xe4\x84\x6e\xea\x59\xb9\x0d\x52\xbb\xe4\x55\xc3\xfe\x39\x9b\x8c\x17\xce\x78\x3c\xf1\x9c\xd4\xb4\x59\xdd\xac\xef\x15\x17\x2a\x38\xc9\x52\xc1\x4b\x20\xf3\x04\x7e\x92\x6d\xde\x54\x9d\x27\x7a\xe7\x7c\x18\xdc\x3d\x81\x63\x1d\xa8\x89\x9e\x79\xc9\x9b\xb4\x76\x8e\x2b\xc6\xa4\x90\x1c\xc7\x93\x1d\x70\x4e\x02\x58\x5e\xb7\x5b\xf4\x61\x32\xf1\x66\xde\xd4\x71\x17\x93\x5f\x07\xd3\xe9\xb0\x29\x9e\xca\xa3\x4a\x3f\x11\x92\x45\xe6\x11\x23\x5f\x58\x1c\x17\xac\xdf\x04\xa3\x86\x66\x44\xc5\xae\xcb\x9e\xa2\xf9\x83\xfc\x05\xaa\xd8\xb1\x4a\x64\x53\xc1\x92\xbd\xe9\x23\xe6\x13\x48\xfd\xae\xc6\xea\x92\xde\x6c\x01\x87\x72\xfb\xc7\x4d\x2a\xbd\xd7\x3f\x50\xcf\xa5\xe7\x2c\x81\xd9\x74\x92\xe0\x50\xcd\x97\x67\xe0\x33\x1a\x88\x93\x10\xe7\x2b\x5f\x83\xc6\x14\xbb\x82\x1b\x03\x27\x2c\x78\x1e\x44\x4d\xd7\x12\xa1\xdb\x0a\xd6\x1a\x93\x30\xe1\xe0\x6d\x39\x88\x2d\x0b\x83\x27\xc2\x55\xd5\x2d\x11\x7a\xa3\xbb\xb5\x68\xe1\x4e\x4d\x14\x00\x07\x13\x1a\xee\xa7\x8c\xc9\x8f\x24\x04\xb1\x17\x12\x22\xed\x2f\x1b\x45\x78\xc2\xef\x2f\x3a\x28\xf6\xdc\xe9\xe4\xdf\x9f\x0d\xad\xe9\x7c\xf2\xf8\x22\x9f\x8e\x7c\xe2\x2c\x89\x6d\x7d\xaa\xdb\xfc\x58\x2c\x15\x62\x6d\xe0\x52\x13\xad\xdd\xf4\xc6\x71\x52\xe6\x39\x55\xa0\x7e\x32\xb1\xa9\x67\x43\xcf\xfd\x65\x79\xfd\x48\xd9\x91\x9a\x2e\x55\x26\x73\x6d\x03\xae\xcb\x26\x82\xa7\x48\xea\x28\xf9\xc8\xeb\x82\xb9\x5f\xbb\x4e\x6d\xca\x87\x1a\xab\xc6\x53\xa9\xb7\xf8\xa8\x18\xcd\x3d\xda\x80\x5c\xf3\x05\x36\x34\x47\x61\xeb\x14\xf1\xb6\xd3\x36\x46\xec\xde\xfe\x4d\x1b\x44\x3e\x62\x94\xf9\x56\x1f\x65\x9e\x7a\x0f\xee\x58\x98\x44\x30\x62\x09\x2d\x23\xbc\x58\x19\x8f\x52\xa0\xac\x85\x3c\x51\xa0\x6b\x93\xba\xea\x07\x66\x46\xfb\x54\xc5\x6e\xc3\xd2\x87\x79\x48\x1b\x6c\xaa\x59\xe0\x09\x0d\x3e\x70\x29\x6e\x5a\x84\xd5\x66\x43\x52\x6e\x48\xc3\xca\xb9\x3f\xeb\xdb\x44\x00\xff\xb5\x38\xad\xa5\x7e\x81\xe6\x73\xc4\x31\xdd\x00\x7a\xad\xe2\xfc\x2f\xe8\xb5\x6a\x84\x90\xfd\x77\xb4\xe6\x2c\x52\xcd\xdc\x99\xee\xfa\x3c\x64\x63\x4f\x96\xde\xad\x0c\xb4\x72\x4b\x54\x17\xf9\x19\x47\xe1\x81\xcb\x77\x75\x07\xa9\x44\x6f\x6b\xdc\x6b\x09\xa1\x76\xa2\xd9\x89\x97\xfe\xe8\xf9\x02\x11\x6a\x5e\x18\x6e\xd9\xb0\x76\x84\x63\xbb\x16\x0b\x3f\x33\x3a\xa9\x73\x41\xcb\xa5\x3e\x14\xd1\x5c\x60\x22\x88\x62\xb9\xef\x13\x5e\xc6\x8d\x20\x20\x49\x64\xa3\x2c\x55\xbd\x3a\x17\xd7\xe6\x89\xa0\x15\xe0\x73\xbd\x95\x64\xaa\xb4\xe3\xb0\xbd\x97\xc8\x26\x0f\xb3\x6c\x80\xec\xf8\x7e\x1a\x28\xd9\x18\xb6\xda\x03\x64\xda\xc7\x05\xba\x95\xcf\x5a\xcf\xd6\xf2\xb2\xe4\x7c\x8e\x62\x4e\xa8\x5c\xe7\x73\x5e\xeb\xcf\xc2\x68\x27\xd1\x14\x67\x66\xfd\xbd\xf2\xf8\xbb\xb8\xac\xd4\x80\x97\xbc\x84\x4d\xa1\xda\x72\xfb\xda\xef\xde\xed\xd9\xf7\x65\xb6\xf2\xdf\x00\x00\x00\xff\xff\x57\x52\x84\xe2\x63\x23\x00\x00")

func stacksMeshStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksMeshStackYaml,
		"stacks/mesh-stack.yaml",
	)
}

func stacksMeshStackYaml() (*asset, error) {
	bytes, err := stacksMeshStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/mesh-stack.yaml", size: 9059, mode: os.FileMode(420), modTime: time.Unix(1556674378, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksNfsStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xda\x40\x10\xbd\xf3\x2b\x46\xa8\x47\x9c\x28\x55\x0f\xcd\x4a\x39\x44\x95\xab\xe4\x50\x40\x80\x50\x6f\x68\xb0\x07\xb3\x62\xbd\xeb\xec\x8c\x9d\xa0\xb6\xff\xbd\xda\xb5\x01\x13\x48\xd5\xe3\xcc\xbc\xf7\x76\x3e\x9e\xbd\xab\xd7\xe4\x2d\x09\xb1\x1a\x00\x94\x68\xf5\x86\x58\x14\xfc\x4e\x06\x00\x00\x58\xe9\x25\x79\xd6\xce\x2a\x60\x71\x1e\x0b\xba\xd9\x7d\xe5\x1b\xed\x6e\x9b\xbb\x88\xd8\x69\x9b\x2b\x98\xb7\xb5\x6f\x06\x99\x63\xba\x24\xc1\x1c\x05\x55\x8c\x00\x2c\x96\xa4\xc0\x6e\xda\x6a\xe5\x5d\xa3\x83\x2a\xf9\x36\x39\x60\xf2\x8d\xce\xda\x2e\xec\x86\x93\x3e\x22\x52\x74\x89\x05\x29\x78\xa9\x71\x1f\x5e\xa7\x37\x21\x6f\xd1\xac\xba\xae\x6e\x03\x29\x33\x9a\xac\x9c\x71\x0d\x0a\xb1\x44\x05\xb2\x4d\x2b\x95\xc0\x74\x36\x59\x3e\xcf\x9f\x27\xe3\x74\xb6\x1a\x3f\xfe\x48\x1f\x0e\x8d\x25\x30\xfe\x3e\x5f\xcd\xd3\xd9\x32\x9d\x3d\x7c\xfa\x75\x0a\x56\x4f\x93\xf9\x22\x40\xff\xf4\x70\xd3\xc7\xc5\xd3\x39\x2a\xfd\x39\x9d\xcc\x16\xb1\xd0\x02\x1b\x67\xea\xb2\x1d\x2b\xb0\xe2\x4a\x6e\xab\xb0\x52\x16\xb2\xd2\x95\x63\xb5\x30\x6e\x8d\x66\x55\x91\x2f\x35\x87\xf6\x8f\xac\x82\x64\x64\x34\xcb\xe8\x15\x25\xdb\x8e\x32\x4f\x28\x34\xca\xc9\x90\x10\x5c\x17\xbb\x20\xd5\x55\x8e\x57\xd0\x99\x41\x5d\x5e\xa7\xbc\x3f\x78\x17\x66\xe1\xc6\xc7\x57\xba\x5e\x5a\xf5\x51\x15\x79\xd4\x90\x95\xee\xd0\xff\x3b\xcc\xb9\x80\xcd\x2b\xa7\x0f\x1a\x9e\x58\xd0\x8b\x02\x34\xaf\xb8\xe7\x41\x4c\x66\xce\x0a\x6a\x4b\x9e\xcf\x1d\xa6\xad\x96\xa4\xbf\x08\x88\x29\x05\xe2\x6b\x3a\x24\x5a\x2b\xe5\xa8\x79\x8b\xf6\xee\xfe\xfe\x73\xcf\x3d\x7d\xc7\x00\xa0\x2f\x8e\x0f\x24\x30\xe4\xed\xf0\x14\x24\x59\x2f\x28\x5d\x6d\x05\x12\x09\xe6\xfd\x02\xd7\x9d\xa3\x3e\xb4\x0a\x5c\x5a\xe2\xa0\x7d\x66\xa0\x7f\x58\x48\xf1\x16\x3d\xe5\x1d\xac\xf2\xba\xd1\x86\x0a\xca\x2f\x27\x9f\xd6\xc6\x4c\x9d\xd1\xd9\xfe\xb4\xd2\x97\x9a\x58\xda\x2b\x25\xd0\xa0\xd7\xb8\x36\xa4\xe0\xca\x14\x03\x80\x9c\x38\xf3\xba\x92\xf8\x57\x18\x3e\x39\x96\xb0\x7b\x70\x9b\x80\x87\xf0\x25\x93\x1f\x7e\xa4\xd3\x1b\xfb\x42\x2a\x7d\xab\x9c\x17\xa8\x50\xb6\xef\xd4\xfe\x06\x00\x00\xff\xff\x83\xc4\x60\xf1\xa7\x04\x00\x00")

func stacksNfsStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksNfsStackYaml,
		"stacks/nfs-stack.yaml",
	)
}

func stacksNfsStackYaml() (*asset, error) {
	bytes, err := stacksNfsStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/nfs-stack.yaml", size: 1191, mode: os.FileMode(420), modTime: time.Unix(1556674378, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksPrometheusStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x6d\x6f\x1b\xb9\x11\xfe\x9e\x5f\x31\x38\x1b\x90\x94\x78\x57\x76\x5e\xae\xc8\x1a\x46\x10\x14\x06\x1a\xb4\xb9\x1a\x8d\xbf\x14\xa9\x6f\x41\x91\x23\x2d\x63\x2e\xb9\x25\xb9\x92\x85\x38\xff\xbd\x20\xb9\x6f\x92\xf5\x66\xc5\xb9\xf4\x12\xfb\x83\x24\xef\x92\x33\x0f\x67\x1e\xce\x90\x43\x52\x25\xc7\x7c\x62\x92\x27\x00\x85\x56\x39\xda\x0c\x4b\x13\x85\xa7\xee\x21\x00\x55\xd2\xa2\xb4\x09\xc0\x6d\xe4\x1f\x00\x4c\x84\x1a\x11\x91\x54\xff\x01\x18\xaa\x49\x81\x29\x97\x16\xf5\x94\x88\x04\x4e\x5e\x99\x27\x0b\xaf\x3a\x6a\xdc\x5f\x04\x9f\xd4\x28\x95\x24\xc7\x04\x7a\xdc\x58\xae\xa2\x1c\x4d\xd6\x6b\x24\x1e\xc0\x3f\xa7\xa8\x35\x67\x08\x36\xc3\x4a\x21\x30\x1c\x93\x52\x58\x20\x92\x55\x82\xc1\x12\x3d\x41\x6b\x60\xac\x55\x0e\x36\xe3\xc6\x49\x06\x9c\xa2\x9e\xc3\x2b\x30\x48\x95\x64\x26\x5e\x8f\xb4\x01\x0a\x70\x5d\x8e\x50\x4b\xb4\x68\x52\xc3\x96\x11\x3b\xcc\x5a\x09\x4c\x00\x25\x2b\x14\x97\xb6\xed\x08\xe0\x46\x62\x0a\x42\xb1\xd3\xbe\x79\xbe\xf8\x28\x82\xc3\xcf\x97\xe7\xff\x38\x7f\x7f\x7e\xf9\xaf\x7f\xa7\xbf\xbd\x7d\x7f\xfe\xe1\xe2\xed\x5f\xcf\xbf\x34\x8d\x34\x0a\x32\x42\xb1\x0a\x80\x51\xa5\xa6\x98\xfa\xf7\x26\x81\x8f\x69\x9a\xa3\x25\x69\x17\x38\xea\x29\xa7\xe8\x4d\x7b\x04\x77\xdf\xd7\xe0\xd3\x42\x69\xeb\x5b\x5d\x75\xd0\x11\x6a\xb9\x92\x09\x5c\x23\x16\x9d\xc7\x1a\x27\x78\x93\x40\xf0\x93\x45\x81\x39\x5a\x3d\x3f\x6d\xf9\xf2\xa4\x76\xda\x87\xe0\x94\x00\x1d\xc6\x4a\x03\xca\xa9\x9a\x83\xb1\xa4\xb1\xd7\x82\xef\xfd\xeb\xc8\xbf\xee\xed\xe4\x24\xa7\x9a\x53\x93\x16\xc4\x66\x09\x0c\x7d\xcf\xe1\x1d\x24\x3b\x3b\xb3\x50\xec\x61\x0c\x5f\x28\xaf\xc5\x12\x2e\x51\xef\x63\xdd\x5e\xfc\x34\x0a\xd6\x70\xa3\xe9\x6d\x54\x4e\x18\xd3\x68\x4c\x9a\xae\x72\xb1\x43\x42\xa4\x54\x96\x38\x75\x69\x6b\x9b\x94\x2b\x0f\x6c\x15\x26\x8d\x85\x20\x14\xef\xc2\xea\x7f\xfc\x3d\xb9\x7a\x36\xe8\xbf\x49\x92\xff\xb0\x67\x83\x37\xa7\x7d\xf7\xb5\xd0\xce\xf7\xcc\x7d\x88\x38\x3c\x49\x4e\x5e\x1d\xbf\x3e\xee\xbc\x0f\x13\x34\xa0\x4f\xa0\x83\xbd\x33\xc2\x1a\x85\x6f\x94\x93\x15\xd6\x59\x3d\xcc\xe0\xaf\x7e\xdc\x01\xb4\x8b\xaf\x9a\xd9\xba\x9b\x25\x16\x47\xd0\x74\xbe\x37\x3d\xd6\xf1\x61\x9b\xc6\xba\xef\xd2\x1c\x48\xd7\xf2\xf5\x00\xce\x6f\xa8\x28\x19\x82\x51\x39\x82\x1a\xfb\x18\x1a\x66\x62\x35\x7f\xc0\x66\xc4\x42\x46\xa6\x08\x39\x31\x86\x4f\x11\x28\xd1\x8c\x4b\x22\xb8\x9d\x77\x24\x5d\xba\x90\x2a\xb8\xb1\x90\x93\x39\x48\x44\x06\x56\xc1\x08\xa1\xd0\xa5\x44\x06\xe3\x52\xdb\x0c\x35\xe4\x6a\xca\xa5\x9f\xf2\x33\xa2\xd9\x11\x10\x03\x5c\x8e\x95\xce\x91\x75\xa4\x8d\xe6\x50\xa0\x76\x8f\x89\xa4\x58\xc5\x71\x22\xc8\x88\x3b\xb5\x60\xd1\x58\x2e\x27\xf1\x06\xd3\x02\x15\xa5\xb1\xa8\xbd\x45\xe0\x6a\xc5\x3c\xea\xab\xd2\x8e\x54\x29\xd9\x2d\x97\xe1\xbb\x33\x05\x7c\xbc\x18\xc4\x4f\x7b\x2b\xfc\xc0\xb4\x2a\x36\x69\xb6\xb4\x48\x0b\x8d\x63\x7e\xf3\xc7\xea\x75\xd6\x47\x17\x55\xaa\xa9\xb3\x5a\x7b\xfc\x6c\xb0\x8f\xf0\xd4\x1b\x32\x4d\x57\x0a\xf5\x94\x49\xad\x30\xfb\x01\xdf\x45\x36\x2d\x52\xa6\x66\xd2\x58\x8d\x24\xff\x66\x6a\x32\x6b\x8b\xb4\xef\x9d\x70\x4b\x58\xce\xe5\x9e\xae\xd8\x41\x55\xcd\xcf\xbe\x18\xdd\x6a\x97\x27\x6f\x47\xdc\x73\xc2\xa2\x96\x44\xdc\xe6\xe4\xe6\x56\x69\x3e\x71\x53\x6d\x3b\x8a\x15\x0b\xa5\x42\x09\x4e\xe7\xdf\x77\xa9\x74\xb0\x90\x87\x6b\x65\xc6\x85\x86\xde\xb0\x7a\xd5\x45\x68\x68\x86\x39\x2e\xb6\x73\x3e\xe9\xc5\x8f\xab\xaf\x3b\xee\xdf\xb4\xfa\x0a\xce\x3f\x75\xb6\x8b\x72\x25\xb9\x55\x9a\xcb\xc9\x7a\xb2\x34\xab\xb5\x47\xbe\xfc\x94\x7c\x69\x57\xeb\x3b\x50\xa6\xe0\x42\xd9\x47\xa2\xfc\x94\x44\xf1\xbe\xdf\x85\x24\x13\x22\x04\x3e\x86\x93\x9f\x93\x25\xc1\xf9\x6b\x68\x72\x50\x7b\xba\xb3\xfd\x7f\x7b\xf1\x0e\x1c\x2c\xd4\x2b\xb7\xff\x2d\xb8\x88\x14\xbc\x6a\xd8\xfb\xc3\x9d\x52\x11\xa3\xc3\x3d\xc7\x97\x04\xdc\x38\x5b\xa1\x56\x98\xb4\x5b\x18\x0b\x7f\x94\xa4\x63\xee\x50\x0c\xa7\x44\x0f\x75\x29\x87\x06\xa9\x46\x6b\x86\x2d\xfa\x98\xab\x61\xe5\x1c\x42\xa9\x2a\xa5\x1d\x52\x12\x53\xdd\x6a\x1c\x21\xd1\xa8\x53\xab\xae\x51\xee\x25\xcf\xf7\xfc\xff\xa7\x51\x2b\xe6\x74\xd1\xb8\xd1\x0e\x85\x82\xa5\x62\x43\xc7\x1e\x95\x03\x63\x33\xa5\xc9\xcb\x97\x2f\x36\x10\x52\x2a\x86\x06\xfa\xae\xaf\x40\x3b\xd8\x42\x4a\xdf\xba\xf7\xe3\xf0\x62\xc7\x09\xe5\x86\xbd\x0b\x97\xf6\xa9\xdb\x38\xd9\xab\x0b\x37\x0f\x4f\x80\x1d\xcb\x41\x0e\xd1\x32\x8d\xeb\xf2\x57\xbc\x50\xec\x5a\x86\xd8\x4d\x43\xeb\x71\x0e\x49\xc1\x87\xd3\x93\xa1\x67\xd3\xf0\xf0\xf0\xf3\xc9\x97\x61\xa1\xd5\xcd\xbc\xce\x55\x0d\x5f\xef\xd6\x4f\xff\x1e\x88\x0a\xf4\x2d\x9b\x72\xa3\x74\x9d\xb1\x0e\x9a\x3e\xbe\x42\xc3\x0d\x68\xfc\x6f\xc9\x35\xb2\xa6\x5b\x18\x1e\x9c\xc4\x7f\x89\x5f\xf8\x44\x2c\x88\x45\x7d\x04\xb3\x0c\x35\x36\x02\x61\x19\x43\xdf\x66\xca\x20\xcc\xfc\xa7\x0f\x97\x30\xc2\x09\x97\x30\xe3\x36\x83\x5e\x5b\xe4\xec\x0d\x42\x01\x69\x84\x28\x41\x63\xae\xa6\x4e\x79\xc8\xee\xd8\x88\xab\x07\x50\x17\x9e\xea\xe8\x11\x43\x40\xee\x16\x01\x61\x9a\x1a\xbf\x80\x68\x70\xd5\x0d\xc1\xaa\x46\x98\xdb\x50\x73\x9c\xba\xa5\x86\x43\x57\xc9\xbc\x6b\x93\x77\x72\xd9\x02\xc7\x91\xfb\x7c\x7e\xe4\x74\xb4\x3d\x81\x68\x04\x25\xc5\x1c\xf0\xa6\x50\x06\x19\x28\xb9\x80\xa2\x91\xf8\xb7\xcb\xcb\x8b\x06\xd2\x29\x94\x06\xe1\x97\x4d\x4e\xfe\x7c\xf2\x25\x79\x79\xf2\xfa\xe5\xa2\xa3\x7f\x69\xe4\x71\x19\x4a\x70\x94\x18\x84\xbe\xf3\x0e\x4a\x53\x76\xfc\xd2\x33\x41\x67\x48\x8a\x90\x11\x23\x7b\x36\xd8\x9a\x71\x43\x46\x02\x99\xf7\x48\x23\xd1\xc1\x8e\x22\x4a\x42\xf7\xc8\x05\xe7\xb3\xe3\xc6\xfc\x63\x41\x26\x83\x35\xe4\x71\x2e\xe0\x06\xa4\xb2\x20\x91\xa2\x31\x44\xcf\xc3\xca\x2d\x53\xa5\x60\x30\xc2\xc6\xbd\x7c\xc9\xb0\xbf\xba\x76\x8d\x34\x24\x5a\x70\xd4\xe0\xb2\x38\x57\xd2\x1c\x81\xd2\xc0\x2d\xcc\xb8\x10\x40\x89\x33\x9a\x43\xd9\xd4\x20\x7d\x21\x31\x38\x9f\x81\x9d\x71\x8a\xf1\x96\x80\x5c\x0f\xef\x31\x26\x3f\xc6\xe4\xda\xd5\xdf\x26\x26\x0f\x6b\xaa\x6d\x58\x4c\x54\x7e\x6d\x17\xa0\xdb\xe8\x5b\x75\x88\x9a\x0e\x0f\xb0\xd6\x7d\x90\xb5\xde\xda\x03\xa3\x30\xe8\xdd\x17\x78\x56\x97\xf7\x3b\x19\xd9\x01\x81\x9b\xe0\xfb\x1c\x9c\xa4\x55\xdf\x25\x16\x04\x12\xf9\x78\xf1\xe6\x7e\x07\x47\x5b\xb1\x3a\xce\xed\x87\x74\x03\x6b\xef\x92\xfe\xde\x67\x82\xdb\x81\xef\x7c\x2e\xb8\x5b\x44\xd8\xef\xec\xf0\xf0\xf9\x57\x06\xb2\x7a\x9c\xdf\xe3\x60\x70\x95\x9c\xbd\xf7\x5d\x0f\x00\x60\x4b\x28\x2a\x14\xbb\x7f\xf4\xd9\x74\x5c\xee\xd7\x5d\x63\x18\x73\x6d\x2c\xd8\x99\x0a\x8e\x0b\x4b\xac\x42\xa3\x41\x69\x8f\x9c\x80\xce\xaa\xa2\x4e\xfd\x30\x9a\xfb\x85\x41\x28\x32\x18\xa4\x6e\x21\xf4\x49\x8d\x36\x1d\x04\xde\xf3\xe0\xfb\x9b\xc7\xb1\x25\xed\x86\x33\xa4\x44\xa7\x7e\x48\x1e\x80\x25\xb6\x34\xab\x00\x2c\x1c\x3a\xed\x3e\xe1\xb7\x00\x08\x8a\x73\x2b\xee\xa3\xd3\x8d\xfa\xab\xb4\xfe\x39\xc2\xe1\x77\xbe\x22\xd1\x09\x73\x8f\xf7\x23\x1e\xfc\x7e\xc4\xa6\x80\x17\x75\x23\xcc\xd7\xee\x21\xd0\xd2\x61\x90\x47\x51\x5b\x33\xd4\x4a\x59\xff\x33\x2e\x30\xef\xf6\x40\x6d\xd7\xf5\x71\x9f\x11\xcd\x08\x97\x4b\x9d\xae\x71\xbe\xae\xcf\x35\xce\x97\x1a\x73\x19\x46\x94\x9a\x6b\x5e\xa4\x53\xd4\x7c\x3c\x0f\x21\xcc\x05\xe5\x96\xde\xc0\x14\x86\x7d\x9e\x29\x0b\xc7\x73\xa8\x62\xad\x24\xf9\xc2\xbd\x8b\xef\x71\x7b\xea\xdb\x84\xee\x03\xa8\x22\x31\x84\x00\x0c\xad\x1a\xb7\xe7\x25\x8c\x21\x73\xe9\xa7\x6e\xc5\xe5\x27\xa4\x56\xe9\xce\xbe\xd6\x6f\xd7\x7d\x34\x9d\x29\x7d\x2d\x14\x61\x3e\xac\xa6\xf5\xad\x15\x4a\xa4\x4f\x66\x05\x52\x3e\xe6\x94\x08\x31\x07\xcf\x58\x5f\x4d\x20\x3e\xe7\x59\x05\x5c\x32\x4e\x89\x45\xe0\xd6\x40\x73\xe3\x45\x81\x46\x8a\x7c\x8a\xe0\x64\x82\xd5\x64\x3c\xe6\xf4\xab\x12\xdf\x9a\xd4\xb3\x43\x20\xdc\x9c\x33\x56\x5b\xbb\xdf\xff\xf8\xfb\xe9\xd5\xb3\xc1\xa9\xff\x7e\x3a\x18\xdc\xf6\xab\x5f\xa7\x21\x9d\xfc\x60\xf9\xe4\xca\x1f\x79\x49\x31\xf7\xf6\x80\xfa\x4e\x8e\x2f\xe6\x70\x03\x99\x32\x36\x71\x53\x6b\x8d\x01\x03\x9d\x94\xcd\x50\xcf\xb8\x41\x20\x12\xf0\xc6\x6a\x52\x21\xae\x8a\x6c\x6e\xbf\xdc\x6b\xf9\xe9\xf6\x9a\x3e\x36\x55\x91\x6a\x6d\x0e\x4a\x16\x53\xcf\x63\x62\x7c\x4c\x8c\x2e\x31\x3e\xa9\xb6\x16\x4b\xd7\xbc\x43\x8c\xae\xaa\x89\x1f\x42\x93\xf7\x68\xb2\x4e\x08\x0d\xc7\xb9\x69\x81\x3a\xe7\xc6\xd7\xf4\x42\xa7\x28\x1c\xa4\x54\xbf\x6b\xf1\xd5\xbf\x8b\x35\x8a\xc8\xe1\xa8\x7f\x56\xf5\x16\x5f\x69\xa9\x1e\x85\x84\x91\x93\xa2\x6e\xe3\xa6\x41\xa9\xc5\xd9\x42\x75\x9c\xe7\x64\xe2\x32\x8e\x56\x79\xe7\xba\x6f\x32\x7d\x1e\xbf\x88\x4f\xda\x16\x17\xa5\x10\x17\xfe\x8e\x4c\x02\xef\xc6\xbf\x29\x7b\x11\x76\x1e\xbe\x85\x23\x70\x83\xff\xf5\xf1\xeb\xe3\xa1\x9b\x54\x47\xfe\x34\xb3\x95\x79\x54\x5f\xd5\x3a\x6b\xac\xb0\x90\xd3\xa2\xbb\x17\xe5\x87\xf5\x1d\x79\x9f\xab\xdb\xd7\x9d\x9f\xf1\x3c\x17\xbe\x3b\xd1\xad\xa0\x28\x32\x56\x69\x32\xc1\xd8\x1a\x36\x8a\x35\x3a\x21\x5c\xc9\xb3\x5f\xb3\xa6\x45\xd0\x10\xbb\xb5\xc0\xd9\x16\xf1\xff\x0b\x00\x00\xff\xff\x99\x7b\x30\x0d\xcc\x2f\x00\x00")

func stacksPrometheusStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksPrometheusStackYaml,
		"stacks/prometheus-stack.yaml",
	)
}

func stacksPrometheusStackYaml() (*asset, error) {
	bytes, err := stacksPrometheusStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/prometheus-stack.yaml", size: 12236, mode: os.FileMode(420), modTime: time.Unix(1556815486, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksRioAutoscalerStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x8b\xdb\x30\x10\xbd\xfb\x57\x0c\xcb\xc2\xb6\x25\x4a\xb2\x4b\x29\xbb\x82\x1c\xb6\x6d\xe8\x69\x4b\x60\xe9\xb9\x4c\xa4\x89\x2d\x56\x96\x54\x69\x6c\x37\xfd\xf8\xef\xc5\x96\x9d\x8f\x92\x42\x4f\xc6\x6f\xde\x1b\xbd\x99\x79\xca\xbb\x9d\x29\x93\x2c\x00\xb0\x61\x9f\x14\x5a\x12\x19\xec\x31\x00\xe5\x1d\x93\x63\x09\xbf\xc4\xf0\x0f\x40\x0e\xb7\x96\x44\xa6\xb2\x17\x3f\x28\x7a\x09\x1c\x1b\x1a\x09\x35\x7e\x1f\xab\x4d\x10\x11\x99\x24\xdc\x2e\xc7\x5a\xdf\x0e\x8d\xa3\xd8\x3f\xa2\x9a\x18\xc9\xa9\xbd\x60\x8c\x25\xb1\x08\x14\x15\x39\xc6\xb2\x57\xcc\xff\x4b\xa2\x69\x87\x8d\x65\x09\xb7\x23\x3b\xf1\xe0\xae\x33\x4e\xfb\x4e\xc2\xbb\x65\x1a\x0b\x01\x9d\x51\x47\x7c\x82\xd9\xa8\x17\x61\x1c\x53\x6c\xd1\x4a\xb8\x9b\xf0\xb3\xf1\x04\x57\x91\x52\xe5\xad\x96\xf0\xb6\xbe\xc8\x28\x23\x2a\xea\x27\x30\x5e\x4b\xb8\xab\x8b\x22\x51\x6c\x8d\xa2\xf3\xdd\xc6\xbc\x55\x6d\x52\x6f\xf3\x39\x53\x9e\x28\x55\x27\x1b\x2c\xad\xdf\xa2\xfd\x1a\x28\xd6\x26\x25\xe3\x5d\xca\x22\x01\x37\x6f\x20\xdf\xa6\xc6\x90\x6e\x8e\x20\xb5\xe4\xf8\x00\x94\xc4\x33\x6b\x12\xcf\x9a\xa0\x91\x69\xd6\x21\xab\x6a\xa6\xc9\x12\x13\x44\xe3\xe7\x0a\x99\x2d\xcd\x8d\x5f\x4c\x1e\x4f\x94\x99\x7d\xa2\x3f\x9a\x9f\x5f\x16\x0f\x73\x91\xf2\x75\x4d\x4e\x23\xf7\x86\x2f\xf6\x83\xe0\x75\xfa\xdb\x63\x2e\x8f\x2f\x91\xd3\xc1\x1b\xc7\xff\xd0\x9f\xb9\x35\xf5\x90\x93\xc4\xd1\xbb\xb2\xf6\xee\x85\xf6\xb7\x0f\x0f\x77\x8b\x68\xbc\x38\x59\xb7\xa6\xf6\x48\xdf\x34\xd6\x6e\xbc\x35\x6a\x2f\x01\x6d\x87\xfb\xdc\x2a\xf8\xc8\x87\x1d\xdf\x2f\x17\x15\x73\x98\x0d\x99\x70\x68\x57\x87\xbb\x60\x2c\x0f\xac\xf3\x57\x26\xbb\xc8\xd4\xe1\x7e\xfc\x13\xa2\x37\x4d\x6e\x3a\xd3\xfd\x32\x1f\x88\x5c\x3b\x75\xf9\xfc\xf8\xb4\x7e\xde\x3c\x7e\x58\xaf\xae\x5f\x25\xb2\xbb\x85\xc3\x9a\x52\x40\x45\xaf\x47\xc6\xc7\xf5\xfb\x2f\x9f\x56\xd7\x3f\x87\xef\xef\xa2\x60\xaa\x83\x45\xce\xa9\xfa\xd6\x50\xe2\x29\x1f\x02\x5a\x8c\xa6\x4f\x95\xcc\xaa\x1c\x34\x4a\x2a\x9a\xd0\xb3\x24\x5c\x75\x15\x71\x45\x11\xd8\x03\x37\xd1\x81\x77\xa0\x69\xdb\x94\x57\xc5\x9f\x00\x00\x00\xff\xff\x04\x89\x8d\x1e\x08\x04\x00\x00")

func stacksRioAutoscalerStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksRioAutoscalerStackYaml,
		"stacks/rio-autoscaler-stack.yaml",
	)
}

func stacksRioAutoscalerStackYaml() (*asset, error) {
	bytes, err := stacksRioAutoscalerStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/rio-autoscaler-stack.yaml", size: 1032, mode: os.FileMode(420), modTime: time.Unix(1557340957, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksRioControllerStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\x5d\x6b\xdb\x4c\x10\x85\xef\xfd\x2b\x86\xf0\x42\xe0\x85\xb5\x71\xaf\x9a\xbd\x73\x12\x13\x0a\x69\x6a\x1c\xd2\xdb\x32\x5a\x4d\xec\xad\x57\xbb\x62\x76\x57\xad\xdb\xe6\xbf\x17\x7d\xb9\x96\xa2\x28\x0e\x44\x57\xfb\x71\x66\xe6\xe1\x1c\xed\x2e\x26\xc4\x96\x02\x79\x39\x01\xc8\xd0\xea\x47\xf2\x41\xc2\x1f\x31\x01\x00\xc0\x5c\x7f\x25\xf6\xda\x59\x09\x9c\xa0\x9a\x62\x0c\x5b\xc7\xfa\x17\x06\xed\xec\x74\xf7\xd1\x4f\xb5\x9b\x15\xf3\x4a\xbc\xd3\x36\x95\x70\x65\xa2\x0f\xc4\x6b\x67\xa8\x3a\xcd\x28\x60\x8a\x01\x65\xb5\x03\xb0\x98\x91\x04\xd6\x4e\xa8\x5a\x29\x30\xcd\xb4\xad\x6e\x39\x9a\x1a\x04\x40\x94\xb3\x6f\xd8\xc5\xdc\xb7\x95\x02\xce\xff\x3f\x6f\xd6\x4c\xde\x45\x56\x34\x78\x59\x10\x27\x03\x17\x02\xac\xb3\xeb\xa6\xf0\x61\x7d\xfb\xa6\x5a\xf1\x1e\x86\x5c\x6a\x9b\x6a\xbb\x79\xcd\x17\x67\x03\x3b\x63\x88\x45\x72\x54\xc0\xce\xd0\x9a\x1e\x5b\x7d\x6b\xcf\x08\x47\xa3\x1c\xce\x65\x3c\x09\x1f\x93\xef\xa4\xc2\x21\x8c\xba\xc7\x3d\x71\xa1\x15\x2d\x94\x72\xd1\x86\x31\x70\x5f\x2b\xf1\x99\xd2\xe7\xa8\x48\xc2\x7f\xbf\xef\x16\x9f\x97\xf7\xab\xc5\xd5\xf2\xe9\x45\x83\x3b\x36\x0e\xcc\x3e\xc9\xc2\x77\x21\xa1\x9f\x81\x6c\xb9\xf4\xb3\x62\x9e\x50\xc0\x63\xb2\x6b\xca\x8d\xdb\x67\xf4\x06\xaa\x13\x30\x7c\x4e\xaa\x6d\xe1\xc9\x90\x0a\x8e\xdb\x7d\xf9\x52\x83\xda\xde\x62\x42\xc6\xff\x3b\x84\xde\x14\x09\x67\x81\x23\x9d\x35\x82\x40\x59\x6e\x30\xd0\x51\x97\x1e\x6a\xf9\x99\x67\x4d\x5f\x69\xdb\x45\xad\x71\x8f\xa3\xba\x3b\x39\x95\xf2\x2b\x35\xa8\x2d\x71\x07\x41\x80\xce\x70\x43\x12\x52\xd4\x7e\x8b\x76\x7e\x71\xf1\x61\xd6\xa3\x4a\xa9\xe8\x40\x57\x15\xab\x68\xcc\xca\x19\xad\xf6\x12\x16\xe6\x07\xee\x7d\x47\x33\x92\x4d\xf3\xca\x78\xd3\xf3\x42\x8c\xc9\xc9\x16\x7d\x75\x3d\x62\xfd\xe9\xcb\xb7\x43\xc0\x1d\x05\x40\x81\x26\x0e\xfd\x01\x43\x3d\xae\x97\x97\x0f\x37\x2f\xd5\x1f\x04\x4f\x93\xc9\xdf\x00\x00\x00\xff\xff\x0f\xfc\x13\x3f\xd9\x05\x00\x00")

func stacksRioControllerStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksRioControllerStackYaml,
		"stacks/rio-controller-stack.yaml",
	)
}

func stacksRioControllerStackYaml() (*asset, error) {
	bytes, err := stacksRioControllerStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/rio-controller-stack.yaml", size: 1497, mode: os.FileMode(420), modTime: time.Unix(1556901360, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"stacks/build-stack.yaml":           stacksBuildStackYaml,
	"stacks/cert-manager-stack.yaml":    stacksCertManagerStackYaml,
	"stacks/grafana-stack.yaml":         stacksGrafanaStackYaml,
	"stacks/istio-stack.yaml":           stacksIstioStackYaml,
	"stacks/istio-telemetry-stack.yaml": stacksIstioTelemetryStackYaml,
	"stacks/kiali-stack.yaml":           stacksKialiStackYaml,
	"stacks/localstorage-stack.yaml":    stacksLocalstorageStackYaml,
	"stacks/mesh-stack.yaml":            stacksMeshStackYaml,
	"stacks/nfs-stack.yaml":             stacksNfsStackYaml,
	"stacks/prometheus-stack.yaml":      stacksPrometheusStackYaml,
	"stacks/rio-autoscaler-stack.yaml":  stacksRioAutoscalerStackYaml,
	"stacks/rio-controller-stack.yaml":  stacksRioControllerStackYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"stacks": &bintree{nil, map[string]*bintree{
		"build-stack.yaml":           &bintree{stacksBuildStackYaml, map[string]*bintree{}},
		"cert-manager-stack.yaml":    &bintree{stacksCertManagerStackYaml, map[string]*bintree{}},
		"grafana-stack.yaml":         &bintree{stacksGrafanaStackYaml, map[string]*bintree{}},
		"istio-stack.yaml":           &bintree{stacksIstioStackYaml, map[string]*bintree{}},
		"istio-telemetry-stack.yaml": &bintree{stacksIstioTelemetryStackYaml, map[string]*bintree{}},
		"kiali-stack.yaml":           &bintree{stacksKialiStackYaml, map[string]*bintree{}},
		"localstorage-stack.yaml":    &bintree{stacksLocalstorageStackYaml, map[string]*bintree{}},
		"mesh-stack.yaml":            &bintree{stacksMeshStackYaml, map[string]*bintree{}},
		"nfs-stack.yaml":             &bintree{stacksNfsStackYaml, map[string]*bintree{}},
		"prometheus-stack.yaml":      &bintree{stacksPrometheusStackYaml, map[string]*bintree{}},
		"rio-autoscaler-stack.yaml":  &bintree{stacksRioAutoscalerStackYaml, map[string]*bintree{}},
		"rio-controller-stack.yaml":  &bintree{stacksRioControllerStackYaml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
