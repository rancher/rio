// Code generated by go-bindata.
// sources:
// stacks/build-controller-stack.yaml
// stacks/build-stack.yaml
// stacks/cert-manager-stack.yaml
// stacks/coredns-stack.yaml
// stacks/grafana-stack.yaml
// stacks/istio-crd-stack.yaml
// stacks/istio-stack.yaml
// stacks/istio-telemetry-stack.yaml
// stacks/kiali-stack.yaml
// stacks/localstorage-stack.yaml
// stacks/nfs-stack.yaml
// stacks/prometheus-stack.yaml
// stacks/rio-autoscaler-stack.yaml
// DO NOT EDIT!

package stacks

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _stacksBuildControllerStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\xfb\x6f\xe3\x36\x12\xfe\x3d\x7f\x05\x21\x2c\xd0\x6b\x11\xd9\x7a\x5b\x12\x10\xe0\xd2\xc4\xbd\x0b\xf6\x91\xc5\x26\xbd\x43\x51\x14\x01\x45\x8e\x64\x9e\x25\x52\x20\x29\xef\xee\x6d\xf3\xbf\x1f\x48\x49\x7e\xdb\x8b\xeb\x3e\xf2\x43\x20\x71\x3e\x7e\xfc\x66\x86\x33\x34\x45\x04\x2f\x59\xa5\xf2\x0b\x84\x6a\x51\x55\x8c\x57\xe6\x11\x21\x22\xb8\x06\xae\x73\xf4\xa7\x6b\xdf\xad\xb9\x86\x15\xd4\x13\x63\x92\xa2\xae\x41\xe6\x88\xf1\x52\x0c\xf6\x6d\x84\x04\xaa\x5c\xc6\x99\x3e\x85\xa8\x98\x3e\x6b\x7f\x0f\xc5\x42\x88\xe5\x9e\xf9\xbf\xb8\x75\x8d\x4a\x90\x6e\xaf\x3b\x47\x7f\xae\x8d\x08\x7d\xda\x7a\x46\xc8\xb1\x4c\x4e\x8e\x1c\xc3\xe1\x5c\xee\x1a\xa9\x31\x8a\xb6\x01\xae\x9d\x1c\x95\xb8\x56\xb0\x87\x50\xb8\x69\x6b\xc6\x2b\x27\xdf\x23\x46\x86\x91\x69\x86\x0d\xb9\xef\x79\x97\xfb\x56\xbd\x00\x09\xb8\xd4\x20\x7b\xc0\x8e\xfd\x79\x6f\x19\xd1\xe9\xb6\xd3\x6f\xb1\x5e\x28\x27\x47\xbf\x3b\x4a\x53\xd1\x69\xe7\x8f\x3d\x18\x48\x29\xe4\xfd\x21\x16\xa4\x3c\xc4\x72\x22\x68\xaf\xdc\xf9\x8f\x12\x7c\xdf\x77\x6b\x07\x79\x63\x43\x78\xcc\x3d\xcd\x1a\x78\x09\x1f\xcd\x7c\xe7\xc0\x3b\x1b\xd6\xc1\xda\x87\xf8\x00\xc2\xf1\x7a\x7e\x9f\xae\x43\x08\xc1\x66\x03\x0d\xa0\xfe\xe5\x10\xd4\x80\x52\xb8\x1a\xa9\x1a\x55\x1d\x42\x94\xc6\x64\xa9\x25\x26\x23\x6a\x33\x70\x44\x3a\xe3\x30\xe7\x63\x68\x4e\xb8\x36\xef\xa3\x73\x1c\x61\x22\x73\x16\x40\x3b\x89\x35\x13\xfc\x2c\xa8\xf7\x77\x1b\xb2\xbb\x45\x2e\xb6\x9f\x15\xc8\x15\x23\x60\x4b\xb4\xe8\x58\x4d\xdd\xad\x02\xb4\xc8\xaa\x16\x05\xae\x9f\x5a\x90\x0d\x53\x8a\x09\xae\xfa\x71\x17\xfd\xf0\x13\x6a\x05\x55\x3f\x6c\x5e\x4d\x6a\x54\x8b\x09\x6c\x0f\x2a\x20\x12\xf4\xf6\x08\xac\x80\xeb\x5d\x88\x55\x81\x09\x11\xdd\xae\xa5\xaf\xc4\x06\xb7\x3b\xf3\x3f\x98\xee\x61\xa4\x4c\x29\xb4\xb5\xf8\xd8\xec\xf0\x11\x09\x58\xc3\x65\x05\xfa\xb2\x66\x4a\x5f\xbe\xc7\x9a\x2c\x2e\x5b\xfb\xbf\x6b\xa9\xb1\x51\xa8\x41\x43\xef\xf1\x64\xc9\xb1\x66\x2b\x98\x50\x58\x4d\xed\xc8\xd7\xa4\x9a\x2a\x8d\x75\xf7\x15\x19\x35\x34\x6d\x8d\x35\x7c\x1d\x4a\x52\x77\x4a\x83\x3c\xc1\xfc\x13\x22\x98\x2c\x18\xaf\x26\x8c\x6b\x90\x1c\xd7\x3b\x93\x59\x83\xab\x1d\x34\x6e\x99\xcd\x8d\xdd\x26\x93\x65\xaa\x26\x4c\x4c\x49\xa7\xb4\x68\x24\x28\xd1\x49\x02\x14\x4a\xdb\xdf\x04\x1f\x26\x5a\x92\x1c\x55\x44\x1a\xf0\x40\xef\x4a\xa8\x01\x2b\x50\xd3\x8a\xe9\x45\x57\x4c\x88\x68\x46\x5b\x1f\x86\x29\x69\xe8\x74\xb3\x57\xff\xae\x16\x38\x88\x93\x3c\x21\x99\x1f\x86\xa9\xef\xc1\x2c\x26\x5e\x3c\x83\xc4\x4b\xa3\x32\xa6\x24\x89\x8b\x84\xc4\x31\x29\xb2\x14\xa2\x20\xc9\x82\x32\x8a\x83\xc8\x2f\x53\xea\x79\x41\xe8\xc5\x5e\x19\xcc\x0a\x9c\x8d\xc7\xd3\x78\x6c\x19\xc7\xc6\xa3\x6b\x0a\x9a\x4c\x7b\x9b\x3b\x8c\x59\x04\xf0\x15\x93\x82\x9b\x4d\x38\x4e\x79\xf8\xed\xe1\x71\xfe\xfa\xe9\xcd\xf5\xeb\xf9\xc3\xdb\xeb\x9b\xf9\xd5\x8b\x4f\xeb\xe7\xe7\x61\x8d\xa6\xc1\x9c\x8e\x13\x0c\xa1\x16\x7d\xcb\x1d\x87\xfa\x37\xbd\x90\xa0\x16\xa2\xa6\xc3\xf0\xdd\x9b\x5f\xee\x47\xc4\x70\x14\x9a\x08\x0e\x43\x7f\x2d\x8c\xeb\x13\x75\x0c\x63\x10\x14\x21\xce\x66\x3e\x09\xa9\x4f\xe3\x38\xc8\x08\xf6\x93\x32\x29\x12\xea\x27\x69\x81\xbd\x90\xf8\x65\x58\x90\xc2\x9b\x45\x51\x30\xf3\xcb\x32\x4d\xd3\x20\x9c\x45\x25\x0d\x8b\xa4\xa4\xc5\x28\xd0\x9e\xc4\x5f\x2a\x6f\x3c\xce\x47\x71\x90\x94\x25\x0e\x70\x16\x04\x84\x02\x8e\x63\x1a\xfb\x34\x4d\xa2\xb4\x88\x8d\x9e\x30\xa6\x71\x9c\xa5\x50\x14\xc9\x2c\xcd\xd2\x28\x23\x91\x9f\x7a\x01\x85\x24\x84\x59\x18\x44\x43\x8e\x5d\xe4\x72\xd1\x7e\xb9\x38\x2e\xda\x51\x57\xe6\xc7\xb4\x48\x13\x8f\xfa\x45\xe9\x7b\x7e\x18\x04\x65\x18\x17\x5e\x02\x59\x12\x62\x9f\x12\xe2\x79\x90\x11\xbf\x00\x00\x52\x62\x0c\x65\x12\x7b\xb4\x88\x20\x8a\xc3\x24\x82\xc4\xbf\xb8\xb8\xb8\x58\x76\x05\x48\x0e\xba\xef\xc8\xeb\x7e\x4a\x9f\xfa\x2a\x7a\x1a\xcb\xe8\x69\xab\x8e\x0c\xd2\x45\x3f\x1b\x49\x8f\x43\x09\x4f\x0e\x2b\x7d\xe5\xe3\xba\x5d\x60\xdf\x82\xef\x8c\xdb\x93\xb3\xc5\xbd\x85\xff\xec\xda\x37\x7d\x17\xf9\x3f\x24\x6c\x79\xd6\x60\xce\x4a\x50\x9b\x5f\x83\xb8\x65\xff\x02\x69\x7a\x48\x7e\xbe\xff\x6c\xf1\x21\xb4\x64\x9c\xe6\xbd\x63\xf6\xbd\x01\x8d\x29\xd6\x38\x1f\xce\x3b\xb3\x62\x8e\x36\x5b\x7d\x6b\xd8\x0a\xc9\xd1\x98\x78\x2b\xdc\x9a\x55\x0b\x64\x9c\xff\x45\x7d\xea\x1b\x15\x98\xfb\xed\x03\x36\x16\xdf\xf7\x0c\xd7\xb7\x29\xf8\xef\x11\x2c\xa2\xdc\x12\x34\x59\x80\xfc\xb2\x78\x91\x5a\x74\xb4\x47\x82\x54\xd3\x7d\xde\xef\xe1\x0b\x17\xed\xf7\xcc\xf9\xd7\xec\xa3\xa7\x42\x74\xb6\x23\x8d\x71\x39\xd6\xcb\xce\x84\xc9\x72\x2e\x87\xfa\xd8\x0e\x46\x8b\x25\x6e\x40\x83\x54\xe3\x88\x3b\x4c\xb9\x7b\x7d\xfd\x8f\xf9\xfa\x57\x38\x05\x45\x24\x6b\xb5\x55\xf8\x6f\x73\xb9\x43\x5a\xa0\xb6\x2b\x6a\xa6\x16\x48\x2f\x00\x49\x50\x5d\xad\x19\xaf\xd0\xe6\xb4\xda\xb0\xdd\xde\xdf\xbc\x9c\xbf\xfb\xe5\xee\xd5\x09\xca\xc7\x05\x58\x24\x12\xa5\x65\xbb\x15\x64\x09\xb2\x64\x35\x6c\xe1\x4b\xdc\xd5\x3a\x47\xce\xc6\xe8\xec\x2d\xf3\xf6\xd7\x87\x7f\x9e\xd4\x6c\xee\xa4\xa8\xed\xd4\x02\x09\x89\xb8\xd0\x47\x98\xb5\xec\x0e\x38\x6f\xef\xde\xcd\x6f\x1e\xef\xdf\xfd\x76\x5a\x39\x65\x12\x88\x16\xf2\xa3\xfd\x66\x80\x19\x37\x61\x30\x6e\xe0\xb6\x3d\xb2\xca\xf4\xbd\x90\x4b\xbb\x57\xf7\xd7\xfa\xf9\xd7\xbb\x57\xb7\x2f\xef\x1e\x9f\x6e\x5e\xdd\xcd\xdf\x3c\x3e\x9d\x49\xc2\x7e\xc4\xec\x56\x78\xc9\x34\x22\x35\x03\xae\xd1\xdf\x6c\xce\x89\xae\x7f\xdc\x49\xc8\xb6\x8e\x46\x14\x1f\xa7\xe3\xd6\xc8\x57\xde\x24\x9c\xf8\xae\x14\x42\xd7\xa0\xd4\xfa\x0c\x88\xbc\x19\x21\xb3\x32\x88\xc0\x8f\x23\x3c\x2b\x92\x2c\xcb\x66\x19\x99\x11\xa0\x69\x9a\xa4\x5e\x4c\x30\x49\x66\x59\xe0\xf9\x49\x46\x09\x14\x84\xe0\xcc\x4f\x92\x28\x0b\x01\x82\x22\x39\xe9\xe2\xed\xf5\xfc\xf5\xfd\x9b\xa7\xeb\xdb\xdb\x77\xf3\x87\x87\xd3\x4e\x62\x4a\x25\x28\x75\xe0\x27\xc5\xd0\x08\x3e\xf8\xb9\x64\x9a\xfe\x38\xde\xd0\x8e\x25\x96\xb4\xf9\x74\xed\x2b\xcd\xfd\x20\x8c\x46\x65\x4a\x43\x7b\xb0\xfd\xfb\x6b\x26\xe6\xd4\x35\x3b\x66\xcd\x38\x34\x8f\x17\x2f\x3e\x1d\x4d\xd5\xe6\xda\x6a\x52\xcc\x78\x75\xcb\xa4\x45\xaf\x37\xd1\x06\x31\xfe\xb6\x46\xbf\x3b\x63\xaa\x9c\x4b\xe4\xb8\xae\x71\xf8\x6a\x7b\x85\xdd\x48\x3d\x1b\x94\x9d\x71\x70\xab\x36\x7f\x8e\xeb\xb6\x52\x54\x26\x64\x57\x6d\x8d\xd9\xfe\xa7\x8f\x35\xaa\x94\xf6\xfb\x16\xbd\xa2\xeb\x72\x9a\xac\xbc\xcf\xa1\x5d\xd1\x6a\x23\xc0\xc0\x4d\xa4\x8c\xd0\x4d\x71\x3f\x9f\x9a\x5e\x0b\x82\xad\x7b\xf6\xa3\xda\x07\x7d\x35\xe9\x7d\x5d\x8f\x6f\x44\x18\xd3\x71\x12\xf8\xd0\x0a\xa9\x41\x5e\xd9\x2c\xf4\x04\xe3\xd8\xa8\x6b\xd4\xd4\xa7\xe3\x38\xc6\x64\xd4\x60\x4c\xb7\x78\x76\xfe\xf8\x5f\x00\x00\x00\xff\xff\xf3\xc6\x0c\x82\x00\x14\x00\x00")

func stacksBuildControllerStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksBuildControllerStackYaml,
		"stacks/build-controller-stack.yaml",
	)
}

func stacksBuildControllerStackYaml() (*asset, error) {
	bytes, err := stacksBuildControllerStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/build-controller-stack.yaml", size: 5120, mode: os.FileMode(420), modTime: time.Unix(1552071551, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksBuildStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\x4d\x6f\xda\x40\x10\xbd\xf3\x2b\x56\xb9\x44\x8a\x6a\xaf\x13\x38\x94\x95\x72\x88\x12\xda\xa2\xf6\x80\x88\x2f\x39\xa1\x65\x3d\x75\x46\xac\xbd\xd6\xcc\xe0\xc4\xff\xbe\xb2\x61\x0d\x48\xb4\x52\xe5\x8b\xfd\x3e\xf6\x8d\x67\x1f\x03\xb5\xe8\x80\xcd\x44\xa9\xed\x1e\x7d\xb1\x43\xe9\xdf\x95\xc2\xca\x96\x60\x54\x15\xb6\x9d\x1e\x99\x36\x4b\xa7\xe9\x74\xe0\x5d\xa8\x2a\x5b\x17\x07\x71\xa2\x92\xc4\x16\x05\x1d\x3f\xc4\x35\x46\xeb\x2c\x1d\x1e\x33\xcf\xb2\xfb\x81\x80\xcf\x26\x30\x44\x47\x0f\x0f\x9c\x16\xd7\x7c\x89\x11\x03\xd9\x10\xb6\xe8\xa1\x84\xc2\x28\xa1\x3d\x4c\x94\x22\x28\x91\x85\xba\x8b\xe1\x46\xf0\x61\x40\x19\x1c\x81\x70\x0c\x20\x0c\x89\x03\x12\x36\x1a\xc4\xe9\x28\x3e\x8c\x52\xb7\x51\xb6\x5e\x7c\x5f\xbe\xe6\xeb\xb7\xcd\x8f\x3c\x5f\x6d\x9e\x5e\x5e\xd6\x8f\x71\xf2\xd9\x6c\x7a\x55\x94\xff\x7a\xdd\x3c\x2f\xd6\xf9\xf2\xdb\xf2\xf9\x29\x5f\x3c\x5e\x9c\xaf\xc7\xdc\x44\x3c\xa7\x8e\xe4\xaf\x67\xfc\x5c\xbc\xfd\xd3\xbb\x83\xee\xca\xe2\x66\xb3\x69\x3f\xd9\xb0\xb6\xb3\x9f\xfa\x80\xed\x7b\x08\xbb\x83\xaa\xf4\x61\x6b\xfd\xa6\x01\xaa\x90\x19\x43\x3d\x6e\xe5\xe6\x2e\x2a\xb1\xb6\x12\x28\x25\x0c\xa9\xb3\x22\x1e\x52\x0c\xba\x44\x39\xd2\x04\x0e\xb0\x05\xe2\x9b\xff\x75\xc2\x27\xb8\xbd\xf4\xa1\xd1\x7a\x7b\xa7\x5c\xa8\x7f\x63\x59\xd9\x86\x6f\x4f\x20\xb4\x50\xcb\x08\x1c\xef\xef\xfc\x86\x0b\x8b\xfc\x6e\xeb\xfb\xf9\xfc\x41\x5f\x84\x9b\x02\xda\x6b\x3d\xbc\x10\x8d\xdd\xf4\xc8\x02\xf5\x50\x51\x60\x3e\xc2\xe6\x6b\x36\xcf\x4e\x61\xab\xbd\xf7\xab\xe0\xd1\x75\x46\x59\xff\x61\xbb\x83\xae\x09\x74\xaa\x54\xef\xe8\xf7\x3e\xf9\x13\x00\x00\xff\xff\x8c\x86\xd3\x96\x38\x03\x00\x00")

func stacksBuildStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksBuildStackYaml,
		"stacks/build-stack.yaml",
	)
}

func stacksBuildStackYaml() (*asset, error) {
	bytes, err := stacksBuildStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/build-stack.yaml", size: 824, mode: os.FileMode(420), modTime: time.Unix(1552071551, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksCertManagerStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x6b\xdb\x40\x10\xc5\xef\xfa\x14\x83\x5b\x08\x04\xd6\x21\xb7\xa2\x9b\x31\x26\xe4\x90\x36\x84\xde\xc5\x7a\xf5\xac\x2c\xd9\x3f\xea\xcc\xac\x5b\x53\xfa\xdd\x8b\x25\x39\x56\x69\xc0\x3e\xee\x9b\xdf\xcc\xee\x9b\xb7\x02\xde\x7b\x07\xa9\x2b\x22\x07\x56\x13\x6d\xb2\x1d\xf8\x78\x26\xea\x42\xde\xda\xd0\xf4\xe0\xe8\x45\x7c\x4e\x32\xea\x86\x6e\x6e\x07\x7c\xa2\x97\x6f\x5f\x64\xe9\xf3\xdd\xed\xcd\xb9\x8c\x5f\x8a\x34\xf4\xdc\xf9\xd4\x31\x44\x20\xb3\xb2\xcb\x69\xe7\xbb\x68\xfb\xb9\x28\x70\x0c\x9d\x2b\xd8\x23\xe9\xbf\xc8\xf8\xe0\x99\xd4\xe7\x76\x3a\xfa\x68\x3b\xd4\xf4\xf9\xf7\x7a\xf3\xf2\xbd\x79\x5a\x7d\x5d\x3d\x6c\x5e\x9a\xc7\xa7\xd5\xc3\xe6\xcf\x19\x78\x2e\x21\x3c\xe7\xe0\xdd\xa1\xa6\x55\xf8\x69\x0f\x32\xd4\x5c\x8e\xd1\xa6\xf6\xe4\x70\xbe\x8d\x49\x32\x26\xc0\xb6\x60\x83\x00\xa7\x3e\x27\x93\x6c\x84\xf4\xd6\x61\x22\xd8\x67\x23\x07\x51\xc4\xf7\x16\x17\x8a\x28\xd8\x30\x24\x17\x76\xb8\xa6\x27\xe4\x4e\xb3\x68\x0b\x3e\x5d\xbd\x50\x2e\x58\x54\xd5\x5b\xd9\x82\x13\x74\x4c\xec\x7d\x54\xdb\xb8\x22\x9a\x63\x73\xba\xa5\x69\xb1\xf3\xc9\xeb\x29\xb3\x4f\x83\x1f\x3a\xfb\x31\xf4\x28\x52\xc0\xcb\x0f\x62\xdc\xdf\xdb\xd0\xbf\xda\xfb\x01\x5b\xbf\xda\x10\x90\x3a\x5c\x24\xbf\x71\x7b\xcd\x3c\xb0\xfa\x9d\x77\x56\x2f\x4d\xbc\x60\xc9\xd0\x7a\x5c\xed\x15\x46\xaa\x1f\x05\x32\x75\x1a\xda\x5b\xf6\x76\x1b\x50\xd3\xff\xff\xa4\x22\x6a\x21\x8e\x7d\x7f\xc4\x6b\x5a\xcc\xf7\x36\xfe\x1f\xd2\x4c\x45\x8e\x69\xfc\x0d\x00\x00\xff\xff\x22\x78\xed\xc4\x3e\x03\x00\x00")

func stacksCertManagerStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksCertManagerStackYaml,
		"stacks/cert-manager-stack.yaml",
	)
}

func stacksCertManagerStackYaml() (*asset, error) {
	bytes, err := stacksCertManagerStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/cert-manager-stack.yaml", size: 830, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksCorednsStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x52\xcd\x6e\x1b\x3d\x0c\xbc\xe7\x29\xf8\x00\xde\x1f\x7f\xfb\xb9\x8d\x75\x6c\xea\x43\x2e\x41\xd0\x16\xbd\x1a\x8c\x44\x5b\x42\xb4\x92\x40\x6a\x9d\x18\x6d\xdf\xbd\x90\xd7\xeb\x6e\xe3\x46\x17\x91\x9c\x91\x48\xcc\x50\xc7\xb0\x73\x7b\x51\x37\x00\x25\x2c\xf7\x29\xca\x14\xb2\x82\x9f\xd5\x29\x07\xa8\xd5\xaa\x83\x1f\xe7\xa4\x1c\x62\x8e\x2c\xb3\x82\x25\xf4\xd9\xce\x0a\xec\xe2\x2c\x7b\x1e\x9e\x88\x03\x65\x12\xd0\x7e\x90\x4c\x5c\xfb\xa8\xd1\x83\x0b\x15\x1a\xc3\x35\x72\x42\x70\xe9\xc3\x18\xcc\x5b\x95\x93\xa2\x11\x70\x41\x48\x0f\x4c\x6f\xb0\x21\x49\x66\xc2\xfe\x4d\x79\x87\xde\x67\xcb\x71\xd8\xdb\x7f\x37\x99\xf1\x7f\xcd\xe2\xc4\xb1\xa7\x6c\x69\x10\x50\xeb\xe5\xaa\xfb\x1b\x7a\x3d\x42\x0d\x0d\x65\xdd\x30\x49\xf4\x87\xba\xa8\x36\xa3\x68\xd4\x96\xa0\x6b\x6f\xa6\x8f\x85\xf8\xe0\x34\x9d\x15\x66\x32\x41\x46\x91\x4b\x00\x36\x4a\x1e\x25\xc7\xb4\x45\x63\x14\x3c\x6c\xbe\x6d\x3f\xdd\x3f\x7c\xde\x7e\xdd\x7c\xf9\x7e\x7f\xb7\xb9\xa0\x86\x63\x52\x80\xde\x9f\x2d\xea\x7b\x0c\x66\xfc\xaa\x82\xea\x32\x46\x35\x4e\x77\x6e\xd5\xdc\x45\xa6\x9d\xf3\x34\xf9\x3a\x99\x5d\x88\x27\xc3\xdf\x67\xd3\x6b\x8a\x42\x13\x79\xd9\xd6\xff\x77\x75\x5b\x2f\x5b\xb5\xea\xd4\xaa\x6b\x06\x93\x16\x26\xc8\x3b\x70\x81\xaa\xac\xd3\x19\x2e\x42\x2e\x7a\xca\xec\xf4\xf8\x62\xef\xe3\x13\xfa\x6d\x22\xee\x9d\x88\x8b\xe1\x32\x95\x77\x92\x17\x2f\x98\xb5\x05\x0a\x26\x45\x17\xb2\x5c\x43\x93\xac\xd7\x48\x59\x95\xeb\x6a\xc0\x9e\x24\xe1\xf4\x62\xdc\x56\x6d\x49\x3f\x2b\xb0\x39\x27\xd5\x34\xa7\x7d\x2c\x86\xa8\xdb\xf6\xb6\x6d\x66\x0b\xed\x7a\xdc\x93\x02\x83\x4e\x2c\x86\xe5\x7a\xfd\xdf\xa4\x98\x32\x74\xf8\x43\x79\x1c\xbc\x7f\x8c\xde\xe9\x63\x31\xea\x05\x8f\x63\xb3\x9e\xfa\xc8\x47\x05\x1f\xdb\x71\x47\x99\xd0\x6c\x63\xf0\x47\x05\x99\x87\x51\x6c\xd1\xe8\x49\xc1\xf2\xe6\x77\x00\x00\x00\xff\xff\xe3\x5b\x17\xd0\x91\x03\x00\x00")

func stacksCorednsStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksCorednsStackYaml,
		"stacks/coredns-stack.yaml",
	)
}

func stacksCorednsStackYaml() (*asset, error) {
	bytes, err := stacksCorednsStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/coredns-stack.yaml", size: 913, mode: os.FileMode(420), modTime: time.Unix(1551893106, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksGrafanaStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x93\x51\x6f\xda\x30\x10\xc7\xdf\xf9\x14\xf7\x05\x5a\xd3\x4d\x7b\xc0\x12\x0f\xee\xa0\x2d\x52\x07\x08\xe8\xa4\x3d\x45\x47\x72\x01\x4f\x8e\x1d\xd9\x4e\x56\xa4\x7d\xf8\xc9\x21\xc4\x69\xa8\x3a\xf5\x2d\xdc\xfd\xef\xec\xff\x8f\xbf\x53\xa3\x73\x79\x70\x7c\x04\x70\xb0\x98\xa3\xc6\x9b\x0c\xdd\x71\x6f\xd0\x66\xa5\x35\xb5\xcc\xc8\x36\x5d\x80\xd4\x68\x4f\xda\x73\xf8\xdb\xfc\x04\xc0\x52\xfe\x24\xeb\xa4\xd1\x1c\xee\xda\xda\x60\x06\xe0\x06\x32\xe9\x70\xaf\x68\x46\x8a\x7c\xa3\xcd\x51\x39\x6a\xdb\x00\xb9\x51\x19\x59\x0e\xd2\x79\x69\xba\xaa\xc6\x82\x86\x35\x53\x86\xf9\x6e\x73\x73\x1c\xfa\x23\x07\x56\xa3\x65\x4a\xee\x59\x6b\x81\x75\x16\x1c\x1b\xac\xb0\x87\x45\x16\x6f\x0b\xe0\x4f\x25\x71\xc8\xa5\xa2\x37\x04\x3c\x3a\x53\xd9\x94\x3e\x63\xfd\x6a\x2a\x98\xc7\x34\x25\xe7\x78\xe0\xf2\x7a\xea\x4e\xa5\x4c\xfa\xc0\x84\x83\xb7\x55\x44\x21\xdd\x8c\x72\xac\x94\x1f\xd4\x7f\x3b\xa3\x67\xe8\xb1\xef\xdc\xcb\x82\x16\xda\x93\xad\x51\x71\xf8\xe6\x06\xe4\xd6\xd6\x14\xe4\x8f\x54\xb9\xff\x79\x2f\xaf\x95\x95\x55\x1c\x8e\xde\x97\x9c\xb1\xd8\xbe\x8d\x9f\x7c\x32\x9e\x8c\x47\x23\x47\xb6\x96\xad\xdd\x96\xdd\xf9\x8a\xa4\x6b\x69\x8d\x2e\x02\xb3\x0e\xc5\xe3\x46\x3c\x88\xa5\x48\xd6\xab\xcd\x6e\xfa\x75\x3c\x1e\xc7\xce\x43\x22\x5e\x76\x4f\xc9\xbd\xd8\x2e\xbe\x27\xf3\xa5\xb8\x7f\x9e\xcf\xa6\xfd\x98\x44\x8d\x58\xae\x96\xbf\x7e\xac\x5e\xb6\x9d\xae\x87\xea\x3d\xd9\x6a\xf3\x98\x6c\x56\xcf\xf3\xa9\xc8\x0a\xa9\xfb\xc2\xb5\xd8\x3d\x6d\x93\x99\xd8\x89\x29\x0b\x7f\xde\x25\x3e\x8d\x46\x16\x78\x20\x0e\x19\x4a\x77\x44\x7d\x37\x99\x7c\xb9\xb4\xb9\x42\x4f\xce\x47\xd5\xba\x52\x6a\x6d\x94\x4c\x4f\x1c\x50\xfd\xc1\xd3\x99\x24\xbd\x96\xc6\x51\xf4\x1f\x2c\xb3\x40\xf5\x12\xa9\xcb\xc3\x3b\xb7\x3f\x78\x7e\x8c\x7c\xda\x65\xbb\x29\x87\xe4\x49\x7d\xe8\x07\xfd\x7a\xee\xf6\x84\x85\x7a\x67\x7f\x8c\xe9\x47\x8b\x3b\x55\xff\x3b\xae\xac\x8d\xaa\x8a\x7e\xd2\x83\x8a\xbf\xe1\xf8\x2f\x00\x00\xff\xff\x4b\x2d\x4e\x24\x5c\x04\x00\x00")

func stacksGrafanaStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksGrafanaStackYaml,
		"stacks/grafana-stack.yaml",
	)
}

func stacksGrafanaStackYaml() (*asset, error) {
	bytes, err := stacksGrafanaStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/grafana-stack.yaml", size: 1116, mode: os.FileMode(420), modTime: time.Unix(1551893106, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioCrdStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\x41\x4b\xc3\x40\x10\x05\xe0\x7b\x7e\xc5\x42\xce\x46\xaa\x37\x6f\x8a\x45\xbd\xc5\xb6\x78\x0d\xe3\xe6\x35\x1d\x9a\xce\x84\xdd\xd9\x96\xfe\x7b\x71\x5b\x14\x2d\x24\x3d\xbf\xef\x0d\xcb\xdb\x6d\xfa\x44\x10\x18\xe2\x43\xe1\x9c\xd0\x0e\x71\x20\x8f\xb6\xf1\x29\x9a\xee\x9a\x80\xa8\x29\x78\x34\x2d\xd6\x2c\x6c\xac\x92\x65\xe9\xbc\xca\x9a\xbb\xc2\xb9\x1b\xf7\x8c\x68\x2c\xf4\x1d\xd6\xda\xb3\x3f\x56\xa7\xb0\xe2\x68\xac\x15\xeb\xed\x7e\x46\xfd\xb0\xa1\xbb\xcc\xe7\x5d\x40\x8c\x8b\xd4\x63\xdc\x2d\x34\x19\xa6\xd9\xeb\x6a\x55\x3f\xd6\x6f\xcb\x01\xfe\x89\xa5\x65\xe9\xae\xf6\xe3\xf0\x3d\xa9\xd1\xd5\x67\x7f\xf4\x18\x2b\x9d\xc0\x0e\x1a\xb6\x2c\xa7\xe9\x3e\x38\x58\xa2\x7e\x89\xb0\x67\x8f\xea\x37\xbd\xa8\xdf\xff\x9f\x3a\x2f\x33\x59\x38\x5f\x9e\x8b\x85\xe3\xb4\x7e\x21\xc3\x81\x26\x61\xe9\x28\xd9\x06\x62\xec\xf3\x53\x72\xf7\xfc\xf5\x7f\x93\x8b\xfa\xac\xf8\x0a\x00\x00\xff\xff\xbd\xa2\x21\x22\x73\x02\x00\x00")

func stacksIstioCrdStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioCrdStackYaml,
		"stacks/istio-crd-stack.yaml",
	)
}

func stacksIstioCrdStackYaml() (*asset, error) {
	bytes, err := stacksIstioCrdStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-crd-stack.yaml", size: 627, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5b\x6f\x22\x39\x16\x7e\xe7\x57\x58\xb5\x2d\x65\xb7\x15\x73\x49\x77\x7a\x3b\x25\xf1\x80\x08\xad\xce\x6e\x12\x18\xa8\xd6\xa8\x9f\x90\xb1\x0f\x60\xc5\x65\xd7\xd8\x2e\x12\x66\xa6\xff\xfb\xc8\x2e\x43\xb9\x12\x68\x32\x37\xcd\x4b\x42\xf9\x7c\x3e\xf6\xb9\x7d\xe7\x98\x2a\xb9\xe4\x2b\x93\xb6\x10\xca\xc1\xac\xdd\x7f\x84\xa8\x92\x16\xa4\x4d\xd1\xaf\xd8\x7f\x23\xc4\xb8\x21\x0b\x01\x13\x25\x38\xdd\x0e\xd7\x40\x1f\x4c\x8a\xac\x2e\x21\xc8\xb9\x5c\x69\x30\x66\xa8\xa4\xd5\x4a\x08\xd0\x77\x8a\x41\x8a\x92\xf1\xa7\x4f\x49\x80\x90\xd2\xae\xab\xfd\x29\xba\x1f\xdf\x8f\xc2\xb2\x66\x66\x0a\x4b\x0d\x66\x7d\x0d\x82\x6c\x53\xd4\xeb\x9a\x20\xca\xf9\x13\xe8\x29\x14\x4a\xdb\x19\xe8\x0d\xe8\x14\xbd\xf9\x25\x1b\xdd\x8e\xee\x46\xd9\xf4\xeb\xfc\x7e\x70\x37\x9a\x4d\x06\xc3\xd1\xb7\xb6\xe6\x0a\x53\xa1\x4a\xd6\x36\x1b\xda\xa6\xa2\x34\x16\x74\x5b\x28\x4a\x44\x7a\xd5\xbd\xea\x05\x85\xaa\xb4\x0b\x55\x4a\x96\x69\xb2\x5c\x72\x1a\x6e\x13\x84\x08\xe5\xfe\xce\x83\xdb\xdb\xf1\x8f\xf3\xc1\xfd\xd7\x9d\xe9\xb0\x24\xa5\xb0\x43\xef\xa8\x1a\xcc\xb8\xa1\x6a\x03\x7a\x7b\xec\xf6\xde\x8d\x12\xa8\xcd\x78\x0e\xaa\xb4\x29\x7a\xd7\x94\x2d\xf9\x6a\x42\xec\x3a\x45\x49\x07\x2c\xed\x70\x63\xb9\xea\x14\x5a\x3d\x6d\x93\x3d\x6c\xc1\x25\xd1\xdb\x1d\xac\x34\xba\xe3\x8d\xea\x2c\xb8\xec\x80\xdc\xa8\x08\x6a\x40\x6f\x38\x85\x61\x65\x7c\x8a\xbc\x3e\xec\xf5\xd5\x97\xd6\x84\xcb\xeb\x52\x13\xcb\x95\x4c\xd1\xfb\xcb\xfa\x42\x05\xd1\x20\xed\x6c\x5d\x5a\xa6\x1e\x23\x4c\x2f\x8f\x6e\xcd\xa5\x05\x4d\xa1\x70\xa2\x2a\xc2\xd3\xd1\xf5\xcd\x74\x34\xcc\x6a\x3d\xee\xc0\x01\xcb\xb9\x9c\x28\x6d\x53\xd4\xbb\xec\x76\xbb\xb1\xd9\x2e\x41\x26\x82\x48\x18\x1c\x4e\x88\xc8\xb5\x03\xc6\x5c\x56\xb9\xb0\x4f\x6e\x6e\xc7\xd9\x7c\x70\x7d\x3d\x1d\xcd\x66\xdf\x52\xa7\xf5\xbf\xad\x56\xb0\xd9\xa7\x6f\xb0\x97\x0b\x65\xab\x28\x09\xb2\x00\x61\x76\x11\xf3\xe2\x14\x79\xb9\x5f\x5a\x09\xb5\x20\x62\x5e\x80\xce\xb9\x31\x5c\xc9\x00\xc5\xe8\xec\x6d\x08\x4f\xdb\x6f\x6a\x73\xd5\x79\x7b\x56\xcb\x24\xd8\x47\xa5\x1f\xb8\x3c\x22\x77\x89\x0e\xd2\x72\xea\x3d\x78\x04\x53\x70\x78\xb2\x20\xfd\xb9\xed\x87\x8f\xc6\x01\x68\x69\xac\xca\x35\x18\x55\x6a\x0a\x0c\x96\x5c\x72\xa7\xc2\x44\x1b\xeb\x5d\x1d\xbb\xe6\x9a\x15\x44\xdb\xed\x6e\xcb\xeb\x81\xed\x5a\x7c\x78\x4f\x28\xe8\x63\x2a\xf7\xe2\x8e\xb1\xc4\x96\x7b\x94\x5e\x10\x1a\x59\x1c\x56\xa9\x06\x62\xe1\x7c\x05\xf6\x5c\x70\x63\xcf\x1f\x89\xa5\xeb\xf3\xb2\x60\xc4\x42\x70\x75\x4e\x0a\x13\xd0\x20\x59\xa1\xb8\xb4\xbb\xef\x42\xb1\xdd\xcf\x5d\xbc\xc3\xa7\x24\x39\x98\x82\x44\x0b\x8a\x41\x8d\xa5\x1a\x82\x12\xc3\x19\x3c\x70\x47\x5a\xad\x67\x29\x96\x46\xa9\x99\xe7\x44\xb2\xb4\x96\x21\x8c\x85\x5a\xcd\x55\x69\x8b\xd2\xce\x05\x6c\x40\xf4\x19\x2c\xca\x15\xc2\x58\x83\xd9\x4a\xda\xbf\x58\x3f\xab\x68\x53\x2b\xc4\x15\xa3\x46\xc5\x5d\x41\x3a\x6e\x79\x8f\x02\xb9\xe1\x5a\xc9\xdc\xf1\x6d\xb4\x75\x32\xbe\xf6\x04\xd7\x7f\xf3\x6f\x03\x62\xd9\x71\xa6\xfe\xe7\x80\xdc\x13\x60\x0c\xf2\xfe\x68\x20\x7d\xe5\x64\x9f\xa7\xe3\x2c\xbb\x1d\xf5\x2f\xa3\x6a\xdc\x09\x87\x83\xe1\xe7\xd1\x7c\xf6\xc3\x97\xc1\xec\x73\xff\xb2\xae\xf6\x9c\xac\x20\x45\x8c\x70\xb3\x26\xb2\x77\x75\x75\xd1\xa9\xca\x8b\xc1\xa6\x09\x9a\x94\x42\xec\x4a\x99\x88\x47\xb2\x35\x11\x2d\xf9\x30\xa4\x88\x33\x57\x14\x76\x5b\x39\x84\x82\xb6\x26\x2e\xcd\x8a\xa9\x6a\x17\xc0\x53\xa1\x0c\xc4\x2e\xf1\x35\xdf\x59\x5b\x5b\x34\x17\x7b\xdd\xce\x4a\x17\x34\x5a\xbc\xea\x5e\xbd\xf3\xc0\x73\xf7\x07\xe7\x4a\x72\xab\x34\x97\xab\xef\x9a\xe6\xce\xdf\x5c\xfc\x2e\xe3\x76\x39\x13\x9d\xdd\x24\x5c\x8c\x30\x6e\x12\x73\x24\x8a\x18\xab\xb1\xc1\x42\x5e\x08\x62\xe1\x13\x17\x10\x09\x9e\x77\x89\xaa\x01\xcc\xfd\xfe\xf6\x96\xe4\xa2\x6d\xf3\x42\x34\x34\x1d\xa6\xdb\x08\xd2\xe0\xdd\xbf\x3d\x15\x6f\xee\x67\xd9\xe0\x7e\x38\x9a\xdf\x4c\x76\x38\x5e\xc4\x80\xe9\xcd\x78\x3e\xcb\x06\xc3\xff\xf7\x13\x6f\x68\xf2\x4c\x36\x99\x8e\xff\x37\x1a\x66\xfd\xc4\x35\x7c\xb3\x35\x16\xf2\xe4\x75\x99\xb6\x6f\x10\x94\x5b\xc2\x40\x54\x06\x86\x34\x08\xd5\x19\x24\xbd\x76\xb7\xfd\xa1\xf5\x22\xbc\xce\x9f\xa4\x28\x40\x32\xcc\xa4\xc1\xde\xc0\xfe\x7e\x04\x72\x52\x97\x85\xd8\x4d\x2b\xfd\x8f\xdd\x0f\xdd\xe6\xf2\x5a\x19\xeb\xb6\xf4\xc3\x29\xad\x3a\x3b\xc4\x12\x1b\xbe\x92\xc0\x30\x25\x4d\x85\x01\x8b\x8d\x55\x9a\xac\x00\xef\x9d\xda\xaf\xed\x3f\xd1\xcb\x1e\x35\xb7\xd0\xe0\xc2\x3d\x8b\x12\x4a\x55\x29\x9f\xaf\x56\x9f\x07\x34\x39\xf6\x66\x20\xc0\x02\x62\x50\x08\xb5\x75\x79\x62\x5e\x0a\x0f\x6b\x7f\x09\x38\x20\x39\xac\xd7\xb7\x8c\xaa\x59\xec\x80\x51\x27\xfa\x23\x7b\x34\x14\x82\x53\x62\xf6\xed\xe1\x55\x99\xb3\x22\x16\x1e\xc9\xf6\xd0\x70\x91\x04\x59\x92\xa2\xc4\x9d\xa3\x25\x11\xc9\x89\xc8\x24\xee\x9e\x55\x27\x8c\x6e\x7b\xa2\x6f\x27\xdf\xdf\xfc\xb6\xb3\xe1\xda\x96\x44\xec\x7c\x7c\x12\xcf\xc0\x58\x2e\xfd\xa4\xa2\x4b\xf1\x8a\x0d\xc1\xd2\x00\xac\x96\xe7\x4a\x33\x37\x72\x1a\xab\x0a\xbc\xe4\xda\xd8\xc3\x5d\xf7\x20\xd1\xbb\x82\xa9\x46\xbc\xf1\x34\x9b\x7d\x7b\x4e\xd1\xc9\x11\x8e\x4e\xfe\x4a\x92\xd6\xaa\x6c\x52\x33\xde\x44\x1f\xc9\x45\xd2\x60\xd5\x83\xa3\x7f\x84\x38\xeb\x99\x33\xf4\xaf\x53\x28\x8c\x1b\xd3\x78\xbc\xff\xfd\xa5\x57\x70\x44\x8c\xf1\xe1\x59\xbd\x71\x83\xbc\xeb\x54\x9c\x04\xfa\x16\x11\x3d\x52\x1a\x3a\xbc\x8a\xa3\xf2\xd3\x8d\xed\x45\x27\xfc\x99\x17\x0f\x5c\x86\xa9\x3e\x76\x70\xd3\xbf\x6e\xa4\x34\xec\x0b\x2b\x4e\x22\x9b\x8f\x8d\x18\xe7\x9f\x1d\xc9\x9f\x68\x86\x8d\x40\xbf\xbc\xc8\x91\x17\xc9\x0e\x00\x72\xf3\x0f\xb5\xd0\x9b\x59\x76\x33\x9e\xdf\x8d\xb2\xc1\xfc\xd4\xa9\x75\xb7\xf5\x01\x3b\xd2\x6b\x9f\xb5\x1a\x14\xf1\x65\x1c\xf2\xa3\xd3\x9d\xaf\x2f\xd7\x78\xdd\x5a\x3c\x0d\x87\x37\x44\x20\x14\x1c\xd8\xb6\xf5\x53\xe9\x28\xc9\x13\x25\x46\x1b\xa2\x39\x59\x08\x48\xd1\x81\x77\x7f\xcb\x3d\xce\x0d\xd5\xbc\xa8\x9e\xaa\xd5\xcc\x80\x2d\x08\xc8\xc1\xea\x6d\xfd\x3e\x48\x1a\xaa\x1a\x91\x3b\xa2\xc4\x4f\x55\x88\x54\x71\x4f\x5a\xad\xd6\x6f\x01\x00\x00\xff\xff\x14\xec\x36\x84\x29\x11\x00\x00")

func stacksIstioStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioStackYaml,
		"stacks/istio-stack.yaml",
	)
}

func stacksIstioStackYaml() (*asset, error) {
	bytes, err := stacksIstioStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-stack.yaml", size: 4393, mode: os.FileMode(420), modTime: time.Unix(1551893106, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioTelemetryStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x7b\x6f\x1b\x37\xb6\xff\xbf\x9f\x82\x90\x03\x34\x01\xac\x87\x7d\xd3\x7b\x1b\x01\xfe\x43\xb1\xe5\x5e\xed\x36\xb6\x61\x29\xbb\xc0\x16\xc5\x80\xe6\x1c\x49\x84\x67\xc8\x59\x92\x63\x5b\x59\xef\x7e\xf6\x05\x39\x2f\xce\x53\x33\x72\xdc\xa0\xed\xa4\x45\x22\x93\xe7\x77\x48\x1e\x9e\xd7\x1c\x8e\x68\x09\xe2\x81\x12\x90\xd3\xef\x10\xa2\x52\x51\x3e\x54\xe0\x81\x0f\x4a\xec\x74\x13\x42\x1b\x8f\xdf\x61\xcf\x09\x40\xf8\x54\x4a\xca\x99\x8c\xda\x87\x48\x70\x0f\xce\x88\x17\x4a\x05\x62\x88\x5d\x9f\x32\xd3\x41\x7d\xbc\x81\x69\xc4\x6c\xec\xd3\x27\x10\xd3\x93\xd1\x64\xf4\x3e\xeb\xbc\x09\x3d\xef\x86\x7b\x94\xec\xa6\x08\x7b\x8f\x78\x27\x4d\x1f\xe1\xbe\x8f\x99\x9b\xb0\x1f\x0e\xb1\xeb\x0a\x90\x32\xfe\x39\x64\xf4\x69\x3a\x1e\x8f\x25\x27\xf7\x11\xdf\x91\xfe\x08\x2a\xa5\x27\x9c\xad\xe9\x66\xa9\xb8\x80\xcf\xb7\x3f\x9f\xdd\xff\x28\xa7\xe3\x71\xa1\xf7\x02\xd6\x38\xf4\xd4\x15\xf6\x41\x06\x98\xc0\xd9\x9b\x7f\x5d\xcd\x3e\xcd\x97\x37\xb3\xf3\xf9\xbf\x0d\xed\x03\xf7\x42\x1f\xd2\x55\x86\xae\x1c\x46\xe3\x4c\xcd\xd0\xa6\x19\xd8\x03\x15\x9c\xf9\xc0\x54\x42\xf7\xd3\xf5\xc5\xfc\xe3\xe7\x9f\xce\x36\x44\x09\xcd\xf7\x34\x22\x7c\x0a\xb8\x84\x84\xe6\xc3\xe4\xc3\xff\x8c\x15\x09\x8e\xb7\x4a\x05\x43\x9f\x33\xaa\xb8\xa0\x6c\x13\x77\xbf\x3f\x7d\x7f\x7a\x6a\xfa\x03\xc1\x7d\x50\x5b\x08\xa3\xc5\x4b\xea\xc2\x3d\x25\xf7\xf1\xa4\x92\x9d\x0a\x04\x7f\xda\x25\x4d\xf9\xb1\xf4\x9f\x23\x34\x44\x27\x3f\x4c\x3e\x4c\xb2\x21\x81\x3d\xf0\x9d\xc6\xf9\x29\x95\xa1\x99\xbc\xd7\x34\x56\xdb\x87\xc9\x87\x13\x03\xdb\x88\x80\xa4\xed\xb9\xad\x35\xa3\x3f\x9c\x5a\x9b\x5b\xda\xc4\x88\x97\x21\xb4\x7e\x1e\x0e\x63\xa5\x3b\x8f\x74\xc7\xea\x2a\x68\x60\x0e\xa4\xc0\x0f\x3c\xac\xe0\x92\x7a\x60\x75\x8c\x41\x91\xb1\x35\xa3\xb1\x59\xa3\x93\xf2\x18\xed\xb0\xef\x8d\x94\x1f\x78\x39\x6e\x84\x33\x25\xb8\x77\xe3\x61\x06\xb3\x50\x6d\x23\x7d\xb4\x48\xae\xae\xaf\xe6\x99\x68\x8b\xfb\x1d\xd1\xdc\x5c\x5f\x38\x5a\x7b\xce\xde\xbc\x95\xe0\xad\xc7\x0c\xfb\xf0\xae\xa2\xdf\x68\x97\x4d\x64\x54\xcf\xa6\x5c\x5c\x2d\x57\xb3\xab\xf3\xb9\xb3\xb8\x49\xe8\x68\x90\x11\x48\x20\x02\x94\x9c\x22\xea\x02\x53\x54\xed\xa6\x66\xd9\x04\x84\x92\x29\x51\x4e\x71\x6b\x94\xf7\xbb\xfb\xf0\x0e\x04\x03\x15\xd1\xa5\x73\x71\x1d\x12\x4a\xc5\x7d\x47\x80\xe4\xa1\x20\xe0\xb8\xb0\xa6\x8c\xaa\xc4\xe0\x87\x48\x4b\x93\x92\x51\x64\x46\x23\x23\xf1\x11\xe5\xe3\x87\x13\xec\x05\x5b\x7c\x6a\x68\x44\xe8\x41\x33\x45\xa6\xd9\xcd\x74\xd9\x3c\x9b\xe9\x12\xad\x68\xa6\xc2\x4a\x09\x7a\x17\x2a\xf0\x31\xa3\x6b\x90\xaa\x99\x9c\x32\xa9\x30\x23\xfb\x98\xba\x38\x50\x20\x9a\x89\xb6\x98\xb9\xde\x3e\x22\x8f\x6f\x80\x69\x5d\x6d\xa4\x92\xca\xa5\xbc\xad\xd4\x80\x3d\x34\x91\x5a\x1b\x9f\x88\x64\x8a\x9e\x87\x46\x75\x70\x40\xff\x06\x42\xbb\xfa\x29\x1a\xd4\xf1\x18\x18\xd2\x7b\xca\xdc\x69\x59\xba\xa6\xcf\x07\x85\x5d\xac\x70\xa2\x8f\x7a\xc8\xd8\x77\x64\x1e\x41\x06\x40\x12\x82\x94\x8d\xa5\xc2\x5c\xd0\x0d\x65\x23\x1a\x64\x4d\x08\x3d\x60\x2f\x84\xd5\x2e\x80\x29\x5a\xdc\x38\xb3\x8b\x8b\xdb\xf9\x72\x59\x84\x84\xd4\xad\xc1\x2c\x57\xb7\x8b\xab\x9f\x4a\xf4\x12\x44\x3b\x80\x80\x7f\x86\x5a\x85\xb6\x80\x5d\x10\xb2\x11\xe4\x7c\x9a\xdd\x94\x80\x6d\x67\x96\x0e\xc4\xa5\xea\x86\xd0\x26\xc6\x3b\x8e\x12\x60\xb5\xed\x86\x10\x80\x25\x67\x5d\x31\x6b\x10\x5d\x25\x2d\xc9\x16\x7c\xe8\x86\x51\x5c\x61\xcf\x91\xf4\x4b\x0e\x57\xc0\x2e\xae\x56\xff\xfb\xbe\x3c\x5c\x01\xb4\x17\xa0\x68\xed\xec\x56\x8b\x4f\xf3\xe5\x6a\xf6\xa9\xac\x05\x5a\xe1\xf0\x26\x17\x51\x9a\xd7\x25\x03\xce\xa4\xf6\x49\x6e\xdb\xd9\xc5\x08\x37\x14\x58\x3b\xf2\x1a\xd4\xc5\xe7\xdb\xd9\x6a\x71\x7d\x55\x06\x1e\xa0\xe1\x31\xf2\x20\xe9\xc7\xd8\x0e\xe2\x4f\x46\xeb\x22\xff\x28\xbe\xb5\xf7\x0f\x09\xbd\xf6\x0f\xe8\x08\x5d\xcc\x6f\x6e\xe7\xe7\xb3\xd5\xfc\xa2\x0b\x3a\x10\x94\x11\x1a\x60\xaf\xdd\x98\x2e\x48\x45\x99\xd9\xb4\xf6\x13\xb5\x41\x2f\x18\x2f\xe0\xa2\x4e\x25\xf3\xe2\x27\x9c\x31\x20\x06\x03\x0f\xad\xf5\xd8\x42\xb5\x5d\x98\x05\x11\x40\x80\x3e\x80\x3b\xba\xdb\xe5\xe2\x44\xbb\x69\xe6\xd1\x8e\x51\xd2\xae\x3c\x24\x30\x75\xd8\xe8\x19\xf2\xb0\x91\xbb\x9a\xb1\x05\xf5\x95\x57\x37\xdd\x8f\xd7\xd7\x3f\x57\xcb\xca\xb8\x29\x70\x1d\x9d\xad\x83\x70\x4c\xfc\x6e\xbb\x5f\x0a\x9e\xd4\x28\x10\x5c\x71\xc2\x5b\xea\x60\x82\xd2\xc6\x2c\x15\xf6\xeb\x42\x7e\xd9\xa2\x6d\x64\x6b\xd0\x11\xba\x80\x40\x00\xc1\x0a\xdc\x63\x74\x0f\x81\x42\x6b\x2e\xf4\xf3\x4b\x80\x15\xbd\xa3\x1e\x55\xbb\xd2\x08\x02\xb4\x75\x80\x18\x79\x9c\xd4\x6e\x60\x51\xa2\x79\xa4\x49\x99\x3a\x09\x24\x85\xb6\xf6\x04\x38\xa0\xa3\xf8\x19\xab\x3d\xe0\x21\xce\xf9\x5a\x03\x78\x00\x8d\x0a\x59\x01\xe9\xa6\x11\x49\xa4\xc4\xa1\xda\x76\xf5\x68\x39\x2c\x0e\x5d\x0a\x8c\xd4\x9a\x6c\xf3\xb8\x3a\x99\x56\x5d\x53\x16\x83\x25\x1e\xa6\xfe\x01\x09\xa2\x01\x0b\xfc\xe8\xb4\x60\x50\x06\x07\xd4\xb9\x87\xdd\x7e\xd0\x70\xf8\x1b\xe4\xfb\xd9\x13\x49\xab\x7c\x3f\x0e\x97\x5d\xf2\xfd\x18\xe2\xe1\x3b\xa8\x75\x72\x15\xb2\x8e\x61\xc5\x59\xb7\x06\xb6\x77\x87\x16\xc0\x3c\x72\x75\x42\xf1\x47\xd6\x56\xf5\x62\x44\x62\xf8\xe8\xe0\x64\x25\xe6\x30\x23\x84\x87\x6d\xc3\x7a\x1e\xda\x52\x65\x63\xd0\x23\x17\xf7\x1e\xc7\x6e\xe7\x9c\x2c\x05\x76\xde\x8c\x1c\xb2\xc3\xae\xd8\x89\x52\x17\x25\xb5\x71\x5d\x35\xd5\xc6\x76\x57\x57\x1b\xdd\x41\x99\x6c\x58\x7b\xe9\xda\x28\x1d\xbe\x30\x65\x20\x0e\xc4\xbf\x60\x67\x52\x13\xe8\x6c\x01\x15\x5c\x0e\x4b\xc0\x13\xf0\x61\x6b\xb7\xd1\x2f\x93\x41\x87\xe2\x41\x05\xba\x93\x0b\xb0\xf1\xdd\x4d\xba\x12\x7d\x98\xf4\x0e\x31\xee\x83\x83\xa1\xa9\xca\x35\x04\xc0\xb8\x00\x58\x8a\x7e\x3c\x54\x41\xa8\x66\xf2\x2f\x52\x0f\xa5\x44\x08\x2f\x9b\x47\x52\x43\x6c\x98\x0a\x26\x04\xa4\xf4\xf8\xa6\x34\x19\x09\x0f\x20\xa8\xda\x4d\xd1\xf7\x83\x05\x5b\xf3\xc1\xf7\x71\x47\x96\x8c\xe7\x8a\x1d\xdf\x25\xa2\x14\x14\xdf\x79\xe5\x00\xbe\x08\xa6\x59\x28\x47\xcf\x88\x06\x6f\x07\x93\x91\xf9\x6f\xf0\xae\x40\x3b\x0b\x32\xe2\xc8\x35\xfe\x32\xc0\x41\x30\xf8\x15\x3d\xa3\xc1\xa0\x40\x7c\x93\x66\x81\xa5\x27\xeb\x2a\xf2\x2b\xb3\x6e\x2b\x00\x57\x11\xfd\x3d\x56\x97\x69\x65\x70\xa8\x63\x1b\xe9\x55\x29\xb8\x57\x91\x5f\x1b\xb7\x9b\x8b\xe8\x79\x32\x4b\x79\x8d\x34\xca\xd1\xa2\x52\x24\x16\xd9\xa2\x80\x6a\x90\xba\x45\xb6\x8c\xac\xfc\xff\xb5\x8b\xa8\x75\x1e\xb5\x63\x66\x72\xab\x35\xbe\x5a\x6c\xb4\x31\x45\x77\xdf\x48\x1e\x0b\xbc\x32\x44\xd4\x02\x63\xd1\x97\x82\x60\x2d\xc0\x52\xb0\xca\x7a\x4a\x1e\x88\x03\x7a\x1e\xa5\xe8\x75\xb9\x7b\x89\xfe\xaf\xb0\x9b\x16\x73\x75\xf4\x5c\x2c\x2a\xff\x32\x78\x1a\xe2\x80\x0e\xef\x61\x57\xdc\xf5\xf4\x19\xaa\x50\x1e\x45\xcf\xa5\x07\x6f\x0d\xdc\x2a\x15\x64\xe0\xb8\x30\x5c\x28\x14\xe7\x07\x08\x85\xc5\x3b\xc0\x6a\x9b\xef\x4e\xaa\x6e\xe7\xdc\x85\x69\xbe\x2c\x89\x9e\xd1\xa4\x44\xb7\xa4\x5f\x6c\x3a\x49\xbf\x14\xe9\xcc\x48\x09\x59\x56\x82\xad\xa2\x5a\x58\x73\xb7\x44\x15\x37\x0d\xa9\x5b\x94\x16\xf1\x28\x30\xb5\x12\x98\x40\x0d\x36\xa2\x18\x9a\x53\xdb\x0a\x06\x1e\x56\xc0\xc8\x6e\x5a\x2e\xa7\x6a\xba\x89\x2f\x07\xf6\x03\x7b\x5c\x3d\x71\x24\x90\x50\x3b\x54\x27\x88\xcf\xb9\x09\x67\xae\x39\x4d\xc3\xde\xdb\xb7\x95\x45\x01\xcd\x8e\xb2\x3b\x1e\x32\x77\xf0\x0e\x9d\x9d\xa1\x01\x0f\x55\xf4\xe3\x31\x1a\x84\xec\x9e\xf1\x47\x36\x38\xce\x71\x2a\x94\x78\xd0\x33\x5a\x63\x4f\xc2\x31\x1a\xf8\xa1\x0a\xb1\xe7\x28\x4f\x6a\x34\xe3\x0c\x06\xef\xde\x15\xa5\x09\xee\xd2\xd4\x76\x22\x6b\xdc\x57\xfc\x29\x68\x89\x04\x31\x33\xe5\xeb\x72\x45\xbb\x5a\x61\x56\x76\x2c\xb1\x2a\xb7\x16\x61\x54\x9e\xfb\x68\xaa\x6b\x15\x95\xfc\x9c\x46\xe8\xa7\xf2\x94\xb2\x54\x76\x2e\x28\x4f\x74\xe8\x50\x3c\x85\xc8\xcf\x53\x5b\xca\x2c\x54\x5b\x1e\x45\xc2\x92\xaa\x4c\x71\xd2\x69\x74\xc4\x3e\x9d\xc9\x33\x7a\xba\xe4\xe2\x11\x0b\x17\xdc\x4b\x2e\x2a\x75\x6e\x9d\x10\xe8\x4f\x91\xc6\x25\x8e\xda\x9a\x74\xa4\x1c\x2f\xd7\x9d\x28\xf0\xe8\x4f\x96\x4b\x4b\x23\x42\xfc\x1a\x02\xb8\xd9\xd9\xaf\x32\xd9\xd1\xf7\x83\xe8\xdd\x8f\x38\x19\x78\xcd\xcc\x44\x91\xe0\x65\xc9\x89\x5d\x02\x44\xcf\x59\xcf\xdb\xc1\xe9\xe4\xe4\xff\x86\x93\x93\xe1\xe4\x64\x35\x99\x4c\xcd\xff\xff\x48\xd7\x5e\x91\xc0\x64\x56\x30\x37\x45\xed\x52\x99\xbb\x2a\xc2\xf7\xf9\x8e\x4d\xde\xe7\x3b\x25\xec\x1f\x24\xdf\xc9\x72\x8f\xaa\x54\x43\x91\xa0\x2a\x18\x5e\x24\xe7\x16\x55\x87\x19\x7f\xee\x20\x5a\x88\x78\xb5\x47\x55\x75\x81\xaf\xf2\x74\x29\x47\x6c\x22\xe2\x6d\xcb\x61\xa2\x73\xa9\x32\x7e\xb9\x67\xc4\x0a\xdc\x1f\x26\x7a\x89\x30\x7e\xdd\xac\x3a\x72\x65\x8f\xff\x76\xc8\xf2\xb1\x22\xdb\x0a\x23\xd1\x6b\x33\x09\x39\x7a\xae\xc8\xd6\x75\xef\x46\x04\x24\xd1\x0f\x4c\x54\xf6\xbe\xa5\xf5\x32\x51\x5a\x54\x18\x65\xa3\xeb\x3f\xc9\x6b\x4b\xb9\x57\xc0\xd2\xb8\x3a\xca\xc5\xe1\x57\x95\x47\xf2\x2e\x61\x5b\x91\x58\x8e\xe3\xab\xac\xd9\x4e\x27\xbe\xd2\xb2\xa3\xb7\xdf\x1a\x16\x1e\x5b\xbb\xa9\x97\x95\x16\x6f\x6a\x4e\x53\x34\x38\x49\x96\xe9\x52\x1f\x98\xb4\x57\xfa\xdb\x99\x4c\x12\xa6\x9d\xc7\xbd\x89\x40\xe2\x30\xeb\x90\x0e\x2b\x65\x06\xe5\xe2\x5b\x13\xa3\xa0\x39\xbf\xa9\x83\xe1\xa6\x1c\xaa\x0e\x94\x1c\x70\x16\x81\x71\x7b\x0d\xd8\x92\xa0\x25\xb0\xc6\x0c\xa0\x15\x0f\x5b\x74\xcd\xc5\xcb\xbd\x2c\x83\x16\x31\xbc\x91\x01\xde\x9b\x84\x35\xc2\x53\xc1\x56\xb1\x68\x2f\xdd\xb4\x6a\xdf\x94\x99\xb5\xe1\x10\xbd\xaa\x50\x5b\x50\xef\xc4\xa6\x62\x87\x4a\xc5\xf9\x4a\x86\xb1\x3f\x70\xb2\x94\xc9\x3e\x00\xaf\x29\xd6\x54\x70\x89\x9e\x6c\x1d\x52\x59\x6d\x39\x9d\x4c\x7e\x77\x89\x53\x43\xc4\xfe\x7c\xb5\xbc\x99\x9f\x2f\x2e\x17\xf3\x8b\x97\x86\xed\xb6\xfe\x3a\xc9\x43\xeb\x5c\xf6\xbe\xaa\x4f\xef\xc8\x7b\x47\xde\x3b\xf2\xde\x91\xf7\x8e\xfc\x1b\x3b\x72\x49\xbf\x40\xbd\x13\xaf\x3c\x55\xe8\x7d\x77\xef\xbb\x7b\xdf\xdd\xfb\xee\xde\x77\x7f\x3b\xdf\x1d\x89\xb2\xd9\x79\x57\x9f\x1c\xf7\xde\xbb\xf7\xde\xbd\xf7\xee\xbd\x77\xef\xbd\xbf\x95\xf7\x56\x24\x30\xc7\x3f\x50\x5f\xf1\xde\x77\x40\xd5\x3b\xf1\xde\x89\xf7\x4e\xbc\x83\x13\xef\xec\x7d\xbf\xb5\x13\xef\x7d\xea\x21\x3e\x35\x39\x97\x6f\xe1\x57\x6b\xdf\x14\xe8\x7d\x6b\xef\x5b\x7b\xdf\xda\xfb\xd6\x3f\x8b\x6f\x2d\x5c\x9a\xd5\xed\xeb\x38\x91\x63\xb6\xde\x3b\xc9\x17\x97\xa3\x37\x9c\x52\xc1\x27\x6f\x9d\x38\xe5\x77\x3f\x46\xf1\x3d\x49\xa5\x7b\xc5\xb2\x89\x9e\x5f\x7f\xbe\x5a\xcd\x6f\xd3\x56\xa3\xc6\x91\x26\xd8\x6f\xb1\x24\x9b\x65\x35\x65\xae\xa9\xdc\x98\x9a\x62\xb9\x2b\xb1\xf7\xfa\x9e\x4c\x0f\xcb\x34\xb1\x75\x59\x1d\x05\xbb\xae\xe9\xa9\x9a\x50\x95\x97\xda\xd3\x5d\x39\xb5\x0a\xd7\x50\xd3\x1b\x5b\x52\x73\xaf\x19\xa3\x05\x49\x71\x1a\xc5\x27\xd4\x5c\x97\xf5\xd8\x69\xb5\xd7\xdb\x6c\xb5\xea\x39\xc9\xc1\xb3\x26\xe7\xcc\x95\x7b\x94\x30\x21\x6f\xa1\x87\x17\x8b\xe5\xea\x76\xf1\xf1\x73\xee\xd6\x88\x5e\x19\x7b\x65\xb4\x6f\xc2\xbb\x0b\xc9\x3d\xa8\xdc\xd7\x95\xe1\x29\xf0\x28\xa1\xca\xa9\xe8\x43\xc8\x44\x10\x39\x45\xbf\x4c\x46\x93\xc9\x0f\xc7\x68\x32\x9a\x9c\x98\xbf\x4f\xa3\x1f\xcc\xdf\xa6\x25\x6a\xf8\xe1\x18\x9d\x1c\xa3\x53\xfd\xaf\xfe\x38\xf9\xb5\xc6\x0e\x4c\x7a\xbb\x47\xf9\x25\xfd\x02\xbd\xe2\xf7\x8a\xff\x7a\x8a\xcf\x19\x30\x45\xb1\xf7\xb1\x4a\xf5\x59\xe8\x5f\x52\x46\x15\x24\xbd\xe8\xc7\x5c\xbf\x24\xd8\x83\x29\x3a\xc9\x35\x6e\x04\x7f\x54\xdb\x4b\x4c\x14\x17\x53\x74\x32\x29\xa9\x7f\xbc\x82\x3d\xfa\x9f\x1d\xa4\xf4\x06\xd0\x1b\x80\xd5\xf5\x7b\x37\x00\x45\x02\x47\x02\x8b\x03\x40\x73\x22\x6e\x55\xa4\xfb\x3c\xfc\x4f\x64\x00\xad\x93\x6a\xad\x4c\x49\xc1\xac\x83\x42\xa5\x35\xb6\x5e\xa9\x7a\xa5\x22\xaf\xfb\x0d\x9a\x40\x70\x7f\xab\x54\xb7\x6f\xd0\x7c\xcd\x2f\x15\x15\xea\x28\xa8\xee\x5b\x36\x15\x55\x8f\x72\x6f\xe1\x71\xb4\x4c\x60\x65\x2c\x15\x61\xab\xd8\xfb\x9a\x42\x7f\xd5\x6f\x2d\xb5\x15\x6a\x39\x82\x95\x3b\x0b\xde\xe8\x65\x82\xc9\x5d\x19\xdd\x20\xa1\xba\xc2\xd9\x11\x7a\xdc\x02\x43\x22\x64\x8c\xb2\x0d\x5a\x0b\xee\x23\x73\x3b\x3f\x12\x9c\xab\x63\x14\x4a\x40\x6a\x0b\x68\xcd\x3d\x8f\x3f\x6a\x92\x68\x56\x08\xaf\x15\x08\x84\x5d\x57\xb7\xe1\x94\x9b\xdc\xf9\x77\xda\xc8\x90\x47\xd9\x3d\x52\x1c\x61\x6b\x8a\x09\x76\x4d\x3d\x40\x0f\x34\x9d\xe2\x51\x0a\x7f\x83\x3c\x86\x86\x12\xfd\x67\x3c\xd2\xb0\x71\x0c\x30\x33\x1a\xc7\x37\x76\x8f\x33\x86\xe6\x63\x44\x53\x62\x95\x75\x39\xe6\x6e\x64\x34\x68\xc1\x65\xf0\xaa\x6a\xaa\xc7\xc1\x4a\x89\x0d\x30\x4d\x99\x52\xe7\xae\xd5\xdb\xab\x8b\xe5\x2d\xaf\x55\xc7\xec\x8e\xbe\x51\xe1\x26\xbf\xd7\x5a\xa2\x22\x41\x9b\x55\x7e\x35\xc3\xfc\xb6\xc2\x28\xf0\xa9\xb9\xb7\x29\x1d\xb7\xc2\xfa\x6e\xb0\x94\xc6\xc0\xb4\x3f\xa5\x02\xdc\x8c\x1c\x69\x56\xda\x84\x74\x77\xac\xb5\x31\x2e\x8e\xfe\x21\xcd\x0e\xe6\x42\x9a\xbb\x07\x26\xa6\xa0\x4d\x37\x1b\xa0\x23\xe4\x46\xbf\x4f\x43\x8f\x12\x32\x3d\x33\xba\xa6\xe0\x22\x1a\x68\xcb\x4e\x46\xb3\x23\xae\x19\xd2\x3e\xea\x28\x8c\x9b\x4b\x32\xb8\x28\x7c\x51\x5f\xb7\x58\x47\x9c\xe9\x52\x9d\x3b\xca\xb4\x23\xb1\xf6\xeb\x08\x5d\x52\xcf\x33\x6b\x67\xf0\x68\x09\x31\xf2\x51\x96\x4c\xb4\xf7\x77\x43\x02\x6e\x7c\x29\xd7\xc8\xe2\xf1\x86\x87\x2a\xba\x3f\x44\x1a\x67\xc4\x52\xd5\x40\x7c\x8d\xae\x0d\xfd\x2a\xfe\x1d\x04\xc8\x07\x29\xf1\x26\xcb\x21\x52\xc1\x4d\x0d\x9f\x51\x92\xcc\x71\xd7\xd9\x7b\x4d\x84\xb9\x39\xad\x04\x8b\x85\x55\x73\xfc\x98\x5c\x2d\x98\x83\x45\x6d\xe8\x19\x81\x1f\xa8\xdd\x52\x09\xca\x36\x9f\x70\xf0\xb6\x34\x60\xa4\x6c\xc5\x11\xf7\x1c\xd3\x5a\x77\xac\xe5\xa0\xb9\x83\xab\x58\x49\x4a\xd8\xe8\x3e\xc2\x1c\x2e\xbd\xad\xa0\x6e\xbc\xc2\xcd\x74\x39\x70\x92\xcd\xe1\xa8\x73\xef\xdc\x73\xb7\xd4\xe5\x38\xa5\xf9\xe9\x1e\x81\xe7\x6f\xaa\xab\x66\xd1\x7a\x16\x35\xa2\x2c\xe7\xca\xfb\x4e\x17\x33\x8d\xcb\x5b\x53\xa3\xda\x15\x6c\xb2\x86\x41\x9d\x3c\xca\xc7\xb2\x15\x0c\xf6\xab\xa2\xcd\xc6\x12\x69\x71\x16\x6d\x8e\x58\x8b\x17\x50\x96\x39\xa5\x04\xed\xf8\x15\xb7\xc7\x66\xd5\xac\xee\x36\x17\x5b\xe7\x6d\x0e\xf5\x8a\x5f\x71\x2e\x9c\xd7\xfe\xaa\x07\x9a\xbd\x26\x50\xf9\x3e\x40\xf5\xbe\xef\x35\x86\xda\x77\x0b\x9a\x98\x75\x9b\x59\x93\xf0\x5b\x18\x88\x0e\xd0\xff\x0d\x00\x00\xff\xff\x23\x8a\x4e\x56\xeb\x6a\x00\x00")

func stacksIstioTelemetryStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioTelemetryStackYaml,
		"stacks/istio-telemetry-stack.yaml",
	)
}

func stacksIstioTelemetryStackYaml() (*asset, error) {
	bytes, err := stacksIstioTelemetryStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-telemetry-stack.yaml", size: 27371, mode: os.FileMode(420), modTime: time.Unix(1548038518, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksKialiStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x5d\x6b\xdb\x30\x14\x7d\xf7\xaf\xb8\x84\x40\x61\x34\x71\x3a\xf6\x64\xc8\x83\x49\xb5\x2d\xd0\xa6\xc1\x4e\xba\x47\xa3\xd8\xb7\x8e\x88\x2c\x79\x92\xec\xb4\x64\xfd\xef\x43\x8e\x54\x67\xa5\x29\xcb\x8b\x7d\x3f\xce\x39\xba\x70\xef\xc9\xa5\x78\x62\xa5\x8e\x02\x80\x1d\xa3\x9c\x8d\x8e\x05\x9b\x03\xe4\x52\x18\x14\x26\x82\x3f\xa3\x2e\x07\xd0\xa8\x5a\x54\x91\xcb\x00\x6a\xa9\x4c\x04\x5f\x27\x93\xc9\x8d\xab\xe1\xb3\x41\x25\x28\xcf\x2c\x94\xe5\xa8\x7b\x70\xa9\xe8\x13\x15\xb4\x2f\x00\x34\x8a\x47\x30\x3c\xfc\x48\xe2\xef\xf1\x22\xce\xd6\xc9\xdd\x6b\x70\x4a\xec\x66\x3a\x12\x4a\x2e\x37\x94\x67\x35\xaa\x8a\x69\xcd\xa4\x70\xca\x23\x18\x94\x68\xae\x39\xd3\xe6\x7a\x4f\x4d\xbe\x05\x81\x66\x2f\xd5\x8e\x89\x72\xcc\xb4\x61\x72\xcc\x64\xd8\x32\x65\x1a\xca\xbd\xf6\xe0\x02\x6a\x81\xda\x30\x41\x0d\x93\x42\x35\xfc\x32\xae\x7b\x0f\x85\x51\xec\x32\x66\x49\x0d\xee\xe9\xcb\x59\xce\x71\x4f\x3d\xfe\xcb\x39\xe0\xf9\xce\xc6\x7e\xcf\xb7\x69\x5d\xeb\x4f\xba\x8d\x91\x3a\xa7\x9c\x89\xd2\x83\x58\x45\x4b\x8c\xa0\x90\xf9\x0e\x95\x9d\xa9\xdb\xde\xf1\x1b\xb5\x93\xf1\xcd\xa4\x83\xa1\x68\x99\x92\xa2\xb2\x97\xe5\xc4\xe3\xd9\x6a\xfe\x48\xb2\x45\x7c\x4f\xd2\x65\x3c\x23\xd3\xe1\xe1\x2d\x7e\x75\x98\x94\x24\x8f\x24\xc9\x66\x09\xb9\x25\x8b\xd5\x3c\xbe\x4b\xb3\x75\x4a\x12\x8b\x9b\x0e\x0f\x3e\xfc\x04\xbd\x8c\xd3\xf4\xd7\x43\x72\x3b\x1d\x1e\x7c\xe8\xd1\xcb\xe4\xe1\x9e\xac\x7e\x92\x75\x9a\x59\xe2\x7c\x46\xec\x29\x5a\x60\xdf\xe8\x6e\xf3\xe8\x8a\xaa\xa2\xa2\xf0\xb3\x3b\xc7\xb8\x2c\x3c\x75\x51\xa3\xba\xab\x09\xdd\xae\x5e\x68\xc5\x3d\xa9\x75\xc1\xd5\xb7\x2b\x6f\x35\xef\x43\x5b\xfe\xc7\x8b\xff\xa5\x89\xcf\xb5\xd4\xe8\xf9\x9d\x23\xc3\xad\x31\x75\x10\x78\x47\x9e\xfa\xaa\x56\xb2\x42\xb3\xc5\xc6\xbd\xe8\x7a\xd1\x49\x23\xec\xc3\xe0\x9d\x77\xdf\xd0\xae\x1a\xba\x7f\x10\xfc\x6e\xac\x59\x9c\x37\x47\xd0\x52\xc5\xe8\x86\x63\x04\x7e\x3f\x1d\xbf\x40\x9d\x2b\x56\x5b\x60\x04\x83\x46\xdb\xf1\x2a\x04\x23\x81\xcb\x92\x09\x28\xa8\xde\x6e\x24\x55\xc5\xe0\x9d\x8a\xdf\xdb\x07\x2a\x35\xd5\x7a\x2f\x55\xf1\xa1\xca\xdf\x00\x00\x00\xff\xff\x3d\xcf\x6a\x21\xe6\x04\x00\x00")

func stacksKialiStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksKialiStackYaml,
		"stacks/kiali-stack.yaml",
	)
}

func stacksKialiStackYaml() (*asset, error) {
	bytes, err := stacksKialiStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/kiali-stack.yaml", size: 1254, mode: os.FileMode(420), modTime: time.Unix(1549987353, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksLocalstorageStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x53\x51\x8b\xd3\x40\x10\x7e\xcf\xaf\x18\x82\x70\x2a\x97\xe6\xf4\x49\x16\x7c\xa8\xd7\x16\x85\xbb\xb6\xd8\x53\x1f\x44\xc2\x34\x99\xb6\xeb\x6d\x66\xc3\xee\x24\x20\xea\x7f\x97\xdd\xa4\x69\x7b\x70\x3e\x25\x33\xdf\x37\xbb\xb3\xdf\x37\xf3\xd8\x6e\xc9\x31\x09\x79\x95\x00\xd4\xc8\x7a\x47\x5e\x14\xfc\xc9\x12\x00\x00\x6c\xf4\x57\x72\x5e\x5b\x56\xe0\xc5\x3a\xdc\xd3\xe4\xf1\x9d\x9f\x68\x9b\x77\x6f\x22\xe3\x51\x73\xa5\x60\xd3\x63\xb7\x06\xbd\x8f\xe9\x9a\x04\x2b\x14\x54\x31\x02\x60\xac\x49\x81\xb1\x25\x9a\x21\x83\xcc\x56\x50\xb4\x65\x7f\x24\xc1\xf1\x8e\x32\x9c\x33\x39\xf5\x16\xee\xd3\x3e\xab\x68\x87\xad\x91\x2c\xc2\x0a\x52\x71\x2d\xa5\xb1\xb6\x71\xb6\xd3\xa1\x4d\x72\x0a\x1c\x72\x79\x20\x17\x8a\xe2\x85\x59\x83\x72\x88\xb4\xce\x9a\xb6\xa6\x0f\x9a\x2b\xcd\xfb\x7b\x5b\x91\x82\x6f\xa8\x65\x61\xdd\x42\x3b\x2f\xb7\x96\x7d\x5b\x93\x8b\x5c\x17\xba\xd0\xf5\xda\x1a\x5d\xfe\x52\x30\x23\x43\x42\x49\x52\x5a\xde\xe9\x7d\x6c\xb9\xff\xed\x9b\x2f\x2d\x0b\xf1\x49\x38\x80\xdf\xe3\xa3\x52\xb6\x15\xad\x51\x0e\xf7\xd8\xa4\x0a\xbe\x8f\xc0\x39\x69\x24\xa6\x0a\xd2\xd9\x7c\x31\xfd\x72\xf7\x50\xac\xa7\x0f\x1f\x8b\xc5\xea\x73\xb1\x5c\x2d\x8b\xbb\x4f\x9b\x87\xf9\xac\x58\xae\x66\xf3\x4d\x7a\x7d\x59\x18\x5e\xe8\x9f\x9c\x1d\x81\xbc\x43\x97\x1b\xbd\xcd\x07\x51\x72\x17\xac\x8b\x32\xf8\xf4\x82\xfc\xe3\x2c\xfa\x9b\x3c\xcd\xf6\x19\x83\x5b\x32\xa3\x5d\x25\x8a\x18\x0a\x32\x97\x8e\x50\xac\x53\xc0\xd6\xd5\xc8\x89\x27\xd7\xe9\xb2\x9f\xa9\x93\x05\xd9\xb9\x4b\x83\x6a\x75\x8d\x5c\xf5\x41\xf6\x0c\x75\x00\xb3\xac\xa2\x6d\xbb\x1f\x22\x2f\xe8\x64\x44\x7a\x27\x86\x30\x27\x29\xf3\x3e\x33\x7c\x26\x3f\xbd\xe5\xa3\x4d\xd1\xbd\xa3\x77\xff\xe3\x12\x77\xda\x59\xae\x83\xad\xc3\xd1\xeb\xd5\xac\x58\x4e\xef\xe7\x9b\xf5\xf4\x76\xfe\xfe\xc5\x4b\x4f\x66\x97\x87\xd1\xf6\x0d\x96\xf4\x2a\xb2\xf6\xc6\x6e\xd1\x14\x0d\xb9\x5a\x7b\x7f\x1a\xef\x0c\x82\xbb\x7e\xf8\x6f\xc2\x56\xf9\x30\x32\xbd\x19\x71\xd6\x8e\xe0\xd5\x6b\x20\xae\x1a\xab\x59\xfc\xd5\x29\xf7\xb4\xe6\x02\xb3\xd5\x18\x46\x37\xe8\xba\x41\x29\x0f\x40\x1d\xb1\xf8\x51\xb5\x8b\x15\x3e\xdf\xb6\xa1\x33\x5d\xe3\x9e\xc6\x15\xca\x9f\x31\xaf\xbb\x99\xdc\x4c\xde\x26\xff\x02\x00\x00\xff\xff\xdc\x03\x0d\x3a\x3d\x04\x00\x00")

func stacksLocalstorageStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksLocalstorageStackYaml,
		"stacks/localstorage-stack.yaml",
	)
}

func stacksLocalstorageStackYaml() (*asset, error) {
	bytes, err := stacksLocalstorageStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/localstorage-stack.yaml", size: 1085, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksNfsStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xda\x40\x10\xbd\xf3\x2b\x46\xa8\x47\x9c\x28\x55\x0f\xcd\x4a\x39\x44\x91\x2b\x72\x28\x20\x40\xa8\x37\x34\xd8\x03\x8c\x58\xef\x3a\xbb\x63\x27\xa8\xed\x7f\xaf\x76\xcd\x87\x1d\x40\xaa\x6f\xb3\xf3\xde\xdb\xf9\x78\xeb\x5d\xb5\x22\x67\x48\xc8\xab\x1e\x40\x81\x86\xd7\xe4\x45\xc1\x9f\xa4\x07\x00\x80\x25\x2f\xc8\x79\xb6\x46\x81\x17\xeb\x70\x43\x77\xbb\xef\xfe\x8e\xed\x7d\xfd\x10\x11\x3b\x36\xb9\x82\x59\x93\x7b\xd1\xe8\x7d\x3c\x2e\x48\x30\x47\x41\x15\x23\x00\x83\x05\x29\x30\xeb\x26\x5b\x3a\x5b\x73\x50\x25\xd7\x1c\xf6\x3c\xb9\x9a\xb3\xa6\x0a\xb3\xf6\x49\x1b\x11\x29\x5c\xe0\x86\x14\xbc\x55\xb8\x0f\xb7\xd3\x87\x90\x33\xa8\x97\x87\xaa\xee\x03\x29\xd3\x4c\x46\x3a\x5c\x8d\x42\x5e\xa2\x02\x99\xba\x91\x4a\x60\x32\x1d\x2f\x5e\x67\xaf\xe3\x51\x3a\x5d\x8e\x9e\x7f\xa6\x4f\xc7\xc2\x12\x18\xfd\x98\x2d\x67\xe9\x74\x91\x4e\x9f\xbe\xfc\x3e\x07\xcb\xe1\x78\x36\x0f\xd0\xbf\x2d\xdc\xe4\x79\x3e\xec\xa2\xd2\x5f\x93\xf1\x74\x1e\x13\x0d\xb0\xb6\xba\x2a\x9a\xb6\x02\x2b\x8e\xe4\xbe\x0c\x23\xf5\x42\x46\x0e\xe9\x98\xdd\x68\xbb\x42\xbd\x2c\xc9\x15\xec\x43\xf9\x27\xd6\x86\x64\xa0\xd9\xcb\xe0\x1d\x25\xdb\x0e\x32\x47\x28\x34\xc8\x49\x93\x10\x5c\x17\xbb\x20\x55\x65\x8e\x57\xd0\x99\x46\x2e\xae\x53\x3e\x2f\xfc\x10\x66\x61\xc7\xa7\x5b\x0e\xb5\x34\xea\x83\x32\xf2\xa8\x26\x23\x87\x45\xff\x6f\x33\x5d\x01\x93\x97\x96\x8f\x1a\x8e\xbc\xa0\x13\x05\xa8\xdf\x71\xef\x7b\xf1\xd0\x73\x4e\x3b\xce\x76\xfe\x68\x30\x36\x2c\x49\x67\xda\x2d\xd7\xe4\xc8\x7e\x8b\xe6\xe1\xf1\xf1\x6b\xcb\x28\x6d\x73\x84\x2f\xb3\x45\x81\x26\x3f\xb3\x13\xe8\xfb\x6d\xbf\x1d\x26\x59\x27\x2c\x6c\x65\x04\x12\x09\x96\xfd\x06\xd7\xfd\xa2\x6e\x1a\x04\x2e\x8d\x70\x56\xbf\x68\xe5\xa6\x79\x94\xdf\xa2\xa3\xfc\x04\x2c\x1d\xd7\xac\x69\x43\xb9\x02\x71\x15\x9d\x87\x61\x58\x5e\xac\x11\xe4\xf8\xee\xba\xb9\x30\xa8\x49\xa5\xf5\xc4\x6a\xce\xf6\xe7\x61\xbf\x55\xe4\xa5\xd9\x5f\x02\x35\x3a\xc6\x95\x26\x05\x57\x3a\xed\x01\xe4\xe4\x33\xc7\xa5\xc4\xff\x45\x7f\x68\xbd\x84\x77\x0f\x76\x1d\xf0\x10\xde\x38\xb9\xfe\x2d\x9d\xd6\x68\x2e\xa4\xd2\x8f\xd2\x3a\x81\x12\x65\xfb\x49\xed\x5f\x00\x00\x00\xff\xff\x7c\xd3\x96\x06\xc1\x04\x00\x00")

func stacksNfsStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksNfsStackYaml,
		"stacks/nfs-stack.yaml",
	)
}

func stacksNfsStackYaml() (*asset, error) {
	bytes, err := stacksNfsStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/nfs-stack.yaml", size: 1217, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksPrometheusStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x6d\x6f\xdb\x38\x12\xfe\xde\x5f\x31\xd8\x14\xb0\xdd\x46\x72\xd2\x97\x3d\x54\x41\x51\x14\x87\x00\x57\xdc\xbe\x04\xb7\xf9\x72\xe8\x75\x05\x9a\x1a\x5b\x6c\x28\x52\x47\x8e\xec\x18\x4d\xff\xfb\x81\xa4\x24\xcb\x8e\xdf\xe2\xa6\xdb\xdb\x6d\xf2\x21\xb6\x25\x72\xe6\xe1\xcc\xc3\x19\x72\x48\xae\xd5\x58\x4c\x6c\xf2\x08\xa0\x34\xba\x40\xca\xb1\xb2\x51\x78\xea\x1e\x02\x70\xad\x08\x15\x25\x00\x37\x91\x7f\x00\x30\x91\x7a\xc4\x64\x52\xff\x02\xb0\xdc\xb0\x12\x53\xa1\x08\xcd\x94\xc9\x04\x4e\x5f\xda\x47\x4b\xaf\x3a\x6a\xdc\x5f\x04\x1f\xf5\x28\x55\xac\xc0\x04\x7a\xc2\x92\xd0\x51\x81\x36\xef\xb5\x12\x8f\xe0\xd7\x29\x1a\x23\x32\x04\xca\xb1\x56\x08\x19\x8e\x59\x25\x09\x98\xca\x6a\xc1\x40\xcc\x4c\x90\x2c\x8c\x8d\x2e\x80\x72\x61\x9d\x64\xc0\x29\x9a\x39\xbc\x04\x8b\x5c\xab\xcc\xc6\x9b\x91\xb6\x40\x01\xae\xaa\x11\x1a\x85\x84\x36\xb5\xd9\x2a\x62\x87\xd9\x68\x89\x09\xa0\xca\x4a\x2d\x14\x2d\x3a\x02\xb8\x91\xd8\x92\x71\xec\xb4\x6f\x9f\x2f\x3f\x8a\xe0\xf1\xa7\xcb\xf3\x9f\xce\x7f\x3e\xbf\xfc\xd7\xbf\xd3\x5f\xde\xfe\x7c\xfe\xdb\xc5\xdb\xbf\x9f\x7f\x6e\x1b\x19\x94\x6c\x84\x72\x1d\x00\xab\x2b\xc3\x31\xf5\xef\x6d\x02\xef\xd3\xb4\x40\x62\x69\x17\x38\x9a\xa9\xe0\xe8\x4d\x7b\x0c\xb7\xdf\x37\xe0\xd3\x52\x1b\xf2\xad\x3e\x74\xd0\x31\x4e\x42\xab\x04\xae\x10\xcb\xce\x63\x83\x13\xbc\x4e\x6e\xe1\xfe\x7c\xb6\x60\xcc\xa3\xc6\x6d\xbf\x05\xb7\x04\xf0\x30\xd6\x06\x50\x4d\xf5\x1c\x2c\xb1\xd6\x62\x4b\xde\xf7\xaf\x23\xff\xba\xb7\x97\x9b\x0a\x24\x23\xb8\x4d\x4b\x46\x79\x02\x43\xdf\x73\x78\x0b\xc9\xde\xee\x2c\x75\x76\x3f\xa6\x2f\xb5\xd7\x42\x4c\x28\x34\x87\xd8\xb7\x17\x3f\x89\x82\x35\xdc\x68\x7a\x5b\x95\xb3\x2c\x33\x68\x6d\x9a\xae\x73\xb2\x43\xc2\x94\xd2\xc4\x9c\xba\x74\x61\x9b\x54\x68\x0f\x6c\x1d\x26\x83\xa5\x64\x1c\x6f\xc3\xea\xbf\xff\x3d\xf9\xf0\x74\xd0\x7f\x93\x24\xff\xc9\x9e\x0e\xde\x9c\xf5\xdd\xc7\x52\x3b\xdf\xb3\xf0\x41\xe2\xf1\x69\x72\xfa\xf2\xe4\xd5\x49\xe7\x7d\x98\xa2\x01\x7d\x02\x1d\xec\x9d\x11\x36\x28\x7c\xa3\x82\xad\xb1\xce\xfa\x61\x06\x7f\xf5\xe3\x0e\xa0\x7d\x7c\xd5\xce\xd7\xfd\x2c\xb1\x3c\x82\xb6\xf3\x9d\xe9\xb1\x89\x0f\xbb\x34\x36\x7d\x57\xe6\x40\xba\x91\xaf\x47\x70\x7e\xcd\x65\x95\x21\x58\x5d\x20\xe8\xb1\x8f\xa2\x61\x26\xd6\xf3\x07\x28\x67\x04\x39\x9b\x22\x14\xcc\x5a\x31\x45\xe0\xcc\x64\x42\x31\x29\x68\xde\x91\x74\xe9\x82\xaa\x14\x96\xa0\x60\x73\x50\x88\x19\x90\x86\x11\x42\x69\x2a\x85\x19\x8c\x2b\x43\x39\x1a\x28\xf4\x54\x28\x3f\xe5\x67\xcc\x64\xc7\xc0\x2c\x08\x35\xd6\xa6\xc0\xac\x23\x6d\x34\x87\x12\x8d\x7b\xcc\x14\xc7\x3a\x92\x33\xc9\x46\xc2\xa9\x05\x42\x4b\x42\x4d\xe2\x2d\xa6\x05\x2e\x2b\x4b\x68\xbc\x45\xe0\xc3\x9a\x79\xd4\xd7\x15\x8d\x74\xa5\xb2\x1b\xa1\xc2\x67\x67\x0a\xf8\x78\x31\x88\x9f\xf4\xd6\xf8\x21\x33\xba\xdc\xa6\x99\x78\x99\x96\x06\xc7\xe2\xfa\x8f\xd5\xeb\xac\x8f\x2e\xaa\xd4\x53\x67\xbd\xf6\xf8\xe9\xe0\x10\xe1\xa9\x37\x64\x9a\xae\x15\xea\x29\x93\x92\xb4\x87\x01\xdf\x47\x36\x2f\xd3\x4c\xcf\x94\x25\x83\xac\xf8\x6a\x6a\x72\xa2\x32\xed\x7b\x27\xdc\xb0\xac\x10\xea\x40\x57\xec\xa1\xaa\xe1\x67\x5f\x8e\x6e\x0c\x92\x99\xdf\x8c\x84\xe7\x04\xa1\x51\x4c\xde\x14\xec\xfa\x46\x1b\x31\x71\x53\x6d\x37\x8a\x35\x4b\xa5\x52\x4b\xc1\xe7\xdf\x76\xb1\x74\xb4\x94\x87\x1b\x65\xd6\x85\x86\xde\xb0\x7e\xd5\x45\x68\x79\x8e\x05\x2e\xb7\x73\x3e\xe9\xc5\x0f\xeb\xaf\x5b\xee\x5f\xbf\x3e\xe8\x3a\xff\xcc\xd9\x2e\x2a\xb4\x12\xa4\x8d\x50\x93\xcd\x64\x21\x94\xe8\xfc\xf1\xc0\x97\xef\x8d\x2f\xb7\xd7\xeb\x7b\x90\xa6\x14\x52\xd3\x03\x55\xbe\x3b\xaa\x5c\xbc\xfb\xe9\xd7\xcb\xfd\x69\x32\x61\x52\xe2\x43\x48\xf9\xde\x78\x12\x52\x4a\x70\xfe\x06\x9a\x1c\x35\x9e\xee\x94\x00\xde\x5e\xbc\x03\x07\x0b\xcd\xda\x12\xc0\x02\x5c\xc4\x4a\x51\x37\xec\xfd\xe1\x4e\xa9\x89\xd1\xe1\x9e\xe3\x4b\x02\x6e\x9c\x0b\xa1\x24\x6d\xda\x2d\x8f\x85\x3f\xce\xd2\xb1\x70\x28\x86\x53\x66\x86\xa6\x52\x43\x8b\xdc\x20\xd9\xe1\x02\x7d\x2c\xf4\xb0\x76\x0e\xe3\x5c\x57\x8a\x86\x9c\xc5\xdc\x2c\x34\x8e\x90\x19\x34\x29\xe9\x2b\x54\x07\xc9\xf3\x3d\xff\xff\x69\xb4\x10\x73\xb6\x6c\xdc\x68\x8f\x62\xc1\x4a\xc1\xa1\x63\x8f\xda\x81\xb1\x9d\xf2\xe4\xc5\x8b\xe7\x5b\x08\xa9\x74\x86\x16\xfa\xae\xaf\x44\x1a\xec\x20\xa5\x6f\xdd\xfb\xeb\xf0\x62\xcf\x09\xe5\x86\xbd\x0f\x97\x0e\xa9\xdd\x38\xd9\xeb\x8b\x37\xf7\x4f\x80\x3d\x4b\x42\x0e\xd1\x2a\x8d\x9b\x12\x58\xbc\x54\xf0\x5a\x85\xd8\x4d\x43\x9b\x71\x0e\x59\x29\x86\xd3\xd3\xa1\x67\xd3\xf0\xf1\xe3\x4f\xa7\x9f\x87\xa5\xd1\xd7\xf3\x26\x57\xb5\x7c\xbd\x5d\x43\xfd\x67\x20\x2a\xf0\xb7\xd9\x54\x58\x6d\x9a\x8c\x75\xd4\xf6\xf1\x55\x1a\x61\xc1\xe0\x7f\x2b\x61\x30\x6b\xbb\x85\xe1\xc1\x69\xfc\xb7\xf8\xb9\x4f\xc4\x92\x11\x9a\x63\x98\xe5\x68\xb0\x15\x08\xab\x18\xfa\x94\x6b\x8b\x30\xf3\xff\x7d\xb8\x84\x11\x4e\x84\x82\x99\xa0\x1c\x7a\x8b\x42\x67\x6f\x10\x8a\x48\x23\x44\x05\x06\x0b\x3d\x75\xca\x43\x76\xc7\x56\x5c\x33\x80\xa6\xf8\xd4\x44\x8f\x18\x02\x72\xb7\x08\x08\xd3\xd4\xfa\x05\x44\x8b\xab\x69\x08\xa4\x5b\x61\x6e\x53\x2d\x70\xea\x96\x1a\x0e\x5d\x2d\xf3\xb6\x4d\xde\xa9\x55\x0b\x9c\x44\xee\xff\xb3\x63\xa7\x63\xd1\x13\x98\x41\xd0\x4a\xce\x01\xaf\x4b\x6d\x31\x03\xad\x96\x50\xb4\x12\xff\x71\x79\x79\xd1\x42\x3a\x83\xca\x22\xfc\xb0\xcd\xc9\x9f\x4e\x3f\x27\x2f\x4e\x5f\xbd\x58\x76\xf4\x0f\xad\x3c\xa1\x42\x19\x8e\x33\x8b\xd0\x77\xde\x41\x65\xab\x8e\x5f\x7a\x36\xe8\x0c\x49\x11\x72\x66\x55\x8f\x82\xad\x33\x61\xd9\x48\x62\xe6\x3d\xd2\x4a\x74\xb0\xa3\x88\xb3\xd0\x3d\x72\xc1\xf9\xf5\x49\x6b\xfe\xb1\x64\x93\xc1\x06\xf2\x38\x17\x08\x0b\x4a\x13\x28\xe4\x68\x2d\x33\xf3\xb0\x72\xcb\x75\x25\x33\x18\x61\xeb\x5e\xb1\x62\xd8\x1f\x5d\xbb\x56\x1a\x32\x23\x05\x1a\x70\x59\x5c\x68\x65\x8f\x41\x1b\x10\x04\x33\x21\x25\x70\xe6\x8c\xe6\x50\xb6\x75\x48\x5f\x4c\x0c\xce\xcf\x80\x66\x82\x63\xbc\x23\x20\x37\xc3\x7b\x88\xc9\x0f\x31\xb9\x71\xf5\xd7\x89\xc9\xc3\x86\x6a\x5b\x16\x13\xb5\x5f\x17\x0b\xd0\x5d\xf4\xad\x3b\x44\x6d\x87\x7b\x58\xeb\xde\xcb\x5a\x6f\xe3\xa1\x51\x18\xf4\xfe\x0b\x3c\x32\xd5\xdd\x4e\x47\xf6\x40\xe0\x26\xf8\x21\x87\x27\x69\xdd\x77\x85\x05\x81\x44\x3e\x5e\xbc\xb9\xdb\xe1\xd1\x4e\xac\x8e\x73\x87\x21\xdd\xc2\xda\xdb\xa4\xbf\xf3\xb9\xe0\x6e\xe0\x7b\x9f\x0d\xee\x17\x11\x0e\x3b\x3f\x7c\xfc\xec\x0b\x03\x59\x33\xce\x6f\x71\x38\xb8\x4e\xce\xc1\xfb\xae\x7b\x00\xb0\x23\x14\x95\x3a\xbb\x7b\xf4\xd9\x76\x64\xee\xd7\x5d\x63\x18\x0b\x63\x09\x68\xa6\x83\xe3\xc2\x12\xab\x34\x68\x51\xd1\xb1\x13\xd0\x59\x55\x34\xa9\x1f\x46\x73\xbf\x30\x08\x45\x06\x8b\xdc\x2d\x84\x3e\xea\xd1\xb6\xc3\xc0\x3b\x1e\x7e\x7f\xf5\x38\xb6\xa2\xdd\x8a\x0c\x39\x33\xa9\x1f\x92\x07\x40\x8c\x2a\xbb\x0e\xc0\xd2\xc1\xd3\xfe\x13\x7e\x07\x80\xa0\xb8\x20\x79\x17\x9d\x6e\xd4\x5f\xa4\xf5\xcf\x11\x0e\xbf\xf1\x35\x89\x4e\x98\x7b\xb8\x23\x71\xef\x77\x24\xb6\x05\xbc\xa8\x1b\x61\xbe\x74\x0f\x81\xc4\x87\x41\x1e\x47\x43\x76\x68\xb4\x26\xff\x35\x2e\xb1\xe8\xf6\x40\x43\x9b\xfa\xb8\xff\x11\xcf\x99\x50\x2b\x9d\xae\x70\xbe\xa9\xcf\x15\xce\x57\x1a\x0b\x15\x46\x94\xda\x2b\x51\xa6\x53\x34\x62\x3c\x0f\x21\xcc\x05\xe5\x05\xbd\x21\xd3\x18\xf6\x79\xb6\x2a\x1d\xcf\xa1\x8e\xb5\x8a\x15\x4b\x77\x2f\xbe\xc5\x0d\xaa\xaf\x13\xba\x8f\xa0\x8e\xc4\x10\x02\x30\x2c\xd4\xb8\x3d\x2f\xcb\x32\xcc\x5c\xfa\x69\x5a\x09\xf5\x11\x39\x69\xd3\xd9\xd7\xfa\xed\xba\x8f\xa6\x33\x6d\xae\xa4\x66\x99\x0f\xab\x69\x73\x73\x85\x33\xe5\x93\x59\x89\x5c\x8c\x05\x67\x52\xce\xc1\x33\xd6\x57\x13\x98\xcf\x79\xa4\x41\xa8\x4c\x70\x46\x08\x82\x2c\xb4\xb7\x5e\x34\x18\xe4\x28\xa6\x08\x4e\x26\x90\x61\xe3\xb1\xe0\x5f\x94\xf8\x36\xa4\x9e\x3d\x02\xe1\xf6\x9c\xb1\xde\xda\xfd\xfe\xfb\xdf\xcf\x3e\x3c\x1d\x9c\xf9\xcf\x27\x83\xc1\x4d\xbf\xfe\x76\x16\xd2\xc9\x5f\x2c\x9f\x7c\xf0\x47\x5e\x4a\xce\xbd\x3d\xa0\xb9\x97\xe3\x8b\x39\xc2\x42\xae\x2d\x25\x6e\x6a\x6d\x30\x60\xa0\x93\xa6\x1c\xcd\x4c\x58\x04\xa6\x00\xaf\xc9\xb0\x1a\x71\x5d\x64\x73\xfb\xe5\xde\x82\x9f\x6e\xaf\xe9\x63\x53\x1d\xa9\x36\xe6\xa0\x64\x39\xf5\x3c\x24\xc6\x87\xc4\xe8\x12\xe3\xa3\x7a\x6b\xb1\x72\xd9\x3b\xc4\xe8\x70\x62\x9b\x96\x68\x0a\x61\x7d\xd9\x2e\x3c\x8f\xc2\x59\x49\xfd\xbd\x91\x50\xff\x5c\x2e\x43\x44\x4e\x55\xf3\xb5\x2e\xa9\xf8\x62\x4a\xfd\x28\xe4\x84\x82\x95\x4d\x1b\xc7\xf4\xca\xc8\xd7\x4b\x05\x70\x51\xb0\x89\x4b\x2a\x46\x17\x9d\x5b\xbd\xc9\xf4\x59\xfc\x3c\x3e\x5d\xb4\xb8\xa8\xa4\xbc\xf0\x57\x61\x12\x78\x37\xfe\x45\xd3\x45\xd8\x5c\xf8\x16\xa1\x8c\xdb\x0c\xe0\xd5\xc9\xab\x93\xa1\x9b\x38\xfe\xf7\x52\x66\x8a\xd6\x5c\x7a\xf7\x99\x76\xf1\xb8\xf3\x35\x9e\x17\xb2\x96\x51\x14\x4c\x65\x8d\x8c\x28\xb2\xa4\x0d\x9b\x60\x4c\x36\x1b\xc5\x06\x09\x95\xf3\xcd\xeb\x1f\xf3\xb6\x45\x10\x1e\xbb\x64\xfe\x7a\x87\x86\xff\x05\x00\x00\xff\xff\x28\xbc\xe1\x7c\x93\x2f\x00\x00")

func stacksPrometheusStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksPrometheusStackYaml,
		"stacks/prometheus-stack.yaml",
	)
}

func stacksPrometheusStackYaml() (*asset, error) {
	bytes, err := stacksPrometheusStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/prometheus-stack.yaml", size: 12179, mode: os.FileMode(420), modTime: time.Unix(1551893106, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksRioAutoscalerStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xcd\x6a\x1b\x31\x10\xbe\xfb\x29\xe6\x50\x08\x14\xcb\x7f\x94\x92\x08\x7a\x08\x25\x87\x1e\xda\x9a\xf6\x01\xc2\x58\x9a\xec\x8a\x4a\x23\x21\xcd\xee\xc6\xfd\x79\xf7\xb2\xde\x5d\x3b\x5b\x5c\xc8\x51\xdf\xcf\xcc\xa7\x99\x31\x91\x9f\x5c\x55\xf4\x02\x00\x1b\x89\xc5\xa0\x27\x35\x80\x3d\x06\x60\x22\x0b\xb1\x68\xf8\xad\x4e\x6f\x00\x62\x3c\x78\x52\x83\x54\xa2\xfa\x49\x39\x6a\x90\xdc\xd0\x28\x08\xf8\x3c\xb2\x4d\x52\x19\x85\x34\x6c\x37\x23\xd7\x97\x43\xc7\x94\xfb\x26\xa6\xc9\x99\xd8\x1c\x95\x60\xae\x48\x54\xa2\x6c\x88\x05\xab\xde\xb1\x7a\x95\xc5\xd2\x13\x36\x5e\x34\x6c\x47\x75\x91\x53\xba\xce\xb1\x8d\x9d\x86\xf7\x9b\x32\x12\x09\xd9\x99\x0b\x3e\xc1\xe2\xcc\x0f\xe5\x58\x28\xb7\xe8\x35\xec\x26\x7c\xf6\x3d\x25\x75\xa6\x52\x47\x6f\x35\xbc\x0b\x57\x15\x55\x46\x43\xfd\x0f\x5c\xb4\x1a\x76\x61\xb1\x28\x94\x5b\x67\x68\x36\xdb\x98\x87\xa9\x56\x3e\x1e\xd0\x3f\x26\xca\xc1\x95\xe2\x22\x97\x01\x57\x70\xf3\x16\x86\xf1\x07\x4c\xe5\xe6\x02\x52\x4b\x2c\x67\xa0\x22\x59\x7a\x57\x64\xd9\x24\x8b\x42\xcb\x0e\xc5\xd4\x4b\x4b\x9e\x84\x20\xbb\xb8\x32\x28\xe2\x69\xe5\xe2\x7a\x8a\xf1\xc2\x39\xa8\x5f\xf8\x7b\x8b\x3a\xef\xff\x8a\xb9\x87\x33\x99\x18\x02\xb1\x45\xe9\x03\x5f\xad\x07\x29\xda\xf2\x6f\xc6\x81\x1e\x3b\x11\xdb\x14\x1d\xcb\x7f\xfc\xe7\xb4\x27\xda\x85\xd3\x2d\x58\x74\xa5\x46\xde\xde\xdd\xed\xd6\xb3\xa4\x59\x5b\x6a\x2f\xca\x7d\xe3\xfd\x3e\x7a\x67\x8e\x1a\xd0\x77\x78\x1c\x9a\xd0\x73\x8a\x85\xa6\x01\xdf\x6e\xd6\xb5\x48\x1a\x8f\x3b\x04\x64\x3b\x51\xf3\xda\x23\xa8\x94\xa5\x43\x53\x4d\x71\x51\xa8\xc3\xe3\x99\xeb\x43\x13\x4f\x6b\xba\xdd\x0c\x0b\x22\x6e\xa7\x9a\xdf\x3e\x7d\x7d\xfc\x72\xff\xf9\xe1\xfb\xfe\xfe\xe3\xc3\x87\x37\xbf\x66\xef\x3f\x8b\xbf\x01\x00\x00\xff\xff\x39\x14\x31\xfa\x80\x03\x00\x00")

func stacksRioAutoscalerStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksRioAutoscalerStackYaml,
		"stacks/rio-autoscaler-stack.yaml",
	)
}

func stacksRioAutoscalerStackYaml() (*asset, error) {
	bytes, err := stacksRioAutoscalerStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/rio-autoscaler-stack.yaml", size: 896, mode: os.FileMode(420), modTime: time.Unix(1551893106, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"stacks/build-controller-stack.yaml": stacksBuildControllerStackYaml,
	"stacks/build-stack.yaml":            stacksBuildStackYaml,
	"stacks/cert-manager-stack.yaml":     stacksCertManagerStackYaml,
	"stacks/coredns-stack.yaml":          stacksCorednsStackYaml,
	"stacks/grafana-stack.yaml":          stacksGrafanaStackYaml,
	"stacks/istio-crd-stack.yaml":        stacksIstioCrdStackYaml,
	"stacks/istio-stack.yaml":            stacksIstioStackYaml,
	"stacks/istio-telemetry-stack.yaml":  stacksIstioTelemetryStackYaml,
	"stacks/kiali-stack.yaml":            stacksKialiStackYaml,
	"stacks/localstorage-stack.yaml":     stacksLocalstorageStackYaml,
	"stacks/nfs-stack.yaml":              stacksNfsStackYaml,
	"stacks/prometheus-stack.yaml":       stacksPrometheusStackYaml,
	"stacks/rio-autoscaler-stack.yaml":   stacksRioAutoscalerStackYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"stacks": &bintree{nil, map[string]*bintree{
		"build-controller-stack.yaml": &bintree{stacksBuildControllerStackYaml, map[string]*bintree{}},
		"build-stack.yaml":            &bintree{stacksBuildStackYaml, map[string]*bintree{}},
		"cert-manager-stack.yaml":     &bintree{stacksCertManagerStackYaml, map[string]*bintree{}},
		"coredns-stack.yaml":          &bintree{stacksCorednsStackYaml, map[string]*bintree{}},
		"grafana-stack.yaml":          &bintree{stacksGrafanaStackYaml, map[string]*bintree{}},
		"istio-crd-stack.yaml":        &bintree{stacksIstioCrdStackYaml, map[string]*bintree{}},
		"istio-stack.yaml":            &bintree{stacksIstioStackYaml, map[string]*bintree{}},
		"istio-telemetry-stack.yaml":  &bintree{stacksIstioTelemetryStackYaml, map[string]*bintree{}},
		"kiali-stack.yaml":            &bintree{stacksKialiStackYaml, map[string]*bintree{}},
		"localstorage-stack.yaml":     &bintree{stacksLocalstorageStackYaml, map[string]*bintree{}},
		"nfs-stack.yaml":              &bintree{stacksNfsStackYaml, map[string]*bintree{}},
		"prometheus-stack.yaml":       &bintree{stacksPrometheusStackYaml, map[string]*bintree{}},
		"rio-autoscaler-stack.yaml":   &bintree{stacksRioAutoscalerStackYaml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
