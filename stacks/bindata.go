// Code generated by go-bindata.
// sources:
// stacks/build-stack.yaml
// stacks/cert-manager-stack.yaml
// stacks/coredns-stack.yaml
// stacks/grafana-stack.yaml
// stacks/istio-crd-stack.yaml
// stacks/istio-stack.yaml
// stacks/istio-telemetry-stack.yaml
// stacks/kiali-stack.yaml
// stacks/localstorage-stack.yaml
// stacks/nfs-stack.yaml
// stacks/prometheus-stack.yaml
// stacks/rio-autoscaler-stack.yaml
// stacks/webhook-stack.yaml
// DO NOT EDIT!

package stacks

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _stacksBuildStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x7b\x6b\xe4\x38\x12\xff\x3f\x9f\x42\x34\x03\x7b\xbb\xc4\x6e\xbf\xdb\x36\x04\x2e\x9b\xf4\xde\x85\x79\x64\x98\x64\xef\x58\x96\x25\xc8\x52\xd9\xad\x6b\x5b\x32\x92\xdc\x33\xb9\xd9\xf9\xee\x87\x64\xbb\xdf\xdd\xc3\xed\x3c\x12\x68\xec\xaa\x9f\x4a\xbf\x7a\xb8\x4a\x36\x11\xbc\x64\x95\xca\x2f\x10\xaa\x45\x55\x31\x5e\x99\x4b\x84\x88\xe0\x1a\xb8\xce\xd1\x9f\x8e\xbd\xb7\xea\x1a\x56\x50\xbb\x46\x25\x45\x5d\x83\xcc\x11\xe3\xa5\x18\xf4\xdb\x08\x09\x54\x39\x8c\x33\x7d\x0a\x51\x31\x7d\x56\xff\x1e\x8a\x85\x10\xcb\x3d\xf5\x7f\x71\xeb\x18\x96\x20\x9d\x9e\x77\x8e\xfe\x5c\x2b\x11\xfa\xb8\x75\x8d\xd0\xc4\x5a\x9a\xe4\x68\x62\x6c\x4c\x2e\x77\x95\xd4\x28\x45\xdb\x00\xd7\x93\x1c\x95\xb8\x56\xb0\x87\x50\xb8\x69\x6b\xc6\xab\x49\xbe\x67\x18\x19\x8b\x4c\x33\x6c\x8c\xfb\x9e\x77\xb9\xaf\xd5\x0b\x90\x80\x4b\x0d\xb2\x07\xec\xe8\x3f\xed\x6d\x23\x3a\xdd\x76\xfa\x2d\xd6\x0b\x35\xc9\xd1\xef\x13\xa5\xa9\xe8\xf4\xe4\x8f\x3d\x18\x48\x29\xe4\xfd\x21\x16\xa4\x3c\xc4\x72\x22\x68\xcf\x7c\xf2\x1f\x25\xf8\xbe\xef\x56\x0f\xf2\xc6\x86\xf0\x98\x7b\x9a\x35\xf0\x12\x9e\xcd\xfa\xc9\x81\x77\x36\xac\x83\xb6\x0f\xf1\x01\x84\xe3\xf5\xfa\x3e\x5d\x87\x10\x82\x4d\x01\x0d\xa0\xfe\xe6\x10\xd4\x80\x52\xb8\x1a\x4d\x35\xaa\x3a\x84\x28\x8d\xc9\x52\x4b\x4c\x46\xd4\x46\x70\x84\x3a\xe3\x30\xe7\x63\x68\x4e\xb8\x36\xef\xa3\x73\x1c\x61\x22\x73\x16\x40\x3b\x89\x35\x13\xfc\x2c\xa8\xf7\x77\x1b\xb2\x5b\x22\x17\xdb\xd7\x17\x0a\xe4\x8a\x11\xb0\xcf\x68\xd1\xb1\x9a\x3a\x5b\x4f\xa0\x85\x56\xb5\x28\x70\xfd\xd4\x82\x6c\x98\x52\x4c\x70\xd5\xcb\x1d\xf4\xc3\x4f\xa8\x15\x54\xfd\xb0\xb9\x35\xb9\x51\x2d\x26\xb0\x2d\x54\x40\x24\xe8\x6d\x09\xac\x80\xeb\x5d\x88\x65\x81\x09\x11\xdd\xae\xa6\x7f\x14\x1b\xdc\xee\xac\xff\x60\xda\x87\xa1\x32\xa5\xd0\xd6\xe2\xb9\xd9\xb1\x47\x24\x60\x0d\x97\x15\xe8\xcb\x9a\x29\x7d\xf9\x1e\x6b\xb2\xb8\x6c\xed\x6f\xd7\x52\xa3\xa3\x50\x83\x86\xde\x63\x77\xc9\xb1\x66\x2b\x70\x29\xac\xa6\x56\xf2\x35\x4d\x4d\x95\xc6\xba\xfb\x8a\x16\x35\x34\x6d\x8d\x35\x7c\x1d\x93\xa4\xee\x94\x06\x79\xc2\xf2\x4f\x88\x60\xb2\x60\xbc\x72\x19\xd7\x20\x39\xae\x77\x16\xb3\x06\x57\x3b\x68\xdc\x32\x9b\x1b\x5b\x26\xee\x32\x55\x2e\x13\x53\xd2\x29\x2d\x1a\x09\x4a\x74\x92\x00\x85\xd2\x36\x38\xc1\x87\x85\xd6\x48\x8e\x2a\x22\x0d\x78\x30\xef\x48\xa8\x01\x2b\x50\xd3\x8a\xe9\x45\x57\xb8\x44\x34\xa3\xae\x0f\xc3\x94\x34\x74\xba\xa9\xd5\xbf\xab\x05\x0e\xe2\x24\x4f\x48\xe6\x87\x61\xea\x7b\x30\x8b\x89\x17\xcf\x20\xf1\xd2\xa8\x8c\x29\x49\xe2\x22\x21\x71\x4c\x8a\x2c\x85\x28\x48\xb2\xa0\x8c\xe2\x20\xf2\xcb\x94\x7a\x5e\x10\x7a\xb1\x57\x06\xb3\x02\x67\xe3\x7c\x1a\xe7\x96\x71\x6c\x9c\x5d\x53\xd0\x64\xda\xeb\x9c\x41\x66\x11\xc0\x57\x4c\x0a\x6e\x8a\x70\x5c\xf2\xf0\xdb\xc3\xe3\xfc\xf5\xd3\x9b\xeb\xd7\xf3\x87\xb7\xd7\x37\xf3\xab\x17\x1f\xd7\xd7\x9f\x86\x3d\x9a\x06\x73\x3a\x2e\x30\x06\xb5\xe8\x7b\xee\x28\xea\xef\xf4\x42\x82\x5a\x88\x9a\x0e\xe2\xbb\x37\xbf\xdc\x8f\x88\x61\x16\x9a\x08\x0e\xa2\xbf\x16\xc6\xf5\x48\x1d\xc3\x18\x04\x45\x88\xb3\x99\x4f\x42\xea\xd3\x38\x0e\x32\x82\xfd\xa4\x4c\x8a\x84\xfa\x49\x5a\x60\x2f\x24\x7e\x19\x16\xa4\xf0\x66\x51\x14\xcc\xfc\xb2\x4c\xd3\x34\x08\x67\x51\x49\xc3\x22\x29\x69\x31\x12\xb4\xa3\xf8\x4b\xe9\x8d\xf3\x7c\x24\x07\x49\x59\xe2\x00\x67\x41\x40\x28\xe0\x38\xa6\xb1\x4f\xd3\x24\x4a\x8b\xd8\xf0\x09\x63\x1a\xc7\x59\x0a\x45\x91\xcc\xd2\x2c\x8d\x32\x12\xf9\xa9\x17\x50\x48\x42\x98\x85\x41\x34\xe4\xd8\x41\x0e\x17\xed\x97\x93\xe3\xa2\x1d\x79\x65\x7e\x4c\x8b\x34\xf1\xa8\x5f\x94\xbe\xe7\x87\x41\x50\x86\x71\xe1\x25\x90\x25\x21\xf6\x29\x21\x9e\x07\x19\xf1\x0b\x00\x20\x25\xc6\x50\x26\xb1\x47\x8b\x08\xa2\x38\x4c\x22\x48\xfc\xb1\x05\x2f\xd9\x50\x47\xc3\xa3\xd1\x88\xe2\x79\xba\xd6\xac\x3c\x37\x74\xc3\xa3\x35\xe4\x60\x4a\xc7\xea\xd1\xa4\xcd\xa7\x53\xcf\xb5\xff\x79\xe6\x79\x7e\x5f\xab\x1f\x5a\xa1\x60\x5c\xe1\x7b\x6e\x14\xba\x9e\xeb\x7b\x3d\xc4\xfe\x4c\x35\x69\x2f\xc7\xed\x2c\xb0\x95\x6c\xc5\x6a\xa8\x80\xe6\x48\xcb\xce\xc4\x4b\x42\xc5\x94\x96\xcf\x3b\x44\xd7\xc2\xe0\xec\x5e\x7e\x1e\x7b\x9e\x67\x7f\xec\x5e\xe3\xb2\x8b\x8b\x8b\x65\x57\x80\xe4\xa0\xfb\x81\xb4\x1e\x27\xf4\xa9\x6f\x22\x4f\x63\x17\x79\xda\x6a\x23\x06\xe9\xa0\x9f\x0d\xe1\xc7\xa1\x83\xb9\x87\x8d\x6e\xe5\xe3\xba\x5d\x60\xdf\x82\xef\x0c\x5f\xf7\x6c\x6f\xdb\xc2\x7f\x76\xef\x9b\xbe\x89\xfe\x1f\x14\xb6\x3c\x6b\x30\x67\x25\xa8\xcd\x69\x18\xb7\xec\x5f\x20\x4d\x0b\xcd\xcf\xb7\xdf\x2d\x7b\x08\x2d\x19\xa7\x79\xef\x98\xbd\x6f\x40\x63\x8a\x35\xce\x87\x79\x6f\x76\xcc\xd1\xe6\x49\xdf\x12\x5b\x22\x39\x1a\xeb\xde\x12\xb7\x6a\xd5\x02\x19\xd7\x7f\x51\x9b\xfe\x46\xfd\xc5\xf9\xf6\x01\x1b\x7b\xcf\xf7\x0c\xd7\xb7\xe9\x77\xdf\x23\x58\x44\x39\x25\x68\xb2\x00\xf9\x65\xf1\x22\xb5\xe8\x68\x8f\x04\xa9\xa6\xfb\x76\xbf\x87\x2f\x5c\xb4\xdf\x33\xe7\x5f\x77\x8c\x1c\x0f\xd1\xd9\x8e\x34\xc6\xe5\x58\x2f\x3b\x13\xa6\x9d\x39\xb1\x1d\x8c\x16\x4b\xdc\x80\x06\xa9\x46\x89\x33\x2c\xb9\x7b\x7d\xfd\x8f\xf9\xfa\x2d\x84\x82\x22\x92\xb5\xda\x32\xfc\xb7\x79\xb9\x45\x5a\xa0\xb6\x2b\x6a\xa6\x16\x48\x2f\x00\x49\x50\x5d\xad\x19\xaf\xd0\x66\x58\x6f\xac\xdd\xde\xdf\xbc\x9c\xbf\xfb\xe5\xee\xd5\x09\x93\x8f\x0b\xb0\x48\x24\x4a\x6b\xed\x56\x90\x25\xc8\x92\xd5\xb0\x85\x2f\x71\x57\xeb\x1c\x4d\x36\xca\xc9\xde\x36\x6f\x7f\x7d\xf8\xe7\x49\xce\xe6\x9d\x1c\xb5\x9d\x5a\x20\x21\x11\x17\xfa\x88\x65\x33\x36\xf7\x6d\xde\xde\xbd\x9b\xdf\x3c\xde\xbf\xfb\xed\x34\x73\xca\x24\x10\x2d\xe4\xb3\xfd\x66\x82\x19\x37\x61\x30\x6e\xe0\xb6\x3d\xb2\xcb\xf4\xbd\x90\x4b\x5b\xab\xfb\x7b\xfd\xfc\xeb\xdd\xab\xdb\x97\x77\x8f\x4f\x37\xaf\xee\xe6\x6f\x1e\x9f\xce\x24\x61\x3f\x62\xb6\x14\x5e\x32\x8d\x48\xcd\x80\x6b\xf4\x37\x9b\x73\xa2\xeb\x1f\x77\x12\xb2\xcd\xe3\xc8\x89\xc5\x77\xa4\x10\xba\x06\xa5\xd6\x33\x20\xf2\x66\x84\xcc\xca\x20\x02\x3f\x8e\xf0\xac\x48\xb2\x2c\x9b\x65\x64\x46\x80\xa6\x69\x92\x7a\x31\xc1\x24\x99\x65\x81\xe7\x27\x19\x25\x50\x10\x82\x33\x3f\x49\xa2\x2c\x04\x08\x8a\xe4\xa4\x8b\xb7\xd7\xf3\xd7\xf7\x6f\x9e\xae\x6f\x6f\xdf\xcd\x1f\x1e\x4e\x3b\x69\x4e\x4b\xa0\xd4\x81\x9f\x14\x43\x23\xf8\xe0\xe7\x92\x69\xfa\xe3\xf8\x82\x7a\x2c\xb1\xf6\x9c\xb5\x86\xe6\x7e\x10\x46\x23\x33\xa5\xa1\x3d\x28\xff\xfe\x2d\x1b\x73\xea\x98\x8a\x59\x5b\x1c\x9a\xc7\x8b\x17\x1f\x8f\xa6\x6a\xf3\xda\x6e\x52\xcc\x78\x75\xcb\xa4\x45\xaf\x8b\x68\x83\x18\x8f\x85\xe8\xf7\xc9\x98\xaa\xc9\x25\x9a\xf4\xc7\xc3\xab\xed\x1d\x76\x23\xf5\xc9\xa0\xec\x8a\x83\xaf\x0a\xe6\x6f\xe2\x38\xad\x14\x95\x09\xd9\x55\x5b\x63\xb6\xff\xe9\x67\x8d\x2a\xa5\xfd\xbe\x47\xaf\xe8\xfa\x71\x72\x57\xde\xe7\xd0\x8e\x68\xb5\x21\x60\xe0\x26\x52\x86\xe8\xe6\xe1\xfe\x74\x6a\x79\x2d\x08\xb6\xee\xd9\x8f\x8a\x1f\xf4\x95\xdb\xfb\xba\x96\x6f\x48\x18\xd5\x71\x23\xe6\xa4\x2a\x35\xc8\x2b\x9b\x85\xde\xc0\x28\x1b\x79\x8d\x9c\xfa\x74\x1c\xc7\x98\x8c\x1a\x8c\xe9\x16\x27\x20\xe3\x61\xd7\x65\x5c\x01\xe9\x24\x5c\xd9\xd6\xf0\xc7\xc5\xc5\xc5\xff\x02\x00\x00\xff\xff\xd9\xf8\xa3\x5a\x2f\x15\x00\x00")

func stacksBuildStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksBuildStackYaml,
		"stacks/build-stack.yaml",
	)
}

func stacksBuildStackYaml() (*asset, error) {
	bytes, err := stacksBuildStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/build-stack.yaml", size: 5423, mode: os.FileMode(420), modTime: time.Unix(1550009591, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksCertManagerStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x6b\xdb\x40\x10\xc5\xef\xfa\x14\x83\x5b\x08\x04\xd6\x21\xb7\xa2\x9b\x31\x26\xe4\x90\x36\x84\xde\xc5\x7a\xf5\xac\x2c\xd9\x3f\xea\xcc\xac\x5b\x53\xfa\xdd\x8b\x25\x39\x56\x69\xc0\x3e\xee\x9b\xdf\xcc\xee\x9b\xb7\x02\xde\x7b\x07\xa9\x2b\x22\x07\x56\x13\x6d\xb2\x1d\xf8\x78\x26\xea\x42\xde\xda\xd0\xf4\xe0\xe8\x45\x7c\x4e\x32\xea\x86\x6e\x6e\x07\x7c\xa2\x97\x6f\x5f\x64\xe9\xf3\xdd\xed\xcd\xb9\x8c\x5f\x8a\x34\xf4\xdc\xf9\xd4\x31\x44\x20\xb3\xb2\xcb\x69\xe7\xbb\x68\xfb\xb9\x28\x70\x0c\x9d\x2b\xd8\x23\xe9\xbf\xc8\xf8\xe0\x99\xd4\xe7\x76\x3a\xfa\x68\x3b\xd4\xf4\xf9\xf7\x7a\xf3\xf2\xbd\x79\x5a\x7d\x5d\x3d\x6c\x5e\x9a\xc7\xa7\xd5\xc3\xe6\xcf\x19\x78\x2e\x21\x3c\xe7\xe0\xdd\xa1\xa6\x55\xf8\x69\x0f\x32\xd4\x5c\x8e\xd1\xa6\xf6\xe4\x70\xbe\x8d\x49\x32\x26\xc0\xb6\x60\x83\x00\xa7\x3e\x27\x93\x6c\x84\xf4\xd6\x61\x22\xd8\x67\x23\x07\x51\xc4\xf7\x16\x17\x8a\x28\xd8\x30\x24\x17\x76\xb8\xa6\x27\xe4\x4e\xb3\x68\x0b\x3e\x5d\xbd\x50\x2e\x58\x54\xd5\x5b\xd9\x82\x13\x74\x4c\xec\x7d\x54\xdb\xb8\x22\x9a\x63\x73\xba\xa5\x69\xb1\xf3\xc9\xeb\x29\xb3\x4f\x83\x1f\x3a\xfb\x31\xf4\x28\x52\xc0\xcb\x0f\x62\xdc\xdf\xdb\xd0\xbf\xda\xfb\x01\x5b\xbf\xda\x10\x90\x3a\x5c\x24\xbf\x71\x7b\xcd\x3c\xb0\xfa\x9d\x77\x56\x2f\x4d\xbc\x60\xc9\xd0\x7a\x5c\xed\x15\x46\xaa\x1f\x05\x32\x75\x1a\xda\x5b\xf6\x76\x1b\x50\xd3\xff\xff\xa4\x22\x6a\x21\x8e\x7d\x7f\xc4\x6b\x5a\xcc\xf7\x36\xfe\x1f\xd2\x4c\x45\x8e\x69\xfc\x0d\x00\x00\xff\xff\x22\x78\xed\xc4\x3e\x03\x00\x00")

func stacksCertManagerStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksCertManagerStackYaml,
		"stacks/cert-manager-stack.yaml",
	)
}

func stacksCertManagerStackYaml() (*asset, error) {
	bytes, err := stacksCertManagerStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/cert-manager-stack.yaml", size: 830, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksCorednsStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x52\xcd\x6e\xdb\x3c\x10\xbc\xfb\x29\xf6\x01\x2c\x4a\x82\x3e\x7f\x75\x79\x6c\xea\x43\x2e\x39\xb4\x45\xaf\x06\x43\xae\x4d\xc2\xfc\xc3\x2e\x95\xc6\x68\xfb\xee\x05\x2d\xcb\x50\xe3\x46\x17\x2d\x77\x86\xcb\xc5\xcc\xe8\x14\x0f\xee\xc8\x72\x05\x50\xcb\xfa\xbf\x54\x05\x63\x91\xf0\xab\xb9\x9c\x01\x84\xdc\x0c\xf0\xf3\x7a\xa8\x1f\x12\x25\xe2\x45\xc3\xa2\xf2\xc5\x2e\x1a\xa7\xf1\x19\x29\x62\x41\x06\xed\x47\x2e\x48\xc2\x27\xad\x3c\xb8\xd8\x28\x63\x48\x28\xca\x0a\x5c\xfe\x7f\x2a\x96\xc3\xeb\x97\x93\x61\x70\x91\x51\x8f\x84\x6f\xb0\x31\x73\x21\x54\xe1\x4d\xfb\xa0\xbc\x2f\x96\xd2\x78\xb4\xff\x7e\x64\xc1\xff\xbd\xa8\x33\xa5\x80\xc5\xe2\xc8\x20\x3f\xf6\x9b\xe1\x6f\xe8\xf5\x0c\x02\x5a\x2c\xba\x25\xe4\xe4\x5f\x44\xd5\x69\x41\xd1\x4a\x5b\x84\xa1\x5b\xcd\x83\x19\xe9\xc5\x69\xbc\x6a\x4a\x68\x22\x4f\xb2\xd6\x02\x6c\xe2\x32\x89\xac\xf2\x5e\x19\x23\xe1\x69\xf7\x6d\xff\xe9\xf1\xe9\xf3\xfe\xeb\xee\xcb\xf7\xc7\x87\xdd\x0d\x35\x94\xb2\x04\xe5\xfd\xd5\x94\x10\x54\x34\xd3\xa8\x06\x9a\xdb\x1a\xcd\xb4\xdd\xf5\xa9\xf6\x21\x11\x1e\x9c\xc7\xd9\xc9\xd9\xde\x4a\xbc\x58\xfc\x3e\x1b\x5f\x73\x62\x9c\xc9\x7d\x27\xfe\x1b\x44\x27\xfa\x4e\x6e\x06\xb9\x19\xda\xd1\xe4\xb5\x89\xfc\x0e\x5c\xa1\xa6\xe8\x7c\x85\xab\x90\xeb\x80\x85\x9c\x9e\x6e\x1c\x7d\x7a\x56\x7e\x9f\x91\x82\x63\x76\x29\xde\xb6\xf2\x8e\xcb\xfa\x87\x2a\xda\x02\x46\x93\x93\x8b\x85\xef\xa1\x59\xd6\x7b\xa4\x46\xe5\xbe\x1b\x55\x40\xce\x6a\xbe\x31\xe5\x53\x5b\xd4\x27\x09\xb6\x94\x2c\xdb\xf6\x92\xc7\x6a\x88\xdc\x76\xdb\xae\x5d\x44\xd8\x05\x75\x44\x09\xa7\x2d\x8b\xa3\x26\xe1\xd2\x2c\x98\xec\xc5\x20\xfa\x0b\x27\x60\x48\x74\x96\xf0\xa1\x9b\x82\x48\xa8\xcc\x3e\x45\x7f\x96\x50\x68\x9c\x14\x65\xad\x3c\x4a\xe8\x57\x7f\x02\x00\x00\xff\xff\x30\xd6\x31\xbe\x68\x03\x00\x00")

func stacksCorednsStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksCorednsStackYaml,
		"stacks/coredns-stack.yaml",
	)
}

func stacksCorednsStackYaml() (*asset, error) {
	bytes, err := stacksCorednsStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/coredns-stack.yaml", size: 872, mode: os.FileMode(420), modTime: time.Unix(1549987353, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksGrafanaStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xc1\x6e\xdb\x30\x0c\xbd\xf7\x2b\xf8\x03\x9d\xdb\x0d\x3b\x54\x40\x0e\xea\x92\xb6\x01\xba\x24\x48\xd2\x01\x3b\x19\x8c\x4d\x27\x1a\x64\xc9\x90\x68\x2f\x01\xf6\xf1\x83\x1c\xc7\x56\x92\xa2\xc3\x6e\x36\xdf\xe3\x93\xde\x13\x99\x59\x53\xa8\xad\x17\x37\x00\x5b\x87\x05\x1a\xbc\xcd\xd1\xef\x36\x16\x5d\x5e\x39\xdb\xa8\x9c\x5c\x8b\x02\x64\xd6\x30\x19\x16\xf0\xa7\xfd\x05\xc0\x4a\xfd\x20\xe7\x95\x35\x02\xee\xbb\xda\x45\x0f\xc0\x2d\xe4\xca\xe3\x46\xd3\x98\x34\x71\xcb\x2d\x50\x7b\xea\x60\x80\xc2\xea\x9c\x9c\x00\xe5\x59\xd9\xbe\x6a\xb0\xa4\xcb\x9a\xad\x42\x7f\xaf\xdc\x1e\x87\xbc\x13\x90\x34\xe8\x12\xad\x36\x49\x67\x21\xe9\x2d\xf8\xe4\x42\xc2\x6d\xa7\xf9\x70\x5b\x00\x3e\x54\x24\xa0\x50\x9a\xce\x12\x60\xf4\xb6\x76\x19\xfd\x8f\xf5\xab\xae\x60\x1e\xb3\x8c\xbc\x17\x21\x97\xfd\xa1\x3f\x95\x72\xc5\x21\x13\x01\xec\xea\x21\x0a\xe5\xc7\x54\x60\xad\xf9\xa2\xfe\xcb\x5b\x33\x46\xc6\xd8\x39\xab\x92\xa6\x86\xc9\x35\xa8\x05\x7c\xf5\x17\xc9\x2d\x9c\x2d\x89\x77\x54\xfb\x7f\x79\xaf\xae\x99\xb5\xd3\x02\x76\xcc\x95\x48\x92\x08\xbe\xa1\x3d\x93\x33\xe1\xf5\x5c\xa3\x3a\x9b\x03\x7e\xbc\x5d\x87\xc5\xba\x67\x1a\x71\x6f\x97\xf7\xb1\x91\x4c\xa3\x9c\x35\x65\xc8\xb9\x8f\xef\x79\x29\x9f\xe4\x4c\xa6\x8b\xf9\x72\x3d\xfa\x72\x77\x77\x37\x20\x4f\xa9\x7c\x5b\xbf\xa4\x8f\x72\x35\xfd\x96\x4e\x66\xf2\xf1\x75\x32\x1e\xc5\xa3\x35\x70\xe4\x6c\x3e\xfb\xf9\x7d\xfe\xb6\xea\x79\x51\xbc\xef\xd1\xe6\xcb\xe7\x74\x39\x7f\x9d\x8c\x64\x5e\x2a\x13\x13\x17\x72\xfd\xb2\x4a\xc7\x72\x2d\x47\x49\x78\xf0\xd3\xc8\xb5\x1c\x55\xe2\x96\x04\xe4\xa8\xfc\x0e\xcd\xfd\xc3\xc3\xe7\x13\x2c\x34\x32\x79\x1e\x58\x8b\x5a\xeb\x85\xd5\x2a\x3b\x08\x40\xfd\x1b\x0f\xc7\xf4\x69\x5f\x59\x4f\x83\xff\x60\x39\x09\x2f\x71\x1a\xc3\xd3\xb2\x1e\xe1\x0f\x56\x36\x21\xce\xfa\x7d\x68\xcb\x61\x5a\x95\xd9\xc6\xcb\x71\xdd\xf7\xe9\x80\xa5\x7e\x47\x7f\x18\xed\x8f\x84\x7b\x56\xfc\x3d\x48\x36\x56\xd7\x65\xbc\x1d\x81\x25\xce\x72\xfc\x1b\x00\x00\xff\xff\x93\x91\xc5\x4f\x90\x04\x00\x00")

func stacksGrafanaStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksGrafanaStackYaml,
		"stacks/grafana-stack.yaml",
	)
}

func stacksGrafanaStackYaml() (*asset, error) {
	bytes, err := stacksGrafanaStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/grafana-stack.yaml", size: 1168, mode: os.FileMode(420), modTime: time.Unix(1549987353, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioCrdStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\x41\x4b\xc3\x40\x10\x05\xe0\x7b\x7e\xc5\x42\xce\x46\xaa\x37\x6f\x8a\x45\xbd\xc5\xb6\x78\x0d\xe3\xe6\x35\x1d\x9a\xce\x84\xdd\xd9\x96\xfe\x7b\x71\x5b\x14\x2d\x24\x3d\xbf\xef\x0d\xcb\xdb\x6d\xfa\x44\x10\x18\xe2\x43\xe1\x9c\xd0\x0e\x71\x20\x8f\xb6\xf1\x29\x9a\xee\x9a\x80\xa8\x29\x78\x34\x2d\xd6\x2c\x6c\xac\x92\x65\xe9\xbc\xca\x9a\xbb\xc2\xb9\x1b\xf7\x8c\x68\x2c\xf4\x1d\xd6\xda\xb3\x3f\x56\xa7\xb0\xe2\x68\xac\x15\xeb\xed\x7e\x46\xfd\xb0\xa1\xbb\xcc\xe7\x5d\x40\x8c\x8b\xd4\x63\xdc\x2d\x34\x19\xa6\xd9\xeb\x6a\x55\x3f\xd6\x6f\xcb\x01\xfe\x89\xa5\x65\xe9\xae\xf6\xe3\xf0\x3d\xa9\xd1\xd5\x67\x7f\xf4\x18\x2b\x9d\xc0\x0e\x1a\xb6\x2c\xa7\xe9\x3e\x38\x58\xa2\x7e\x89\xb0\x67\x8f\xea\x37\xbd\xa8\xdf\xff\x9f\x3a\x2f\x33\x59\x38\x5f\x9e\x8b\x85\xe3\xb4\x7e\x21\xc3\x81\x26\x61\xe9\x28\xd9\x06\x62\xec\xf3\x53\x72\xf7\xfc\xf5\x7f\x93\x8b\xfa\xac\xf8\x0a\x00\x00\xff\xff\xbd\xa2\x21\x22\x73\x02\x00\x00")

func stacksIstioCrdStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioCrdStackYaml,
		"stacks/istio-crd-stack.yaml",
	)
}

func stacksIstioCrdStackYaml() (*asset, error) {
	bytes, err := stacksIstioCrdStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-crd-stack.yaml", size: 627, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5d\x6f\xdb\x36\x17\xbe\xf7\xaf\x20\xf4\x06\xc8\xdb\x22\xb4\x9c\xb6\xd9\x1a\x01\xbe\x30\x1c\x17\x0d\x90\xc4\x9e\xed\x62\xe8\x95\x41\x93\xc7\x36\x11\x8a\xd4\x48\xca\x89\xd7\xf5\xbf\x0f\xa4\x24\x8b\x72\xe4\x3a\xdb\x30\xec\x26\xb1\x78\x9e\x73\x74\x3e\x1f\x1e\x51\x25\x57\x7c\x6d\x92\x0e\x42\x29\x98\x8d\xfb\x8f\x10\x55\xd2\x82\xb4\x09\xfa\x03\xfb\x67\x84\x18\x37\x64\x29\x60\xa2\x04\xa7\xbb\xe1\x06\xe8\xa3\x49\x90\xd5\x39\x94\x72\x2e\xd7\x1a\x8c\x19\x2a\x69\xb5\x12\x02\xf4\xbd\x62\x90\xa0\x68\xfc\xe9\x53\x54\x42\x48\x6e\x37\x85\x7e\x82\x1e\xc6\x0f\xa3\xf2\x58\x33\x33\x85\x95\x06\xb3\xb9\x01\x41\x76\x09\xba\xec\x99\x52\x94\xf2\x67\xd0\x53\xc8\x94\xb6\x33\xd0\x5b\xd0\x09\xe2\xc6\x72\x85\x2d\x08\x48\xc1\xea\x5d\xf7\xec\xdb\x7c\x74\x37\xba\x1f\xcd\xa7\x5f\x17\x0f\x83\xfb\xd1\x6c\x32\x18\x8e\xbe\x77\xcd\x96\x76\xa9\xc8\x8d\x05\xdd\x15\x8a\x12\x91\x5c\xf7\xae\x2f\x4b\xb3\x2a\xb7\x4b\x95\x4b\x36\xd7\x64\xb5\xe2\xb4\xf4\xa9\x14\x22\x94\x7a\xcf\x07\x77\x77\xe3\x5f\x17\x83\x87\xaf\x55\x02\x60\x45\x72\x61\x87\x3e\x5d\x35\x98\x71\x43\xd5\x16\xf4\xee\x58\x0c\x3e\x99\x12\xa8\x9d\xf3\x14\x54\x6e\x13\xf4\xbe\x29\x5b\xf1\xf5\x84\xd8\x4d\x82\xa2\x18\x2c\x8d\x7d\x80\x71\xa6\xd5\xf3\x2e\xda\xc3\x96\x5c\x12\xbd\xab\x60\xb9\xd1\xb1\x0f\x2a\x5e\x72\x19\x83\xdc\xaa\x00\x6a\x40\x6f\x39\x85\x61\x11\x7c\x95\x30\x6f\xaf\x76\x5a\x13\x2e\x6f\x72\x4d\x2c\x57\x32\x41\x1f\xae\x6a\x87\x32\xa2\x41\xda\xd9\x26\xb7\x4c\x3d\x05\x98\xcb\x34\xf0\x9a\x4b\x0b\x9a\x42\xe6\x44\x45\x9d\xa7\xa3\x9b\xdb\xe9\x68\x38\xaf\xed\xb8\x17\x0e\x58\xca\xe5\x44\x69\x9b\xa0\xcb\xab\x5e\xaf\x17\x86\xed\xda\x64\x22\x88\x84\x41\x7b\x5b\x04\xa9\x1d\x30\xe6\x7a\x6b\x1f\x0b\x17\xca\x76\xcf\xbe\xd5\xe5\x4e\x9c\xf5\x9f\x3b\x9d\x32\x76\xdf\xcc\x01\xb6\xa8\x96\x20\x4b\x10\xa6\xaa\x9c\x17\x27\xc8\xcb\xfd\xd1\x5a\xa8\x25\x11\x8b\x0c\x74\xca\x8d\xe1\x4a\x96\x50\x8c\xce\xdf\x96\x65\xea\x7a\xa5\x2e\x57\xf1\xdb\xf3\x5a\x26\xc1\x3e\x29\xfd\xc8\xe5\x11\xb9\x6b\x7b\x90\x96\x53\x9f\xc9\x23\x98\x8c\xc3\xb3\x05\xe9\xdf\xdb\x7d\xfc\x68\x1c\x80\xe6\xc6\xaa\x54\x83\x51\xb9\xa6\xc0\x60\xc5\x25\x77\x26\x4c\xa0\x58\x6b\xc5\x76\xc3\x35\xcb\x88\xb6\xbb\x4a\xe5\xf5\xc0\x6e\x2d\x6e\xd7\x29\xc7\xfb\x98\xc9\xbd\x38\x36\x96\xd8\x7c\x8f\xd2\x4b\x42\x83\x88\xcb\x53\xaa\x81\x58\xb8\x58\x83\xbd\x10\xdc\xd8\x8b\x27\x62\xe9\xe6\x22\xcf\x18\xb1\x50\xa6\x3a\x25\x99\x29\xd1\x20\x59\xa6\xb8\xb4\xd5\x73\xa6\x58\xf5\xb3\xaa\x77\xf9\x28\x49\x0a\x26\x23\xc1\x81\x62\x50\x63\xa9\x86\xd2\x88\xe1\x0c\x1e\xb9\xa3\xb0\xce\x41\xab\x25\x41\x8b\xa6\x29\x91\x2c\xa9\x65\x08\x63\xa1\xd6\x0b\x95\xdb\x2c\xb7\x0b\x01\x5b\x10\x7d\x06\xcb\x7c\x8d\x30\xd6\x60\x76\x92\xf6\xdf\x6d\x0e\x26\xdb\xd4\x06\x71\xc1\xaf\xc1\x90\x17\x90\xd8\x1d\xef\x51\x20\xb7\x5c\x2b\x99\x3a\xf6\x0d\x54\x27\xe3\x1b\x4f\x6f\xfd\xb3\xff\x1b\x10\xab\xd8\x85\xfa\xa6\x45\xee\xe7\x21\x04\xf9\x7c\x34\x90\xb7\x77\xe3\xf9\x62\xfe\x79\x3a\x9e\xcf\xef\x46\xfd\xab\x60\x2a\x2b\xe1\x70\x30\xfc\x3c\x5a\xcc\x7e\xf9\x32\x98\x7d\xee\x5f\xd5\x53\x9f\x92\x35\x94\x43\x18\x17\x83\x75\xd9\xed\x75\xaf\x02\xea\xf1\x29\x4e\x10\x67\xae\xe1\xed\xae\x08\x96\x82\xb6\x26\x1c\xbb\x82\x8d\xea\xf0\xe0\x39\x53\x06\xc2\x70\xfd\x3c\xc7\x1b\x6b\xb3\xe6\xe1\x65\x2f\x5e\xeb\x8c\x06\x87\xd7\xbd\xeb\xf7\x1e\x78\xe1\xfe\xe0\x54\x49\x6e\x95\xe6\x72\x7d\xc4\x6d\xf7\xe6\xed\xbb\x03\xc7\xab\x5a\x07\x76\x9b\x84\x89\x11\xc6\x4d\x62\x0d\x44\x01\xd3\x34\x14\x2c\xa4\x99\x20\x16\x3e\x71\x01\x81\xe0\x90\xe5\x0b\x02\x5f\x14\xac\xb6\x23\xa9\xe8\xda\x34\x13\x0d\x4b\xed\x74\x19\x40\x1a\xbc\xf9\xaf\xb7\xd0\xed\xc3\x6c\x3e\x78\x18\x8e\x16\xb7\x93\x0a\xc7\xb3\x37\xaf\x6b\x83\x3d\x33\x53\x6e\x09\x03\x51\x78\xd8\xa8\x51\x25\xa9\x6b\xd4\xa8\x8f\x4b\x08\xc9\x32\x90\x0c\x33\x69\xb0\xf7\xb0\xbf\xdf\x44\x9c\xd4\xb5\x08\x76\x4b\x43\xff\x63\xef\xa7\x5e\xf3\x78\xa3\x8c\x75\x2a\xfd\xf2\x2d\x9d\xba\xbc\x62\x85\x0d\x5f\x4b\x60\x98\x92\xa6\xc1\x12\x8b\x8d\x55\x9a\xac\x01\xef\xb3\xd2\xd7\x5c\x61\xb3\x33\x16\xd2\x13\x97\xc8\x93\xe6\x16\x1a\x24\xb4\xa7\x2f\x42\xa9\xca\xe5\xe1\x69\xf1\xd8\x62\xc9\xd1\x26\x03\x01\x16\x10\x83\x4c\xa8\x9d\x2b\xb4\x79\x29\x6c\xb7\xfe\x12\xd0\x22\x69\xb7\xeb\xb9\xba\x60\xe9\x0a\x18\x5c\x01\x7f\x47\x47\x43\x26\x38\x25\x66\xcf\xcb\xaf\xea\x9c\x35\xb1\xf0\x44\x76\x6d\xb7\x7a\x54\xca\xa2\x04\x45\xee\x3d\x5a\x12\x11\x9d\xa8\x4c\xe4\xfc\x2c\xae\xa0\xc0\xdb\x13\x17\x66\xf4\x63\xe5\xb7\xf1\x96\x6b\x9b\x13\x51\xe5\xf8\x24\x9e\x81\xb1\x5c\xfa\x15\x41\xe7\xe2\x15\x0a\x65\xa4\x25\xb0\x38\x5e\x28\xcd\xdc\xce\x67\xac\xca\xf0\x8a\x6b\x63\xdb\xaf\xbb\x56\x16\x76\x03\x63\x12\x74\xf6\x6d\x32\x9e\xce\x67\xdf\x0f\xf9\x33\x6a\x21\xd0\xe8\xaf\x30\xa8\x56\x79\x93\x37\xf1\x36\x78\x88\xde\x45\x0d\xca\x6b\xdd\xab\x03\xc4\xf9\xa5\x39\x47\xff\x3b\x85\xc2\xb8\xb1\xea\x86\xfa\x1f\xae\xbc\x81\x23\x62\x8c\xdb\x17\xe1\x86\x07\x69\xcf\x99\x38\x09\xf4\xfc\x1d\x7c\x01\x34\x6c\x78\x13\x47\xe5\xa7\x6f\x9d\x17\xd7\xd4\xef\x3c\x7b\xe4\xb2\x5c\x99\xc3\x04\x37\xf3\xeb\xf6\x34\xc3\xbe\xb0\xec\x24\xb2\xb9\xc9\x87\x38\xbf\xd3\x47\xff\xe0\xa6\x6a\x14\xfa\xa5\x23\xe1\x0a\x5f\x6c\xf8\x95\x0c\xe4\xf6\x3f\xb9\xda\x30\xba\x9d\xcd\x6f\xc7\x8b\xfb\xd1\x7c\xb0\xf8\xf1\x5b\x2b\x2e\x0b\xe3\x39\xba\x16\xf9\xf9\x70\x97\xa2\x3b\x0b\x57\xc4\x72\xb1\x2e\x87\x1d\x97\x4c\xd8\xf9\x2d\x77\x74\xe1\x49\x0c\xa3\x2d\xd1\xdc\x7d\x9b\x27\xa8\xe5\x53\xb8\xe3\xbe\x5c\x0d\xd5\x3c\x2b\xbe\xe3\xa2\x83\x0f\xe8\x7a\x69\x8e\x3a\x9d\xce\x9f\x01\x00\x00\xff\xff\x87\x77\x60\xa3\x0d\x10\x00\x00")

func stacksIstioStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioStackYaml,
		"stacks/istio-stack.yaml",
	)
}

func stacksIstioStackYaml() (*asset, error) {
	bytes, err := stacksIstioStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-stack.yaml", size: 4109, mode: os.FileMode(420), modTime: time.Unix(1548134863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioTelemetryStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x7b\x6f\x1b\x37\xb6\xff\xbf\x9f\x82\x90\x03\x34\x01\xac\x87\x7d\xd3\x7b\x1b\x01\xfe\x43\xb1\xe5\x5e\xed\x36\xb6\x61\x29\xbb\xc0\x16\xc5\x80\xe6\x1c\x49\x84\x67\xc8\x59\x92\x63\x5b\x59\xef\x7e\xf6\x05\x39\x2f\xce\x53\x33\x72\xdc\xa0\xed\xa4\x45\x22\x93\xe7\x77\x48\x1e\x9e\xd7\x1c\x8e\x68\x09\xe2\x81\x12\x90\xd3\xef\x10\xa2\x52\x51\x3e\x54\xe0\x81\x0f\x4a\xec\x74\x13\x42\x1b\x8f\xdf\x61\xcf\x09\x40\xf8\x54\x4a\xca\x99\x8c\xda\x87\x48\x70\x0f\xce\x88\x17\x4a\x05\x62\x88\x5d\x9f\x32\xd3\x41\x7d\xbc\x81\x69\xc4\x6c\xec\xd3\x27\x10\xd3\x93\xd1\x64\xf4\x3e\xeb\xbc\x09\x3d\xef\x86\x7b\x94\xec\xa6\x08\x7b\x8f\x78\x27\x4d\x1f\xe1\xbe\x8f\x99\x9b\xb0\x1f\x0e\xb1\xeb\x0a\x90\x32\xfe\x39\x64\xf4\x69\x3a\x1e\x8f\x25\x27\xf7\x11\xdf\x91\xfe\x08\x2a\xa5\x27\x9c\xad\xe9\x66\xa9\xb8\x80\xcf\xb7\x3f\x9f\xdd\xff\x28\xa7\xe3\x71\xa1\xf7\x02\xd6\x38\xf4\xd4\x15\xf6\x41\x06\x98\xc0\xd9\x9b\x7f\x5d\xcd\x3e\xcd\x97\x37\xb3\xf3\xf9\xbf\x0d\xed\x03\xf7\x42\x1f\xd2\x55\x86\xae\x1c\x46\xe3\x4c\xcd\xd0\xa6\x19\xd8\x03\x15\x9c\xf9\xc0\x54\x42\xf7\xd3\xf5\xc5\xfc\xe3\xe7\x9f\xce\x36\x44\x09\xcd\xf7\x34\x22\x7c\x0a\xb8\x84\x84\xe6\xc3\xe4\xc3\xff\x8c\x15\x09\x8e\xb7\x4a\x05\x43\x9f\x33\xaa\xb8\xa0\x6c\x13\x77\xbf\x3f\x7d\x7f\x7a\x6a\xfa\x03\xc1\x7d\x50\x5b\x08\xa3\xc5\x4b\xea\xc2\x3d\x25\xf7\xf1\xa4\x92\x9d\x0a\x04\x7f\xda\x25\x4d\xf9\xb1\xf4\x9f\x23\x34\x44\x27\x3f\x4c\x3e\x4c\xb2\x21\x81\x3d\xf0\x9d\xc6\xf9\x29\x95\xa1\x99\xbc\xd7\x34\x56\xdb\x87\xc9\x87\x13\x03\xdb\x88\x80\xa4\xed\xb9\xad\x35\xa3\x3f\x9c\x5a\x9b\x5b\xda\xc4\x88\x97\x21\xb4\x7e\x1e\x0e\x63\xa5\x3b\x8f\x74\xc7\xea\x2a\x68\x60\x0e\xa4\xc0\x0f\x3c\xac\xe0\x92\x7a\x60\x75\x8c\x41\x91\xb1\x35\xa3\xb1\x59\xa3\x93\xf2\x18\xed\xb0\xef\x8d\x94\x1f\x78\x39\x6e\x84\x33\x25\xb8\x77\xe3\x61\x06\xb3\x50\x6d\x23\x7d\xb4\x48\xae\xae\xaf\xe6\x99\x68\x8b\xfb\x1d\xd1\xdc\x5c\x5f\x38\x5a\x7b\xce\xde\xbc\x95\xe0\xad\xc7\x0c\xfb\xf0\xae\xa2\xdf\x68\x97\x4d\x64\x54\xcf\xa6\x5c\x5c\x2d\x57\xb3\xab\xf3\xb9\xb3\xb8\x49\xe8\x68\x90\x11\x48\x20\x02\x94\x9c\x22\xea\x02\x53\x54\xed\xa6\x66\xd9\x04\x84\x92\x29\x51\x4e\x71\x6b\x94\xf7\xbb\xfb\xf0\x0e\x04\x03\x15\xd1\xa5\x73\x71\x1d\x12\x4a\xc5\x7d\x47\x80\xe4\xa1\x20\xe0\xb8\xb0\xa6\x8c\xaa\xc4\xe0\x87\x48\x4b\x93\x92\x51\x64\x46\x23\x23\xf1\x11\xe5\xe3\x87\x13\xec\x05\x5b\x7c\x6a\x68\x44\xe8\x41\x33\x45\xa6\xd9\xcd\x74\xd9\x3c\x9b\xe9\x12\xad\x68\xa6\xc2\x4a\x09\x7a\x17\x2a\xf0\x31\xa3\x6b\x90\xaa\x99\x9c\x32\xa9\x30\x23\xfb\x98\xba\x38\x50\x20\x9a\x89\xb6\x98\xb9\xde\x3e\x22\x8f\x6f\x80\x69\x5d\x6d\xa4\x92\xca\xa5\xbc\xad\xd4\x80\x3d\x34\x91\x5a\x1b\x9f\x88\x64\x8a\x9e\x87\x46\x75\x70\x40\xff\x06\x42\xbb\xfa\x29\x1a\xd4\xf1\x18\x18\xd2\x7b\xca\xdc\x69\x59\xba\xa6\xcf\x07\x85\x5d\xac\x70\xa2\x8f\x7a\xc8\xd8\x77\x64\x1e\x41\x06\x40\x12\x82\x94\x8d\xa5\xc2\x5c\xd0\x0d\x65\x23\x1a\x64\x4d\x08\x3d\x60\x2f\x84\xd5\x2e\x80\x29\x5a\xdc\x38\xb3\x8b\x8b\xdb\xf9\x72\x59\x84\x84\xd4\xad\xc1\x2c\x57\xb7\x8b\xab\x9f\x4a\xf4\x12\x44\x3b\x80\x80\x7f\x86\x5a\x85\xb6\x80\x5d\x10\xb2\x11\xe4\x7c\x9a\xdd\x94\x80\x6d\x67\x96\x0e\xc4\xa5\xea\x86\xd0\x26\xc6\x3b\x8e\x12\x60\xb5\xed\x86\x10\x80\x25\x67\x5d\x31\x6b\x10\x5d\x25\x2d\xc9\x16\x7c\xe8\x86\x51\x5c\x61\xcf\x91\xf4\x4b\x0e\x57\xc0\x2e\xae\x56\xff\xfb\xbe\x3c\x5c\x01\xb4\x17\xa0\x68\xed\xec\x56\x8b\x4f\xf3\xe5\x6a\xf6\xa9\xac\x05\x5a\xe1\xf0\x26\x17\x51\x9a\xd7\x25\x03\xce\xa4\xf6\x49\x6e\xdb\xd9\xc5\x08\x37\x14\x58\x3b\xf2\x1a\xd4\xc5\xe7\xdb\xd9\x6a\x71\x7d\x55\x06\x1e\xa0\xe1\x31\xf2\x20\xe9\xc7\xd8\x0e\xe2\x4f\x46\xeb\x22\xff\x28\xbe\xb5\xf7\x0f\x09\xbd\xf6\x0f\xe8\x08\x5d\xcc\x6f\x6e\xe7\xe7\xb3\xd5\xfc\xa2\x0b\x3a\x10\x94\x11\x1a\x60\xaf\xdd\x98\x2e\x48\x45\x99\xd9\xb4\xf6\x13\xb5\x41\x2f\x18\x2f\xe0\xa2\x4e\x25\xf3\xe2\x27\x9c\x31\x20\x06\x03\x0f\xad\xf5\xd8\x42\xb5\x5d\x98\x05\x11\x40\x80\x3e\x80\x3b\xba\xdb\xe5\xe2\x44\xbb\x69\xe6\xd1\x8e\x51\xd2\xae\x3c\x24\x30\x75\xd8\xe8\x19\xf2\xb0\x91\xbb\x9a\xb1\x05\xf5\x95\x57\x37\xdd\x8f\xd7\xd7\x3f\x57\xcb\xca\xb8\x29\x70\x1d\x9d\xad\x83\x70\x4c\xfc\x6e\xbb\x5f\x0a\x9e\xd4\x28\x10\x5c\x71\xc2\x5b\xea\x60\x82\xd2\xc6\x2c\x15\xf6\xeb\x42\x7e\xd9\xa2\x6d\x64\x6b\xd0\x11\xba\x80\x40\x00\xc1\x0a\xdc\x63\x74\x0f\x81\x42\x6b\x2e\xf4\xf3\x4b\x80\x15\xbd\xa3\x1e\x55\xbb\xd2\x08\x02\xb4\x75\x80\x18\x79\x9c\xd4\x6e\x60\x51\xa2\x79\xa4\x49\x99\x3a\x09\x24\x85\xb6\xf6\x04\x38\xa0\xa3\xf8\x19\xab\x3d\xe0\x21\xce\xf9\x5a\x03\x78\x00\x8d\x0a\x59\x01\xe9\xa6\x11\x49\xa4\xc4\xa1\xda\x76\xf5\x68\x39\x2c\x0e\x5d\x0a\x8c\xd4\x9a\x6c\xf3\xb8\x3a\x99\x56\x5d\x53\x16\x83\x25\x1e\xa6\xfe\x01\x09\xa2\x01\x0b\xfc\xe8\xb4\x60\x50\x06\x07\xd4\xb9\x87\xdd\x7e\xd0\x70\xf8\x1b\xe4\xfb\xd9\x13\x49\xab\x7c\x3f\x0e\x97\x5d\xf2\xfd\x18\xe2\xe1\x3b\xa8\x75\x72\x15\xb2\x8e\x61\xc5\x59\xb7\x06\xb6\x77\x87\x16\xc0\x3c\x72\x75\x42\xf1\x47\xd6\x56\xf5\x62\x44\x62\xf8\xe8\xe0\x64\x25\xe6\x30\x23\x84\x87\x6d\xc3\x7a\x1e\xda\x52\x65\x63\xd0\x23\x17\xf7\x1e\xc7\x6e\xe7\x9c\x2c\x05\x76\xde\x8c\x1c\xb2\xc3\xae\xd8\x89\x52\x17\x25\xb5\x71\x5d\x35\xd5\xc6\x76\x57\x57\x1b\xdd\x41\x99\x6c\x58\x7b\xe9\xda\x28\x1d\xbe\x30\x65\x20\x0e\xc4\xbf\x60\x67\x52\x13\xe8\x6c\x01\x15\x5c\x0e\x4b\xc0\x13\xf0\x61\x6b\xb7\xd1\x2f\x93\x41\x87\xe2\x41\x05\xba\x93\x0b\xb0\xf1\xdd\x4d\xba\x12\x7d\x98\xf4\x0e\x31\xee\x83\x83\xa1\xa9\xca\x35\x04\xc0\xb8\x00\x58\x8a\x7e\x3c\x54\x41\xa8\x66\xf2\x2f\x52\x0f\xa5\x44\x08\x2f\x9b\x47\x52\x43\x6c\x98\x0a\x26\x04\xa4\xf4\xf8\xa6\x34\x19\x09\x0f\x20\xa8\xda\x4d\xd1\xf7\x83\x05\x5b\xf3\xc1\xf7\x71\x47\x96\x8c\xe7\x8a\x1d\xdf\x25\xa2\x14\x14\xdf\x79\xe5\x00\xbe\x08\xa6\x59\x28\x47\xcf\x88\x06\x6f\x07\x93\x91\xf9\x6f\xf0\xae\x40\x3b\x0b\x32\xe2\xc8\x35\xfe\x32\xc0\x41\x30\xf8\x15\x3d\xa3\xc1\xa0\x40\x7c\x93\x66\x81\xa5\x27\xeb\x2a\xf2\x2b\xb3\x6e\x2b\x00\x57\x11\xfd\x3d\x56\x97\x69\x65\x70\xa8\x63\x1b\xe9\x55\x29\xb8\x57\x91\x5f\x1b\xb7\x9b\x8b\xe8\x79\x32\x4b\x79\x8d\x34\xca\xd1\xa2\x52\x24\x16\xd9\xa2\x80\x6a\x90\xba\x45\xb6\x8c\xac\xfc\xff\xb5\x8b\xa8\x75\x1e\xb5\x63\x66\x72\xab\x35\xbe\x5a\x6c\xb4\x31\x45\x77\xdf\x48\x1e\x0b\xbc\x32\x44\xd4\x02\x63\xd1\x97\x82\x60\x2d\xc0\x52\xb0\xca\x7a\x4a\x1e\x88\x03\x7a\x1e\xa5\xe8\x75\xb9\x7b\x89\xfe\xaf\xb0\x9b\x16\x73\x75\xf4\x5c\x2c\x2a\xff\x32\x78\x1a\xe2\x80\x0e\xef\x61\x57\xdc\xf5\xf4\x19\xaa\x50\x1e\x45\xcf\xa5\x07\x6f\x0d\xdc\x2a\x15\x64\xe0\xb8\x30\x5c\x28\x14\xe7\x07\x08\x85\xc5\x3b\xc0\x6a\x9b\xef\x4e\xaa\x6e\xe7\xdc\x85\x69\xbe\x2c\x89\x9e\xd1\xa4\x44\xb7\xa4\x5f\x6c\x3a\x49\xbf\x14\xe9\xcc\x48\x09\x59\x56\x82\xad\xa2\x5a\x58\x73\xb7\x44\x15\x37\x0d\xa9\x5b\x94\x16\xf1\x28\x30\xb5\x12\x98\x40\x0d\x36\xa2\x18\x9a\x53\xdb\x0a\x06\x1e\x56\xc0\xc8\x6e\x5a\x2e\xa7\x6a\xba\x89\x2f\x07\xf6\x03\x7b\x5c\x3d\x71\x24\x90\x50\x3b\x54\x27\x88\xcf\xb9\x09\x67\xae\x39\x4d\xc3\xde\xdb\xb7\x95\x45\x01\xcd\x8e\xb2\x3b\x1e\x32\x77\xf0\x0e\x9d\x9d\xa1\x01\x0f\x55\xf4\xe3\x31\x1a\x84\xec\x9e\xf1\x47\x36\x38\xce\x71\x2a\x94\x78\xd0\x33\x5a\x63\x4f\xc2\x31\x1a\xf8\xa1\x0a\xb1\xe7\x28\x4f\x6a\x34\xe3\x0c\x06\xef\xde\x15\xa5\x09\xee\xd2\xd4\x76\x22\x6b\xdc\x57\xfc\x29\x68\x89\x04\x31\x33\xe5\xeb\x72\x45\xbb\x5a\x61\x56\x76\x2c\xb1\x2a\xb7\x16\x61\x54\x9e\xfb\x68\xaa\x6b\x15\x95\xfc\x9c\x46\xe8\xa7\xf2\x94\xb2\x54\x76\x2e\x28\x4f\x74\xe8\x50\x3c\x85\xc8\xcf\x53\x5b\xca\x2c\x54\x5b\x1e\x45\xc2\x92\xaa\x4c\x71\xd2\x69\x74\xc4\x3e\x9d\xc9\x33\x7a\xba\xe4\xe2\x11\x0b\x17\xdc\x4b\x2e\x2a\x75\x6e\x9d\x10\xe8\x4f\x91\xc6\x25\x8e\xda\x9a\x74\xa4\x1c\x2f\xd7\x9d\x28\xf0\xe8\x4f\x96\x4b\x4b\x23\x42\xfc\x1a\x02\xb8\xd9\xd9\xaf\x32\xd9\xd1\xf7\x83\xe8\xdd\x8f\x38\x19\x78\xcd\xcc\x44\x91\xe0\x65\xc9\x89\x5d\x02\x44\xcf\x59\xcf\xdb\xc1\xe9\xe4\xe4\xff\x86\x93\x93\xe1\xe4\x64\x35\x99\x4c\xcd\xff\xff\x48\xd7\x5e\x91\xc0\x64\x56\x30\x37\x45\xed\x52\x99\xbb\x2a\xc2\xf7\xf9\x8e\x4d\xde\xe7\x3b\x25\xec\x1f\x24\xdf\xc9\x72\x8f\xaa\x54\x43\x91\xa0\x2a\x18\x5e\x24\xe7\x16\x55\x87\x19\x7f\xee\x20\x5a\x88\x78\xb5\x47\x55\x75\x81\xaf\xf2\x74\x29\x47\x6c\x22\xe2\x6d\xcb\x61\xa2\x73\xa9\x32\x7e\xb9\x67\xc4\x0a\xdc\x1f\x26\x7a\x89\x30\x7e\xdd\xac\x3a\x72\x65\x8f\xff\x76\xc8\xf2\xb1\x22\xdb\x0a\x23\xd1\x6b\x33\x09\x39\x7a\xae\xc8\xd6\x75\xef\x46\x04\x24\xd1\x0f\x4c\x54\xf6\xbe\xa5\xf5\x32\x51\x5a\x54\x18\x65\xa3\xeb\x3f\xc9\x6b\x4b\xb9\x57\xc0\xd2\xb8\x3a\xca\xc5\xe1\x57\x95\x47\xf2\x2e\x61\x5b\x91\x58\x8e\xe3\xab\xac\xd9\x4e\x27\xbe\xd2\xb2\xa3\xb7\xdf\x1a\x16\x1e\x5b\xbb\xa9\x97\x95\x16\x6f\x6a\x4e\x53\x34\x38\x49\x96\xe9\x52\x1f\x98\xb4\x57\xfa\xdb\x99\x4c\x12\xa6\x9d\xc7\xbd\x89\x40\xe2\x30\xeb\x90\x0e\x2b\x65\x06\xe5\xe2\x5b\x13\xa3\xa0\x39\xbf\xa9\x83\xe1\xa6\x1c\xaa\x0e\x94\x1c\x70\x16\x81\x71\x7b\x0d\xd8\x92\xa0\x25\xb0\xc6\x0c\xa0\x15\x0f\x5b\x74\xcd\xc5\xcb\xbd\x2c\x83\x16\x31\xbc\x91\x01\xde\x9b\x84\x35\xc2\x53\xc1\x56\xb1\x68\x2f\xdd\xb4\x6a\xdf\x94\x99\xb5\xe1\x10\xbd\xaa\x50\x5b\x50\xef\xc4\xa6\x62\x87\x4a\xc5\xf9\x4a\x86\xb1\x3f\x70\xb2\x94\xc9\x3e\x00\xaf\x29\xd6\x54\x70\x89\x9e\x6c\x1d\x52\x59\x6d\x39\x9d\x4c\x7e\x77\x89\x53\x43\xc4\xfe\x7c\xb5\xbc\x99\x9f\x2f\x2e\x17\xf3\x8b\x97\x86\xed\xb6\xfe\x3a\xc9\x43\xeb\x5c\xf6\xbe\xaa\x4f\xef\xc8\x7b\x47\xde\x3b\xf2\xde\x91\xf7\x8e\xfc\x1b\x3b\x72\x49\xbf\x40\xbd\x13\xaf\x3c\x55\xe8\x7d\x77\xef\xbb\x7b\xdf\xdd\xfb\xee\xde\x77\x7f\x3b\xdf\x1d\x89\xb2\xd9\x79\x57\x9f\x1c\xf7\xde\xbb\xf7\xde\xbd\xf7\xee\xbd\x77\xef\xbd\xbf\x95\xf7\x56\x24\x30\xc7\x3f\x50\x5f\xf1\xde\x77\x40\xd5\x3b\xf1\xde\x89\xf7\x4e\xbc\x83\x13\xef\xec\x7d\xbf\xb5\x13\xef\x7d\xea\x21\x3e\x35\x39\x97\x6f\xe1\x57\x6b\xdf\x14\xe8\x7d\x6b\xef\x5b\x7b\xdf\xda\xfb\xd6\x3f\x8b\x6f\x2d\x5c\x9a\xd5\xed\xeb\x38\x91\x63\xb6\xde\x3b\xc9\x17\x97\xa3\x37\x9c\x52\xc1\x27\x6f\x9d\x38\xe5\x77\x3f\x46\xf1\x3d\x49\xa5\x7b\xc5\xb2\x89\x9e\x5f\x7f\xbe\x5a\xcd\x6f\xd3\x56\xa3\xc6\x91\x26\xd8\x6f\xb1\x24\x9b\x65\x35\x65\xae\xa9\xdc\x98\x9a\x62\xb9\x2b\xb1\xf7\xfa\x9e\x4c\x0f\xcb\x34\xb1\x75\x59\x1d\x05\xbb\xae\xe9\xa9\x9a\x50\x95\x97\xda\xd3\x5d\x39\xb5\x0a\xd7\x50\xd3\x1b\x5b\x52\x73\xaf\x19\xa3\x05\x49\x71\x1a\xc5\x27\xd4\x5c\x97\xf5\xd8\x69\xb5\xd7\xdb\x6c\xb5\xea\x39\xc9\xc1\xb3\x26\xe7\xcc\x95\x7b\x94\x30\x21\x6f\xa1\x87\x17\x8b\xe5\xea\x76\xf1\xf1\x73\xee\xd6\x88\x5e\x19\x7b\x65\xb4\x6f\xc2\xbb\x0b\xc9\x3d\xa8\xdc\xd7\x95\xe1\x29\xf0\x28\xa1\xca\xa9\xe8\x43\xc8\x44\x10\x39\x45\xbf\x4c\x46\x93\xc9\x0f\xc7\x68\x32\x9a\x9c\x98\xbf\x4f\xa3\x1f\xcc\xdf\xa6\x25\x6a\xf8\xe1\x18\x9d\x1c\xa3\x53\xfd\xaf\xfe\x38\xf9\xb5\xc6\x0e\x4c\x7a\xbb\x47\xf9\x25\xfd\x02\xbd\xe2\xf7\x8a\xff\x7a\x8a\xcf\x19\x30\x45\xb1\xf7\xb1\x4a\xf5\x59\xe8\x5f\x52\x46\x15\x24\xbd\xe8\xc7\x5c\xbf\x24\xd8\x83\x29\x3a\xc9\x35\x6e\x04\x7f\x54\xdb\x4b\x4c\x14\x17\x53\x74\x32\x29\xa9\x7f\xbc\x82\x3d\xfa\x9f\x1d\xa4\xf4\x06\xd0\x1b\x80\xd5\xf5\x7b\x37\x00\x45\x02\x47\x02\x8b\x03\x40\x73\x22\x6e\x55\xa4\xfb\x3c\xfc\x4f\x64\x00\xad\x93\x6a\xad\x4c\x49\xc1\xac\x83\x42\xa5\x35\xb6\x5e\xa9\x7a\xa5\x22\xaf\xfb\x0d\x9a\x40\x70\x7f\xab\x54\xb7\x6f\xd0\x7c\xcd\x2f\x15\x15\xea\x28\xa8\xee\x5b\x36\x15\x55\x8f\x72\x6f\xe1\x71\xb4\x4c\x60\x65\x2c\x15\x61\xab\xd8\xfb\x9a\x42\x7f\xd5\x6f\x2d\xb5\x15\x6a\x39\x82\x95\x3b\x0b\xde\xe8\x65\x82\xc9\x5d\x19\xdd\x20\xa1\xba\xc2\xd9\x11\x7a\xdc\x02\x43\x22\x64\x8c\xb2\x0d\x5a\x0b\xee\x23\x73\x3b\x3f\x12\x9c\xab\x63\x14\x4a\x40\x6a\x0b\x68\xcd\x3d\x8f\x3f\x6a\x92\x68\x56\x08\xaf\x15\x08\x84\x5d\x57\xb7\xe1\x94\x9b\xdc\xf9\x77\xda\xc8\x90\x47\xd9\x3d\x52\x1c\x61\x6b\x8a\x09\x76\x4d\x3d\x40\x0f\x34\x9d\xe2\x51\x0a\x7f\x83\x3c\x86\x86\x12\xfd\x67\x3c\xd2\xb0\x71\x0c\x30\x33\x1a\xc7\x37\x76\x8f\x33\x86\xe6\x63\x44\x53\x62\x95\x75\x39\xe6\x6e\x64\x34\x68\xc1\x65\xf0\xaa\x6a\xaa\xc7\xc1\x4a\x89\x0d\x30\x4d\x99\x52\xe7\xae\xd5\xdb\xab\x8b\xe5\x2d\xaf\x55\xc7\xec\x8e\xbe\x51\xe1\x26\xbf\xd7\x5a\xa2\x22\x41\x9b\x55\x7e\x35\xc3\xfc\xb6\xc2\x28\xf0\xa9\xb9\xb7\x29\x1d\xb7\xc2\xfa\x6e\xb0\x94\xc6\xc0\xb4\x3f\xa5\x02\xdc\x8c\x1c\x69\x56\xda\x84\x74\x77\xac\xb5\x31\x2e\x8e\xfe\x21\xcd\x0e\xe6\x42\x9a\xbb\x07\x26\xa6\xa0\x4d\x37\x1b\xa0\x23\xe4\x46\xbf\x4f\x43\x8f\x12\x32\x3d\x33\xba\xa6\xe0\x22\x1a\x68\xcb\x4e\x46\xb3\x23\xae\x19\xd2\x3e\xea\x28\x8c\x9b\x4b\x32\xb8\x28\x7c\x51\x5f\xb7\x58\x47\x9c\xe9\x52\x9d\x3b\xca\xb4\x23\xb1\xf6\xeb\x08\x5d\x52\xcf\x33\x6b\x67\xf0\x68\x09\x31\xf2\x51\x96\x4c\xb4\xf7\x77\x43\x02\x6e\x7c\x29\xd7\xc8\xe2\xf1\x86\x87\x2a\xba\x3f\x44\x1a\x67\xc4\x52\xd5\x40\x7c\x8d\xae\x0d\xfd\x2a\xfe\x1d\x04\xc8\x07\x29\xf1\x26\xcb\x21\x52\xc1\x4d\x0d\x9f\x51\x92\xcc\x71\xd7\xd9\x7b\x4d\x84\xb9\x39\xad\x04\x8b\x85\x55\x73\xfc\x98\x5c\x2d\x98\x83\x45\x6d\xe8\x19\x81\x1f\xa8\xdd\x52\x09\xca\x36\x9f\x70\xf0\xb6\x34\x60\xa4\x6c\xc5\x11\xf7\x1c\xd3\x5a\x77\xac\xe5\xa0\xb9\x83\xab\x58\x49\x4a\xd8\xe8\x3e\xc2\x1c\x2e\xbd\xad\xa0\x6e\xbc\xc2\xcd\x74\x39\x70\x92\xcd\xe1\xa8\x73\xef\xdc\x73\xb7\xd4\xe5\x38\xa5\xf9\xe9\x1e\x81\xe7\x6f\xaa\xab\x66\xd1\x7a\x16\x35\xa2\x2c\xe7\xca\xfb\x4e\x17\x33\x8d\xcb\x5b\x53\xa3\xda\x15\x6c\xb2\x86\x41\x9d\x3c\xca\xc7\xb2\x15\x0c\xf6\xab\xa2\xcd\xc6\x12\x69\x71\x16\x6d\x8e\x58\x8b\x17\x50\x96\x39\xa5\x04\xed\xf8\x15\xb7\xc7\x66\xd5\xac\xee\x36\x17\x5b\xe7\x6d\x0e\xf5\x8a\x5f\x71\x2e\x9c\xd7\xfe\xaa\x07\x9a\xbd\x26\x50\xf9\x3e\x40\xf5\xbe\xef\x35\x86\xda\x77\x0b\x9a\x98\x75\x9b\x59\x93\xf0\x5b\x18\x88\x0e\xd0\xff\x0d\x00\x00\xff\xff\x23\x8a\x4e\x56\xeb\x6a\x00\x00")

func stacksIstioTelemetryStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioTelemetryStackYaml,
		"stacks/istio-telemetry-stack.yaml",
	)
}

func stacksIstioTelemetryStackYaml() (*asset, error) {
	bytes, err := stacksIstioTelemetryStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-telemetry-stack.yaml", size: 27371, mode: os.FileMode(420), modTime: time.Unix(1548038518, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksKialiStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x5d\x6b\xdb\x30\x14\x7d\xf7\xaf\xb8\x84\x40\x61\x34\x71\x3a\xf6\x64\xc8\x83\x49\xb5\x2d\xd0\xa6\xc1\x4e\xba\x47\xa3\xd8\xb7\x8e\x88\x2c\x79\x92\xec\xb4\x64\xfd\xef\x43\x8e\x54\x67\xa5\x29\xcb\x8b\x7d\x3f\xce\x39\xba\x70\xef\xc9\xa5\x78\x62\xa5\x8e\x02\x80\x1d\xa3\x9c\x8d\x8e\x05\x9b\x03\xe4\x52\x18\x14\x26\x82\x3f\xa3\x2e\x07\xd0\xa8\x5a\x54\x91\xcb\x00\x6a\xa9\x4c\x04\x5f\x27\x93\xc9\x8d\xab\xe1\xb3\x41\x25\x28\xcf\x2c\x94\xe5\xa8\x7b\x70\xa9\xe8\x13\x15\xb4\x2f\x00\x34\x8a\x47\x30\x3c\xfc\x48\xe2\xef\xf1\x22\xce\xd6\xc9\xdd\x6b\x70\x4a\xec\x66\x3a\x12\x4a\x2e\x37\x94\x67\x35\xaa\x8a\x69\xcd\xa4\x70\xca\x23\x18\x94\x68\xae\x39\xd3\xe6\x7a\x4f\x4d\xbe\x05\x81\x66\x2f\xd5\x8e\x89\x72\xcc\xb4\x61\x72\xcc\x64\xd8\x32\x65\x1a\xca\xbd\xf6\xe0\x02\x6a\x81\xda\x30\x41\x0d\x93\x42\x35\xfc\x32\xae\x7b\x0f\x85\x51\xec\x32\x66\x49\x0d\xee\xe9\xcb\x59\xce\x71\x4f\x3d\xfe\xcb\x39\xe0\xf9\xce\xc6\x7e\xcf\xb7\x69\x5d\xeb\x4f\xba\x8d\x91\x3a\xa7\x9c\x89\xd2\x83\x58\x45\x4b\x8c\xa0\x90\xf9\x0e\x95\x9d\xa9\xdb\xde\xf1\x1b\xb5\x93\xf1\xcd\xa4\x83\xa1\x68\x99\x92\xa2\xb2\x97\xe5\xc4\xe3\xd9\x6a\xfe\x48\xb2\x45\x7c\x4f\xd2\x65\x3c\x23\xd3\xe1\xe1\x2d\x7e\x75\x98\x94\x24\x8f\x24\xc9\x66\x09\xb9\x25\x8b\xd5\x3c\xbe\x4b\xb3\x75\x4a\x12\x8b\x9b\x0e\x0f\x3e\xfc\x04\xbd\x8c\xd3\xf4\xd7\x43\x72\x3b\x1d\x1e\x7c\xe8\xd1\xcb\xe4\xe1\x9e\xac\x7e\x92\x75\x9a\x59\xe2\x7c\x46\xec\x29\x5a\x60\xdf\xe8\x6e\xf3\xe8\x8a\xaa\xa2\xa2\xf0\xb3\x3b\xc7\xb8\x2c\x3c\x75\x51\xa3\xba\xab\x09\xdd\xae\x5e\x68\xc5\x3d\xa9\x75\xc1\xd5\xb7\x2b\x6f\x35\xef\x43\x5b\xfe\xc7\x8b\xff\xa5\x89\xcf\xb5\xd4\xe8\xf9\x9d\x23\xc3\xad\x31\x75\x10\x78\x47\x9e\xfa\xaa\x56\xb2\x42\xb3\xc5\xc6\xbd\xe8\x7a\xd1\x49\x23\xec\xc3\xe0\x9d\x77\xdf\xd0\xae\x1a\xba\x7f\x10\xfc\x6e\xac\x59\x9c\x37\x47\xd0\x52\xc5\xe8\x86\x63\x04\x7e\x3f\x1d\xbf\x40\x9d\x2b\x56\x5b\x60\x04\x83\x46\xdb\xf1\x2a\x04\x23\x81\xcb\x92\x09\x28\xa8\xde\x6e\x24\x55\xc5\xe0\x9d\x8a\xdf\xdb\x07\x2a\x35\xd5\x7a\x2f\x55\xf1\xa1\xca\xdf\x00\x00\x00\xff\xff\x3d\xcf\x6a\x21\xe6\x04\x00\x00")

func stacksKialiStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksKialiStackYaml,
		"stacks/kiali-stack.yaml",
	)
}

func stacksKialiStackYaml() (*asset, error) {
	bytes, err := stacksKialiStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/kiali-stack.yaml", size: 1254, mode: os.FileMode(420), modTime: time.Unix(1549987353, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksLocalstorageStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x53\x51\x8b\xd3\x40\x10\x7e\xcf\xaf\x18\x82\x70\x2a\x97\xe6\xf4\x49\x16\x7c\xa8\xd7\x16\x85\xbb\xb6\xd8\x53\x1f\x44\xc2\x34\x99\xb6\xeb\x6d\x66\xc3\xee\x24\x20\xea\x7f\x97\xdd\xa4\x69\x7b\x70\x3e\x25\x33\xdf\x37\xbb\xb3\xdf\x37\xf3\xd8\x6e\xc9\x31\x09\x79\x95\x00\xd4\xc8\x7a\x47\x5e\x14\xfc\xc9\x12\x00\x00\x6c\xf4\x57\x72\x5e\x5b\x56\xe0\xc5\x3a\xdc\xd3\xe4\xf1\x9d\x9f\x68\x9b\x77\x6f\x22\xe3\x51\x73\xa5\x60\xd3\x63\xb7\x06\xbd\x8f\xe9\x9a\x04\x2b\x14\x54\x31\x02\x60\xac\x49\x81\xb1\x25\x9a\x21\x83\xcc\x56\x50\xb4\x65\x7f\x24\xc1\xf1\x8e\x32\x9c\x33\x39\xf5\x16\xee\xd3\x3e\xab\x68\x87\xad\x91\x2c\xc2\x0a\x52\x71\x2d\xa5\xb1\xb6\x71\xb6\xd3\xa1\x4d\x72\x0a\x1c\x72\x79\x20\x17\x8a\xe2\x85\x59\x83\x72\x88\xb4\xce\x9a\xb6\xa6\x0f\x9a\x2b\xcd\xfb\x7b\x5b\x91\x82\x6f\xa8\x65\x61\xdd\x42\x3b\x2f\xb7\x96\x7d\x5b\x93\x8b\x5c\x17\xba\xd0\xf5\xda\x1a\x5d\xfe\x52\x30\x23\x43\x42\x49\x52\x5a\xde\xe9\x7d\x6c\xb9\xff\xed\x9b\x2f\x2d\x0b\xf1\x49\x38\x80\xdf\xe3\xa3\x52\xb6\x15\xad\x51\x0e\xf7\xd8\xa4\x0a\xbe\x8f\xc0\x39\x69\x24\xa6\x0a\xd2\xd9\x7c\x31\xfd\x72\xf7\x50\xac\xa7\x0f\x1f\x8b\xc5\xea\x73\xb1\x5c\x2d\x8b\xbb\x4f\x9b\x87\xf9\xac\x58\xae\x66\xf3\x4d\x7a\x7d\x59\x18\x5e\xe8\x9f\x9c\x1d\x81\xbc\x43\x97\x1b\xbd\xcd\x07\x51\x72\x17\xac\x8b\x32\xf8\xf4\x82\xfc\xe3\x2c\xfa\x9b\x3c\xcd\xf6\x19\x83\x5b\x32\xa3\x5d\x25\x8a\x18\x0a\x32\x97\x8e\x50\xac\x53\xc0\xd6\xd5\xc8\x89\x27\xd7\xe9\xb2\x9f\xa9\x93\x05\xd9\xb9\x4b\x83\x6a\x75\x8d\x5c\xf5\x41\xf6\x0c\x75\x00\xb3\xac\xa2\x6d\xbb\x1f\x22\x2f\xe8\x64\x44\x7a\x27\x86\x30\x27\x29\xf3\x3e\x33\x7c\x26\x3f\xbd\xe5\xa3\x4d\xd1\xbd\xa3\x77\xff\xe3\x12\x77\xda\x59\xae\x83\xad\xc3\xd1\xeb\xd5\xac\x58\x4e\xef\xe7\x9b\xf5\xf4\x76\xfe\xfe\xc5\x4b\x4f\x66\x97\x87\xd1\xf6\x0d\x96\xf4\x2a\xb2\xf6\xc6\x6e\xd1\x14\x0d\xb9\x5a\x7b\x7f\x1a\xef\x0c\x82\xbb\x7e\xf8\x6f\xc2\x56\xf9\x30\x32\xbd\x19\x71\xd6\x8e\xe0\xd5\x6b\x20\xae\x1a\xab\x59\xfc\xd5\x29\xf7\xb4\xe6\x02\xb3\xd5\x18\x46\x37\xe8\xba\x41\x29\x0f\x40\x1d\xb1\xf8\x51\xb5\x8b\x15\x3e\xdf\xb6\xa1\x33\x5d\xe3\x9e\xc6\x15\xca\x9f\x31\xaf\xbb\x99\xdc\x4c\xde\x26\xff\x02\x00\x00\xff\xff\xdc\x03\x0d\x3a\x3d\x04\x00\x00")

func stacksLocalstorageStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksLocalstorageStackYaml,
		"stacks/localstorage-stack.yaml",
	)
}

func stacksLocalstorageStackYaml() (*asset, error) {
	bytes, err := stacksLocalstorageStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/localstorage-stack.yaml", size: 1085, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksNfsStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xda\x40\x10\xbd\xf3\x2b\x46\xa8\x47\x9c\x28\x55\x0f\xcd\x4a\x39\x44\x91\x2b\x72\x28\x20\x40\xa8\x37\x34\xd8\x03\x8c\x58\xef\x3a\xbb\x63\x27\xa8\xed\x7f\xaf\x76\xcd\x87\x1d\x40\xaa\x6f\xb3\xf3\xde\xdb\xf9\x78\xeb\x5d\xb5\x22\x67\x48\xc8\xab\x1e\x40\x81\x86\xd7\xe4\x45\xc1\x9f\xa4\x07\x00\x80\x25\x2f\xc8\x79\xb6\x46\x81\x17\xeb\x70\x43\x77\xbb\xef\xfe\x8e\xed\x7d\xfd\x10\x11\x3b\x36\xb9\x82\x59\x93\x7b\xd1\xe8\x7d\x3c\x2e\x48\x30\x47\x41\x15\x23\x00\x83\x05\x29\x30\xeb\x26\x5b\x3a\x5b\x73\x50\x25\xd7\x1c\xf6\x3c\xb9\x9a\xb3\xa6\x0a\xb3\xf6\x49\x1b\x11\x29\x5c\xe0\x86\x14\xbc\x55\xb8\x0f\xb7\xd3\x87\x90\x33\xa8\x97\x87\xaa\xee\x03\x29\xd3\x4c\x46\x3a\x5c\x8d\x42\x5e\xa2\x02\x99\xba\x91\x4a\x60\x32\x1d\x2f\x5e\x67\xaf\xe3\x51\x3a\x5d\x8e\x9e\x7f\xa6\x4f\xc7\xc2\x12\x18\xfd\x98\x2d\x67\xe9\x74\x91\x4e\x9f\xbe\xfc\x3e\x07\xcb\xe1\x78\x36\x0f\xd0\xbf\x2d\xdc\xe4\x79\x3e\xec\xa2\xd2\x5f\x93\xf1\x74\x1e\x13\x0d\xb0\xb6\xba\x2a\x9a\xb6\x02\x2b\x8e\xe4\xbe\x0c\x23\xf5\x42\x46\x0e\xe9\x98\xdd\x68\xbb\x42\xbd\x2c\xc9\x15\xec\x43\xf9\x27\xd6\x86\x64\xa0\xd9\xcb\xe0\x1d\x25\xdb\x0e\x32\x47\x28\x34\xc8\x49\x93\x10\x5c\x17\xbb\x20\x55\x65\x8e\x57\xd0\x99\x46\x2e\xae\x53\x3e\x2f\xfc\x10\x66\x61\xc7\xa7\x5b\x0e\xb5\x34\xea\x83\x32\xf2\xa8\x26\x23\x87\x45\xff\x6f\x33\x5d\x01\x93\x97\x96\x8f\x1a\x8e\xbc\xa0\x13\x05\xa8\xdf\x71\xef\x7b\xf1\xd0\x73\x4e\x3b\xce\x76\xfe\x68\x30\x36\x2c\x49\x67\xda\x2d\xd7\xe4\xc8\x7e\x8b\xe6\xe1\xf1\xf1\x6b\xcb\x28\x6d\x73\x84\x2f\xb3\x45\x81\x26\x3f\xb3\x13\xe8\xfb\x6d\xbf\x1d\x26\x59\x27\x2c\x6c\x65\x04\x12\x09\x96\xfd\x06\xd7\xfd\xa2\x6e\x1a\x04\x2e\x8d\x70\x56\xbf\x68\xe5\xa6\x79\x94\xdf\xa2\xa3\xfc\x04\x2c\x1d\xd7\xac\x69\x43\xb9\x02\x71\x15\x9d\x87\x61\x58\x5e\xac\x11\xe4\xf8\xee\xba\xb9\x30\xa8\x49\xa5\xf5\xc4\x6a\xce\xf6\xe7\x61\xbf\x55\xe4\xa5\xd9\x5f\x02\x35\x3a\xc6\x95\x26\x05\x57\x3a\xed\x01\xe4\xe4\x33\xc7\xa5\xc4\xff\x45\x7f\x68\xbd\x84\x77\x0f\x76\x1d\xf0\x10\xde\x38\xb9\xfe\x2d\x9d\xd6\x68\x2e\xa4\xd2\x8f\xd2\x3a\x81\x12\x65\xfb\x49\xed\x5f\x00\x00\x00\xff\xff\x7c\xd3\x96\x06\xc1\x04\x00\x00")

func stacksNfsStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksNfsStackYaml,
		"stacks/nfs-stack.yaml",
	)
}

func stacksNfsStackYaml() (*asset, error) {
	bytes, err := stacksNfsStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/nfs-stack.yaml", size: 1217, mode: os.FileMode(420), modTime: time.Unix(1547439073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksPrometheusStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x6d\x6f\xdb\x38\x12\xfe\xde\x5f\x31\xd8\x04\xb0\xdd\x46\x72\xd2\x97\x3d\x54\x41\x51\xf4\x0e\x01\xae\xb8\xdd\xbd\xe0\x36\x5f\x0e\xbd\xac\x40\x53\x63\x9b\x0d\x45\xea\xc8\x91\x1d\xa3\xe9\x7f\x3f\x90\x94\x64\xd9\xf1\x5b\xdc\xb4\xb9\x76\x93\x0f\xb1\x2d\x91\x33\x0f\x67\x1e\xce\x90\x43\x72\xad\x86\x62\x64\x93\x27\x00\x85\xd1\x39\xd2\x18\x4b\x1b\x85\xa7\xee\x21\x00\xd7\x8a\x50\x51\x02\x70\x13\xf9\x07\x00\x23\xa9\x07\x4c\x26\xd5\x2f\x00\xcb\x0d\x2b\x30\x15\x8a\xd0\x4c\x98\x4c\xe0\xe4\x95\x7d\xb2\xf0\xaa\xa5\xc6\xfd\x45\xf0\x51\x0f\x52\xc5\x72\x4c\xa0\x23\x2c\x09\x1d\xe5\x68\xc7\x9d\x46\xe2\x01\xfc\x73\x82\xc6\x88\x0c\x81\xc6\x58\x29\x84\x0c\x87\xac\x94\x04\x4c\x65\x95\x60\x20\x66\x46\x48\x16\x86\x46\xe7\x40\x63\x61\x9d\x64\xc0\x09\x9a\x19\xbc\x02\x8b\x5c\xab\xcc\xc6\xeb\x91\x36\x40\x01\xae\xca\x01\x1a\x85\x84\x36\xb5\xd9\x32\x62\x87\xd9\x68\x89\x09\xa0\xca\x0a\x2d\x14\xcd\x3b\x02\xb8\x91\xd8\x82\x71\x6c\xb5\x6f\x9e\x2f\x3e\x8a\xe0\xf0\xd3\xc5\xd9\x2f\x67\xbf\x9e\x5d\xfc\xeb\xdf\xe9\x6f\xef\x7e\x3d\xfb\xfd\xfc\xdd\xdf\xce\x3e\x37\x8d\x0c\x4a\x36\x40\xb9\x0a\x80\xd5\xa5\xe1\x98\xfa\xf7\x36\x81\x0f\x69\x9a\x23\xb1\xb4\x0d\x1c\xcd\x44\x70\xf4\xa6\x3d\x82\xdb\xef\x6b\xf0\x69\xa1\x0d\xf9\x56\x97\x2d\x74\x8c\x93\xd0\x2a\x81\x2b\xc4\xa2\xf5\xd8\xe0\x08\xaf\x13\x08\x7e\x22\x94\x98\x23\x99\xd9\xe9\x9c\x2f\x4f\x6a\xa7\xfd\x1e\x9c\x12\xa0\xc3\x50\x1b\x40\x35\xd1\x33\xb0\xc4\x1a\x7b\x2d\xf8\xde\xbf\x8e\xfc\xeb\xce\x4e\x4e\x72\xaa\x05\xb7\x69\xc1\x68\x9c\x40\xdf\xf7\xec\xdf\x42\xb2\xb3\x33\x0b\x9d\xdd\x8f\xe1\x0b\xed\xb5\x10\x13\x0a\xcd\x3e\xd6\xed\xc4\x4f\xa3\x60\x0d\x37\x9a\xce\x46\xe5\x2c\xcb\x0c\x5a\x9b\xa6\xab\x5c\xec\x90\x30\xa5\x34\x31\xa7\x2e\x9d\xdb\x26\x15\xda\x03\x5b\x85\xc9\x60\x21\x19\xc7\xdb\xb0\xba\x1f\xfe\x48\x2e\x9f\xf5\xba\x6f\x93\xe4\x3f\xd9\xb3\xde\xdb\xd3\xae\xfb\x58\x68\xe7\x7b\xe6\x3e\x44\x1c\x9e\x24\x27\xaf\x8e\x5f\x1f\xb7\xde\x87\x09\x1a\xd0\x27\xd0\xc2\xde\x1a\x61\x8d\xc2\x37\xca\xd9\x0a\xeb\xac\x1e\x66\xf0\x57\x37\x6e\x01\xda\xc5\x57\xcd\x6c\xdd\xcd\x12\x8b\x23\x68\x3a\xdf\x99\x1e\xeb\xf8\xb0\x4d\x63\xdd\x77\x69\x0e\xa4\x6b\xf9\x7a\x00\x67\xd7\x5c\x96\x19\x82\xd5\x39\x82\x1e\xfa\x18\x1a\x66\x62\x35\x7f\x80\xc6\x8c\x60\xcc\x26\x08\x39\xb3\x56\x4c\x10\x38\x33\x99\x50\x4c\x0a\x9a\xb5\x24\x5d\xb8\x90\x2a\x85\x25\xc8\xd9\x0c\x14\x62\x06\xa4\x61\x80\x50\x98\x52\x61\x06\xc3\xd2\xd0\x18\x0d\xe4\x7a\x22\x94\x9f\xf2\x53\x66\xb2\x23\x60\x16\x84\x1a\x6a\x93\x63\xd6\x92\x36\x98\x41\x81\xc6\x3d\x66\x8a\x63\x15\xc7\x99\x64\x03\xe1\xd4\x02\xa1\x25\xa1\x46\xf1\x06\xd3\x02\x97\xa5\x25\x34\xde\x22\x70\xb9\x62\x1e\x75\x75\x49\x03\x5d\xaa\xec\x46\xa8\xf0\xd9\x9a\x02\x3e\x5e\xf4\xe2\xa7\x9d\x15\x7e\xc8\x8c\x2e\x36\x69\x26\x5e\xa4\x85\xc1\xa1\xb8\xfe\xb6\x7a\x9d\xf5\xd1\x45\x95\x6a\xea\xac\xd6\x1e\x3f\xeb\xed\x23\x3c\xf5\x86\x4c\xd3\x95\x42\x3d\x65\x52\x92\x76\x3f\xe0\xbb\xc8\xe6\x45\x9a\xe9\xa9\xb2\x64\x90\xe5\x5f\x4d\xcd\x98\xa8\x48\xbb\xde\x09\x37\x2c\xcb\x85\xda\xd3\x15\x3b\xa8\xaa\xf9\xd9\x95\x83\x1b\xe3\xf2\xe4\xcd\x40\x78\x4e\x10\x1a\xc5\xe4\x4d\xce\xae\x6f\xb4\x11\x23\x37\xd5\xb6\xa3\x58\xb1\x50\x2a\xb4\x14\x7c\xf6\xb0\x4b\xa5\x83\x85\x3c\x5c\x2b\xb3\x2e\x34\x74\xfa\xd5\xab\x36\x42\xcb\xc7\x98\xe3\x62\x3b\xe7\x93\x4e\xfc\x00\xab\xaf\x5f\xfe\xfa\x1d\x2e\xbb\x82\xd7\x4f\x9d\xd1\xa2\x5c\x2b\x41\xda\x08\x35\x5a\xcf\x92\x66\x99\xf6\x48\x94\xbd\x89\xf2\x63\x2c\xd3\x77\xa0\x4c\x21\xa4\xa6\x47\xa2\xec\x4d\x94\xef\x33\xa2\x38\xa7\xef\xc2\x8e\x11\x93\x12\x1f\xe3\xc8\x9f\x8c\x1e\xc1\xeb\x6b\xf8\x71\x50\xbb\xb8\xb5\xd3\x7f\x77\xfe\x1e\x1c\x2c\x34\x2b\x77\xfa\x73\x70\x11\x2b\x44\xd5\xb0\xf3\xcd\xbd\x51\x31\xa2\x45\x3a\x47\x94\x04\xdc\x38\xe7\x42\x49\xda\xb4\x5d\x03\x0b\x7f\x9c\xa5\x43\xe1\x50\xf4\x27\xcc\xf4\x4d\xa9\xfa\x16\xb9\x41\xb2\xfd\x39\xfa\x58\xe8\x7e\xe5\x1c\xc6\xb9\x2e\x15\xf5\x39\x8b\xb9\x99\x6b\x1c\x20\x33\x68\x52\xd2\x57\xa8\xf6\x92\xe7\x7b\xfe\xff\xd3\x68\x2e\xe6\x74\xd1\xb8\xd1\x0e\x35\x81\xa5\xba\x42\xcb\x1e\x95\x03\x63\x3b\xe1\xc9\xcb\x97\x2f\x36\x10\x52\xe9\x0c\x2d\x74\x5d\x5f\x89\xd4\xdb\x42\x4a\xdf\xba\xf3\xe3\xf0\x62\xc7\x09\xe5\x86\xbd\x0b\x97\xf6\x29\xd1\x38\xd9\xab\x6b\x34\xf7\x4f\x80\x1d\x2b\x3f\x0e\xd1\x32\x8d\xeb\x4a\x57\xbc\x50\xd7\x5a\x86\xd8\xce\x3f\xeb\x71\xf6\x59\x21\xfa\x93\x93\xbe\x67\x53\xff\xf0\xf0\xd3\xc9\xe7\x7e\x61\xf4\xf5\xac\x4e\x52\x0d\x5f\x6f\x97\x4a\xff\x11\x88\x0a\xfc\x5d\x36\x11\x56\x9b\x3a\x55\x1d\x34\x7d\x7c\x31\x46\x58\x30\xf8\xdf\x52\x18\xcc\x9a\x6e\x61\x78\x70\x12\xff\x25\x7e\xe1\x33\xb0\x64\x84\xe6\x08\xa6\x63\x34\xd8\x08\x84\x65\x0c\x5d\x1a\x6b\x8b\x30\xf5\xff\x7d\xb8\x84\x01\x8e\x84\x82\xa9\xa0\x31\x74\xe6\xf5\xcc\x4e\x2f\xd4\x8a\x06\x88\x0a\x0c\xe6\x7a\xe2\x94\x87\xb4\x8e\x8d\xb8\x7a\x00\x75\x8d\xa9\x8e\x1e\x31\x04\xe4\x2e\xfb\x87\x69\x6a\xfd\xca\xa1\xc1\x55\x37\x04\xd2\x8d\x30\xb7\x77\x16\x38\x71\x6b\x0c\x87\xae\x92\x79\xdb\x26\xef\xd5\xb2\x05\x8e\x23\xf7\xff\xf9\x91\xd3\x31\xef\x09\xcc\x20\x68\x25\x67\x80\xd7\x85\xb6\x98\x81\x56\x0b\x28\x1a\x89\x7f\xbf\xb8\x38\x6f\x20\x9d\x42\x69\x11\x7e\xda\xe4\xe4\x4f\x27\x9f\x93\x97\x27\xaf\x5f\x2e\x3a\xfa\xa7\x46\x9e\x50\xa1\xda\xc6\x99\x45\xe8\x3a\xef\xa0\xb2\x65\xcb\x2f\x1d\x1b\x74\x86\xa4\x08\x63\x66\x55\x87\x82\xad\x33\x61\xd9\x40\x62\xe6\x3d\xd2\x48\x74\xb0\xa3\x88\xb3\xd0\x3d\x72\xc1\xf9\xcd\x71\x63\xfe\xa1\x64\xa3\xde\x1a\xf2\x38\x17\x08\x0b\x4a\x13\x28\xe4\x68\x2d\x33\xb3\xb0\x64\x1b\xeb\x52\x66\x30\xc0\xc6\xbd\x62\xc9\xb0\x3f\xbb\x76\x8d\x34\x64\x46\x0a\x34\xe0\xb2\xb8\xd0\xca\x1e\x81\x36\x20\x08\xa6\x42\x4a\xe0\xcc\x19\xcd\xa1\x6c\xca\x8d\xbe\x66\x18\x9c\x9f\x01\x4d\x05\xc7\x78\x4b\x40\xae\x87\xf7\x18\x93\x1f\x63\x72\xed\xea\xaf\x13\x93\xfb\x35\xd5\x36\x2c\x26\x2a\xbf\xce\x17\xa0\xdb\xe8\x5b\x75\x88\x9a\x0e\xf7\xb0\xd6\xbd\x97\xb5\xde\xda\xb3\xa1\x30\xe8\xdd\x17\x78\x64\xca\xbb\x1d\x82\xec\x80\xc0\x4d\xf0\x7d\xce\x48\xd2\xaa\xef\x12\x0b\x02\x89\x7c\xbc\x78\x7b\xb7\x33\xa2\xad\x58\x1d\xe7\xf6\x43\xba\x81\xb5\xb7\x49\x7f\xe7\xe3\xbf\xed\xc0\x77\x3e\x02\xdc\x2d\x22\xec\x77\x4c\x78\xf8\xfc\x0b\x03\x59\x3d\xce\x87\x38\x03\x5c\x25\x67\xef\x7d\xd7\x3d\x00\xd8\x12\x8a\x0a\x9d\xdd\x3d\xfa\x6c\x3a\x19\xf7\xeb\xae\x21\x0c\x85\xb1\x04\x34\xd5\xc1\x71\x61\x89\x55\x18\xb4\xa8\xe8\xc8\x09\x68\xad\x2a\xea\xd4\x0f\x83\x99\x5f\x18\x84\x22\x83\x45\xee\x16\x42\x1f\xf5\x60\xd3\x99\xdf\x1d\xcf\xb8\xbf\x7a\x1c\x5b\xd2\x6e\x45\x86\x9c\x99\xd4\x0f\xc9\x03\x20\x46\xa5\x5d\x05\x60\xe1\x7c\x69\xf7\x09\xbf\x05\x40\x50\x9c\x93\xbc\x8b\x4e\x37\xea\x2f\xd2\xfa\x7d\x84\xc3\x07\xbe\x0d\xd1\x0a\x73\x8f\x57\x21\xee\xfd\x2a\xc4\xa6\x80\x17\xb5\x23\xcc\x97\xee\x21\x90\x78\x3f\xc8\xe3\x68\xc8\xf6\x8d\xd6\xe4\xbf\xc6\x05\xe6\xed\x1e\x68\x68\x5d\x1f\xf7\x3f\xe2\x63\x26\xd4\x52\xa7\x2b\x9c\xad\xeb\x73\x85\xb3\xa5\xc6\x42\x85\x11\xa5\xf6\x4a\x14\xe9\x04\x8d\x18\xce\x42\x08\x73\x41\x79\x4e\x6f\xc8\x34\x86\x7d\x9e\x2d\x0b\xc7\x73\xa8\x62\xad\x62\xf9\xc2\x15\x8b\x87\xb8\x28\xf5\x75\x42\xf7\x01\x54\x91\x18\x42\x00\x86\xb9\x1a\xb7\xe7\x65\x59\x86\x99\x4b\x3f\x75\x2b\xa1\x3e\x22\x27\x6d\x5a\xfb\x5a\xbf\x5d\xf7\xd1\x74\xaa\xcd\x95\xd4\x2c\xf3\x61\x35\xad\x2f\xa8\x70\xa6\x7c\x32\x2b\x90\x8b\xa1\xe0\x4c\xca\x19\x78\xc6\xfa\x6a\x02\xf3\x39\x8f\x34\x08\x95\x09\xce\x08\x41\x90\x85\xe6\x72\x8b\x06\x83\x1c\xc5\x04\xc1\xc9\x04\x32\x6c\x38\x14\xfc\x8b\x12\xdf\x9a\xd4\xb3\x43\x20\xdc\x9c\x33\x56\x5b\xbb\xdb\xfd\xf0\xc7\xe9\xe5\xb3\xde\xa9\xff\x7c\xda\xeb\xdd\x74\xab\x6f\xa7\x21\x9d\xfc\x60\xf9\xe4\xd2\x9f\x75\x29\x39\xf3\xf6\x80\xfa\xfa\x8d\x2f\xe6\x08\x0b\x63\x6d\x29\x71\x53\x6b\x8d\x01\x03\x9d\x34\x8d\xd1\x4c\x85\x45\x60\x0a\xf0\x9a\x0c\xab\x10\x57\x45\x36\xb7\x5f\xee\xcc\xf9\xe9\xf6\x9a\x3e\x36\x55\x91\x6a\x6d\x0e\x4a\x16\x53\xcf\x63\x62\x7c\x4c\x8c\x2e\x31\x3e\xa9\xb6\x16\x4b\x37\xba\x43\x8c\x0e\x47\xb5\x69\x81\x26\x17\xd6\x97\xed\xc2\xf3\x28\x9c\x95\x54\xdf\x6b\x09\xd5\xcf\xc5\x32\x44\xe4\x54\xd5\x5f\xab\x92\x8a\x2f\xa6\x54\x8f\x42\x4e\xc8\x59\x51\xb7\x71\x4c\x2f\x8d\x7c\xb3\x50\x00\x17\x39\x1b\xb9\xa4\x62\x74\xde\xba\xbc\x9b\x4c\x9e\xc7\x2f\xe2\x93\x79\x8b\xf3\x52\xca\x73\x7f\xf1\x25\x81\xf7\xc3\xdf\x34\x9d\x87\xcd\x85\x6f\x11\xca\xb8\xf5\x00\x5e\x1f\xbf\x3e\xee\xbb\x89\xe3\x7f\x2f\x64\xa6\x68\xc5\xcd\x76\x9f\x69\xe7\x8f\x5b\x5f\xe3\x59\x2e\x2b\x19\x79\xce\x54\x56\xcb\x88\x22\x4b\xda\xb0\x11\xc6\x64\xb3\x41\x6c\x90\x50\x39\xdf\xbc\xf9\x79\xdc\xb4\x08\xc2\x63\x97\xcc\xdf\x6c\xd1\xf0\xbf\x00\x00\x00\xff\xff\xb8\xd0\x81\xbe\x78\x2f\x00\x00")

func stacksPrometheusStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksPrometheusStackYaml,
		"stacks/prometheus-stack.yaml",
	)
}

func stacksPrometheusStackYaml() (*asset, error) {
	bytes, err := stacksPrometheusStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/prometheus-stack.yaml", size: 12152, mode: os.FileMode(420), modTime: time.Unix(1547483121, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksRioAutoscalerStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x59\x8e\x1b\x21\x10\xfd\xef\x53\xf0\x67\x29\x32\xde\x14\x45\x33\x9c\x62\x6e\x10\x95\xe1\x4d\x37\x0a\x14\x08\xaa\xbd\x44\x39\x7c\xd4\x9b\x97\xc8\x91\xe6\xaf\xfb\x2d\xd4\xa3\x1e\x36\xf1\xa7\x6f\xab\x69\x94\xa2\x5e\x52\xb5\x14\xa0\x27\x70\xc0\x94\xb2\x89\x05\x2c\x46\xfd\xd1\xe3\xbf\x52\x60\x3a\x06\xe8\x49\x2a\x49\xff\x46\x49\x46\x49\xe9\x31\x0b\x22\x5d\x66\xb6\xcf\xba\x90\xc0\xa8\xfd\x6e\xe6\x86\xe3\xc8\x33\xca\x30\xc4\xf6\xa5\x80\xed\x55\x0b\x95\x16\xa2\x33\x8a\x05\x0b\xb5\x83\x63\xf3\x25\x8b\xc3\x27\xf5\x41\x8c\xda\xcf\xea\x2a\x63\xba\xb3\x67\x97\xce\x46\xfd\xd8\xd5\x99\xc8\xc4\xde\xde\xf1\x05\x16\x6f\x7f\x69\xcf\x82\x72\xa2\x60\xd4\x61\xc1\x9f\xae\xa7\xa5\x2b\xa8\x5d\x0a\xce\xa8\xef\xf1\xa5\xa2\x2d\x64\x31\xdc\xc0\x27\x67\xd4\x21\x36\x4d\x45\x39\x79\x8b\x71\xb7\x2d\x09\xce\x74\x9d\x56\xda\x86\x74\xa4\xf0\x33\xa3\x44\x5f\xab\x4f\x5c\x27\x5c\xab\xd5\x37\x35\xed\x3e\x52\xae\xab\x3b\x88\x13\x58\x6e\x40\x0b\x59\x07\x5f\x65\xdd\x67\x47\x82\xf5\x99\xc4\x76\x6b\x87\x00\x81\x2a\x3e\x6d\x2c\x89\x04\x6c\x7c\xda\x2e\x19\x1e\x9c\x93\xfa\xc1\x3f\x58\xf4\xad\xfc\x17\xe6\x01\x2e\xb0\x29\x46\xb0\x23\x19\x02\xbf\x3c\x4f\xe5\xe4\xea\xbf\x19\x27\x7a\x9e\x04\x76\x39\x79\x96\xff\xf8\x6f\x69\x47\xda\xc7\xf1\x21\x38\xf2\xb5\x23\xde\xbf\xbf\x1f\xb6\x4f\x49\x8b\x71\x38\xdd\x95\x1f\x7d\x08\x1f\x29\x78\x7b\x35\x8a\xc2\x99\xae\xd3\x10\x5c\x72\xaa\x58\x16\xfc\xb6\xdb\x76\x22\x79\x7e\xd9\x31\x12\xbb\x85\x7a\x3e\x7b\x06\xb5\x76\x38\xf6\xed\x12\x77\x6a\xf1\xc6\x0d\xa1\xc1\x4b\x4d\x6f\xbb\x55\xd3\xe0\x22\x28\x4c\xe1\xb1\xfc\x5c\x52\x84\x74\xe8\xe7\x9e\x67\xce\x3c\x10\xdb\xfb\x67\xf3\x37\x00\x00\xff\xff\xaa\x62\x0f\x54\x93\x03\x00\x00")

func stacksRioAutoscalerStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksRioAutoscalerStackYaml,
		"stacks/rio-autoscaler-stack.yaml",
	)
}

func stacksRioAutoscalerStackYaml() (*asset, error) {
	bytes, err := stacksRioAutoscalerStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/rio-autoscaler-stack.yaml", size: 915, mode: os.FileMode(420), modTime: time.Unix(1549987353, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksWebhookStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x31\x6f\xc2\x30\x10\x85\x77\x7e\x85\xc5\x82\x84\x44\x10\x9d\x42\xf6\xaa\x1d\x51\x97\x8e\x91\xe3\x3c\xc2\x29\x8e\x2f\xba\xbb\x84\xf2\xef\x2b\x1a\x02\x6a\x87\x56\xdd\xec\xe7\xfb\xfc\x74\x9f\x42\x46\x0a\xd0\x62\xe1\xdc\x19\xd5\x89\xb9\xbd\x1e\x9d\x6b\x22\x57\x3e\x96\x3d\xa4\x23\x55\xe2\xa4\x53\xbe\x71\xcb\xf5\x3c\x49\xc9\x1b\x4b\x26\xc4\x59\xf0\x66\x11\x19\xf1\xb6\x21\xbb\x3d\x0b\x02\x68\x84\xe8\xf2\xbf\x24\x3e\x10\x06\xbb\x96\xce\xe8\x6a\xed\x02\xa7\x23\x35\x9d\xef\x75\xf5\x08\x31\x22\xd9\x3d\x50\x04\x81\xe9\xd7\x8d\x3a\xdf\xa0\x70\xb5\x27\x3d\xf9\xb4\xdb\xef\x9f\xb6\xdf\xca\x8b\x1a\xe3\x63\xf0\x30\xc4\x78\xe0\x48\xe1\x52\x38\x1f\xcf\xfe\x32\x7d\xd2\xb3\xd8\x7d\xf1\x3c\xcf\xf3\xad\x85\x7e\xb1\x68\x87\x0a\x92\x60\x93\xb7\xe4\x3b\x68\xef\x03\xea\x32\x0c\x6a\xdc\x95\x02\xe5\x41\x02\xca\x1a\x47\x4a\x64\xb3\xbe\x8d\x7b\x21\x7b\x47\xf5\xca\xdc\xbe\xdd\xec\x64\xbf\x29\x19\x77\x3f\xa8\xe7\xd9\xcc\x5f\xd8\x67\x00\x00\x00\xff\xff\x8c\xd0\xe9\x27\xd9\x01\x00\x00")

func stacksWebhookStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksWebhookStackYaml,
		"stacks/webhook-stack.yaml",
	)
}

func stacksWebhookStackYaml() (*asset, error) {
	bytes, err := stacksWebhookStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/webhook-stack.yaml", size: 473, mode: os.FileMode(420), modTime: time.Unix(1550095186, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"stacks/build-stack.yaml":           stacksBuildStackYaml,
	"stacks/cert-manager-stack.yaml":    stacksCertManagerStackYaml,
	"stacks/coredns-stack.yaml":         stacksCorednsStackYaml,
	"stacks/grafana-stack.yaml":         stacksGrafanaStackYaml,
	"stacks/istio-crd-stack.yaml":       stacksIstioCrdStackYaml,
	"stacks/istio-stack.yaml":           stacksIstioStackYaml,
	"stacks/istio-telemetry-stack.yaml": stacksIstioTelemetryStackYaml,
	"stacks/kiali-stack.yaml":           stacksKialiStackYaml,
	"stacks/localstorage-stack.yaml":    stacksLocalstorageStackYaml,
	"stacks/nfs-stack.yaml":             stacksNfsStackYaml,
	"stacks/prometheus-stack.yaml":      stacksPrometheusStackYaml,
	"stacks/rio-autoscaler-stack.yaml":  stacksRioAutoscalerStackYaml,
	"stacks/webhook-stack.yaml":         stacksWebhookStackYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"stacks": &bintree{nil, map[string]*bintree{
		"build-stack.yaml":           &bintree{stacksBuildStackYaml, map[string]*bintree{}},
		"cert-manager-stack.yaml":    &bintree{stacksCertManagerStackYaml, map[string]*bintree{}},
		"coredns-stack.yaml":         &bintree{stacksCorednsStackYaml, map[string]*bintree{}},
		"grafana-stack.yaml":         &bintree{stacksGrafanaStackYaml, map[string]*bintree{}},
		"istio-crd-stack.yaml":       &bintree{stacksIstioCrdStackYaml, map[string]*bintree{}},
		"istio-stack.yaml":           &bintree{stacksIstioStackYaml, map[string]*bintree{}},
		"istio-telemetry-stack.yaml": &bintree{stacksIstioTelemetryStackYaml, map[string]*bintree{}},
		"kiali-stack.yaml":           &bintree{stacksKialiStackYaml, map[string]*bintree{}},
		"localstorage-stack.yaml":    &bintree{stacksLocalstorageStackYaml, map[string]*bintree{}},
		"nfs-stack.yaml":             &bintree{stacksNfsStackYaml, map[string]*bintree{}},
		"prometheus-stack.yaml":      &bintree{stacksPrometheusStackYaml, map[string]*bintree{}},
		"rio-autoscaler-stack.yaml":  &bintree{stacksRioAutoscalerStackYaml, map[string]*bintree{}},
		"webhook-stack.yaml":         &bintree{stacksWebhookStackYaml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
